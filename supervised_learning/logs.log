2023-11-09 22:36:37,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-09 22:36:37,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-09 22:36:37,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-09 22:36:37,387:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-09 22:51:34,728:INFO:PyCaret ClassificationExperiment
2023-11-09 22:51:34,728:INFO:Logging name: clf-default-name
2023-11-09 22:51:34,728:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-09 22:51:34,728:INFO:version 3.1.0
2023-11-09 22:51:34,728:INFO:Initializing setup()
2023-11-09 22:51:34,728:INFO:self.USI: efe4
2023-11-09 22:51:34,728:INFO:self._variable_keys: {'html_param', 'target_param', 'y', 'y_train', 'idx', 'exp_name_log', 'X_test', 'X_train', 'memory', 'logging_param', 'data', '_ml_usecase', 'log_plots_param', 'USI', 'gpu_param', 'fix_imbalance', 'is_multiclass', '_available_plots', 'seed', 'fold_generator', 'exp_id', 'n_jobs_param', 'fold_groups_param', 'fold_shuffle_param', 'y_test', 'pipeline', 'X', 'gpu_n_jobs_param'}
2023-11-09 22:51:34,728:INFO:Checking environment
2023-11-09 22:51:34,728:INFO:python_version: 3.8.18
2023-11-09 22:51:34,728:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-09 22:51:34,728:INFO:machine: AMD64
2023-11-09 22:51:34,728:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-09 22:51:34,735:INFO:Memory: svmem(total=137167351808, available=66947100672, percent=51.2, used=70220251136, free=66947100672)
2023-11-09 22:51:34,735:INFO:Physical Core: 24
2023-11-09 22:51:34,735:INFO:Logical Core: 32
2023-11-09 22:51:34,735:INFO:Checking libraries
2023-11-09 22:51:34,735:INFO:System:
2023-11-09 22:51:34,735:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-09 22:51:34,735:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-09 22:51:34,735:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-09 22:51:34,735:INFO:PyCaret required dependencies:
2023-11-09 22:51:34,753:INFO:                 pip: 23.3
2023-11-09 22:51:34,754:INFO:          setuptools: 68.0.0
2023-11-09 22:51:34,754:INFO:             pycaret: 3.1.0
2023-11-09 22:51:34,754:INFO:             IPython: 8.12.3
2023-11-09 22:51:34,754:INFO:          ipywidgets: 8.1.1
2023-11-09 22:51:34,754:INFO:                tqdm: 4.66.1
2023-11-09 22:51:34,754:INFO:               numpy: 1.23.5
2023-11-09 22:51:34,754:INFO:              pandas: 1.5.3
2023-11-09 22:51:34,754:INFO:              jinja2: 3.1.2
2023-11-09 22:51:34,754:INFO:               scipy: 1.10.1
2023-11-09 22:51:34,754:INFO:              joblib: 1.3.2
2023-11-09 22:51:34,754:INFO:             sklearn: 1.2.2
2023-11-09 22:51:34,754:INFO:                pyod: 1.1.0
2023-11-09 22:51:34,754:INFO:            imblearn: 0.11.0
2023-11-09 22:51:34,754:INFO:   category_encoders: 2.6.2
2023-11-09 22:51:34,754:INFO:            lightgbm: 4.1.0
2023-11-09 22:51:34,754:INFO:               numba: 0.58.1
2023-11-09 22:51:34,754:INFO:            requests: 2.31.0
2023-11-09 22:51:34,754:INFO:          matplotlib: 3.7.3
2023-11-09 22:51:34,754:INFO:          scikitplot: 0.3.7
2023-11-09 22:51:34,754:INFO:         yellowbrick: 1.5
2023-11-09 22:51:34,754:INFO:              plotly: 5.17.0
2023-11-09 22:51:34,754:INFO:    plotly-resampler: Not installed
2023-11-09 22:51:34,754:INFO:             kaleido: 0.2.1
2023-11-09 22:51:34,754:INFO:           schemdraw: 0.15
2023-11-09 22:51:34,754:INFO:         statsmodels: 0.14.0
2023-11-09 22:51:34,754:INFO:              sktime: 0.21.1
2023-11-09 22:51:34,754:INFO:               tbats: 1.1.3
2023-11-09 22:51:34,754:INFO:            pmdarima: 2.0.3
2023-11-09 22:51:34,754:INFO:              psutil: 5.9.6
2023-11-09 22:51:34,754:INFO:          markupsafe: 2.1.3
2023-11-09 22:51:34,754:INFO:             pickle5: Not installed
2023-11-09 22:51:34,754:INFO:         cloudpickle: 3.0.0
2023-11-09 22:51:34,754:INFO:         deprecation: 2.1.0
2023-11-09 22:51:34,754:INFO:              xxhash: 3.4.1
2023-11-09 22:51:34,754:INFO:           wurlitzer: Not installed
2023-11-09 22:51:34,754:INFO:PyCaret optional dependencies:
2023-11-09 22:51:34,825:INFO:                shap: Not installed
2023-11-09 22:51:34,825:INFO:           interpret: Not installed
2023-11-09 22:51:34,825:INFO:                umap: Not installed
2023-11-09 22:51:34,825:INFO:     ydata_profiling: Not installed
2023-11-09 22:51:34,825:INFO:  explainerdashboard: Not installed
2023-11-09 22:51:34,825:INFO:             autoviz: Not installed
2023-11-09 22:51:34,825:INFO:           fairlearn: Not installed
2023-11-09 22:51:34,825:INFO:          deepchecks: Not installed
2023-11-09 22:51:34,825:INFO:             xgboost: 2.0.0
2023-11-09 22:51:34,826:INFO:            catboost: Not installed
2023-11-09 22:51:34,826:INFO:              kmodes: Not installed
2023-11-09 22:51:34,826:INFO:             mlxtend: Not installed
2023-11-09 22:51:34,826:INFO:       statsforecast: Not installed
2023-11-09 22:51:34,826:INFO:        tune_sklearn: Not installed
2023-11-09 22:51:34,826:INFO:                 ray: Not installed
2023-11-09 22:51:34,826:INFO:            hyperopt: Not installed
2023-11-09 22:51:34,826:INFO:              optuna: Not installed
2023-11-09 22:51:34,826:INFO:               skopt: Not installed
2023-11-09 22:51:34,826:INFO:              mlflow: Not installed
2023-11-09 22:51:34,826:INFO:              gradio: Not installed
2023-11-09 22:51:34,826:INFO:             fastapi: Not installed
2023-11-09 22:51:34,826:INFO:             uvicorn: Not installed
2023-11-09 22:51:34,826:INFO:              m2cgen: Not installed
2023-11-09 22:51:34,826:INFO:           evidently: Not installed
2023-11-09 22:51:34,826:INFO:               fugue: Not installed
2023-11-09 22:51:34,826:INFO:           streamlit: Not installed
2023-11-09 22:51:34,826:INFO:             prophet: Not installed
2023-11-09 22:51:34,826:INFO:None
2023-11-09 22:51:34,826:INFO:Set up data.
2023-11-09 22:51:36,260:INFO:Set up folding strategy.
2023-11-09 22:51:36,260:INFO:Set up train/test split.
2023-11-09 22:51:36,260:INFO:Set up data.
2023-11-09 22:51:37,071:INFO:Set up index.
2023-11-09 22:51:37,577:INFO:Assigning column types.
2023-11-09 22:51:38,705:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-09 22:51:38,726:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-09 22:51:38,728:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-09 22:51:38,746:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-09 22:51:38,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-09 22:51:38,768:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-09 22:51:38,768:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-09 22:51:38,781:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-09 22:51:38,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-09 22:51:38,783:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-09 22:51:38,803:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-09 22:51:38,815:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-09 22:51:38,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-09 22:51:38,837:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-09 22:51:38,851:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-09 22:51:38,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-09 22:51:38,852:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-09 22:51:38,885:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-09 22:51:38,886:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-09 22:51:38,920:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-09 22:51:38,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-09 22:51:38,924:INFO:Preparing preprocessing pipeline...
2023-11-09 22:51:39,088:INFO:Set up simple imputation.
2023-11-09 22:51:39,248:INFO:Set up column name cleaning.
2023-11-09 22:51:44,399:INFO:Finished creating preprocessing pipeline.
2023-11-09 22:51:44,402:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Dextrose_5%', 'Phenylephrine',
                                             'Norepinephrine', 'Nitroglycerin',
                                             'HeparinSodium', 'Dopamine',
                                             'Potassium_Chloride',
                                             'Vasopressin',
                                             'Phenylephrine (50/250)',
                                             'Nitroprusside', 'Labetalol',...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-09 22:51:44,402:INFO:Creating final display dataframe.
2023-11-09 22:51:54,033:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           classes
2                   Target type            Binary
3           Original data shape     (989900, 223)
4        Transformed data shape     (989900, 223)
5   Transformed train set shape     (696484, 223)
6    Transformed test set shape     (293416, 223)
7              Numeric features               222
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              efe4
2023-11-09 22:51:54,071:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-09 22:51:54,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-09 22:51:54,107:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-09 22:51:54,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-09 22:51:54,109:INFO:setup() successfully completed in 19.38s...............
2023-11-09 22:52:04,894:INFO:Initializing compare_models()
2023-11-09 22:52:04,895:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001798D338EB0>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001798D338EB0>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-09 22:52:04,895:INFO:Checking exceptions
2023-11-09 22:52:05,681:INFO:Preparing display monitor
2023-11-09 22:52:05,698:INFO:Initializing SVM - Linear Kernel
2023-11-09 22:52:05,698:INFO:Total runtime is 0.0 minutes
2023-11-09 22:52:05,700:INFO:SubProcess create_model() called ==================================
2023-11-09 22:52:05,701:INFO:Initializing create_model()
2023-11-09 22:52:05,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001798D338EB0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017990816340>, model_only=True, return_train_score=False, kwargs={})
2023-11-09 22:52:05,701:INFO:Checking exceptions
2023-11-09 22:52:05,701:INFO:Importing libraries
2023-11-09 22:52:05,701:INFO:Copying training dataset
2023-11-09 22:52:07,034:INFO:Defining folds
2023-11-09 22:52:07,034:INFO:Declaring metric variables
2023-11-09 22:52:07,037:INFO:Importing untrained model
2023-11-09 22:52:07,040:INFO:SVM - Linear Kernel Imported successfully
2023-11-09 22:52:07,043:INFO:Starting cross validation
2023-11-09 22:52:07,044:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-09 22:53:46,544:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-09 22:53:52,511:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-09 22:53:57,135:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-09 22:54:03,055:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-09 22:54:08,293:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-09 22:54:09,989:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-09 22:54:10,113:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-09 22:54:16,152:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-09 22:54:21,539:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-09 22:54:29,053:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-09 22:54:29,459:INFO:Calculating mean and std
2023-11-09 22:54:29,460:INFO:Creating metrics dataframe
2023-11-09 22:54:29,463:INFO:Uploading results into container
2023-11-09 22:54:29,463:INFO:Uploading model into container now
2023-11-09 22:54:29,463:INFO:_master_model_container: 1
2023-11-09 22:54:29,463:INFO:_display_container: 2
2023-11-09 22:54:29,464:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-09 22:54:29,464:INFO:create_model() successfully completed......................................
2023-11-09 22:54:29,542:INFO:SubProcess create_model() end ==================================
2023-11-09 22:54:29,542:INFO:Creating metrics dataframe
2023-11-09 22:54:29,548:INFO:Initializing Logistic Regression
2023-11-09 22:54:29,548:INFO:Total runtime is 2.397506868839264 minutes
2023-11-09 22:54:29,550:INFO:SubProcess create_model() called ==================================
2023-11-09 22:54:29,550:INFO:Initializing create_model()
2023-11-09 22:54:29,550:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001798D338EB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017990816340>, model_only=True, return_train_score=False, kwargs={})
2023-11-09 22:54:29,550:INFO:Checking exceptions
2023-11-09 22:54:29,550:INFO:Importing libraries
2023-11-09 22:54:29,550:INFO:Copying training dataset
2023-11-09 22:54:30,752:INFO:Defining folds
2023-11-09 22:54:30,752:INFO:Declaring metric variables
2023-11-09 22:54:30,754:INFO:Importing untrained model
2023-11-09 22:54:30,756:INFO:Logistic Regression Imported successfully
2023-11-09 22:54:30,759:INFO:Starting cross validation
2023-11-09 22:54:30,760:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-09 23:02:09,292:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-09 23:02:10,989:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-09 23:02:16,998:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-09 23:02:19,198:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-09 23:02:19,281:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-09 23:02:20,668:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-09 23:02:22,201:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-09 23:02:22,467:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-09 23:02:22,840:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-09 23:02:24,051:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-09 23:02:24,860:INFO:Calculating mean and std
2023-11-09 23:02:24,862:INFO:Creating metrics dataframe
2023-11-09 23:02:24,864:INFO:Uploading results into container
2023-11-09 23:02:24,865:INFO:Uploading model into container now
2023-11-09 23:02:24,865:INFO:_master_model_container: 2
2023-11-09 23:02:24,865:INFO:_display_container: 2
2023-11-09 23:02:24,865:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-09 23:02:24,865:INFO:create_model() successfully completed......................................
2023-11-09 23:02:24,942:INFO:SubProcess create_model() end ==================================
2023-11-09 23:02:24,942:INFO:Creating metrics dataframe
2023-11-09 23:02:24,948:INFO:Initializing Decision Tree Classifier
2023-11-09 23:02:24,948:INFO:Total runtime is 10.320835594336192 minutes
2023-11-09 23:02:24,950:INFO:SubProcess create_model() called ==================================
2023-11-09 23:02:24,950:INFO:Initializing create_model()
2023-11-09 23:02:24,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001798D338EB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017990816340>, model_only=True, return_train_score=False, kwargs={})
2023-11-09 23:02:24,951:INFO:Checking exceptions
2023-11-09 23:02:24,951:INFO:Importing libraries
2023-11-09 23:02:24,951:INFO:Copying training dataset
2023-11-09 23:02:26,164:INFO:Defining folds
2023-11-09 23:02:26,165:INFO:Declaring metric variables
2023-11-09 23:02:26,167:INFO:Importing untrained model
2023-11-09 23:02:26,168:INFO:Decision Tree Classifier Imported successfully
2023-11-09 23:02:26,171:INFO:Starting cross validation
2023-11-09 23:02:26,172:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-09 23:03:32,030:INFO:Calculating mean and std
2023-11-09 23:03:32,031:INFO:Creating metrics dataframe
2023-11-09 23:03:32,033:INFO:Uploading results into container
2023-11-09 23:03:32,034:INFO:Uploading model into container now
2023-11-09 23:03:32,034:INFO:_master_model_container: 3
2023-11-09 23:03:32,034:INFO:_display_container: 2
2023-11-09 23:03:32,035:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-11-09 23:03:32,035:INFO:create_model() successfully completed......................................
2023-11-09 23:03:32,108:INFO:SubProcess create_model() end ==================================
2023-11-09 23:03:32,108:INFO:Creating metrics dataframe
2023-11-09 23:03:32,114:INFO:Initializing Light Gradient Boosting Machine
2023-11-09 23:03:32,114:INFO:Total runtime is 11.44026950597763 minutes
2023-11-09 23:03:32,116:INFO:SubProcess create_model() called ==================================
2023-11-09 23:03:32,116:INFO:Initializing create_model()
2023-11-09 23:03:32,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001798D338EB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017990816340>, model_only=True, return_train_score=False, kwargs={})
2023-11-09 23:03:32,116:INFO:Checking exceptions
2023-11-09 23:03:32,116:INFO:Importing libraries
2023-11-09 23:03:32,116:INFO:Copying training dataset
2023-11-09 23:03:33,440:INFO:Defining folds
2023-11-09 23:03:33,440:INFO:Declaring metric variables
2023-11-09 23:03:33,442:INFO:Importing untrained model
2023-11-09 23:03:33,445:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-09 23:03:33,448:INFO:Starting cross validation
2023-11-09 23:03:33,450:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-09 23:04:09,469:INFO:Calculating mean and std
2023-11-09 23:04:09,470:INFO:Creating metrics dataframe
2023-11-09 23:04:09,472:INFO:Uploading results into container
2023-11-09 23:04:09,472:INFO:Uploading model into container now
2023-11-09 23:04:09,473:INFO:_master_model_container: 4
2023-11-09 23:04:09,473:INFO:_display_container: 2
2023-11-09 23:04:09,473:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-09 23:04:09,473:INFO:create_model() successfully completed......................................
2023-11-09 23:04:09,562:INFO:SubProcess create_model() end ==================================
2023-11-09 23:04:09,562:INFO:Creating metrics dataframe
2023-11-09 23:04:09,568:INFO:Initializing Extreme Gradient Boosting
2023-11-09 23:04:09,569:INFO:Total runtime is 12.064522163073221 minutes
2023-11-09 23:04:09,570:INFO:SubProcess create_model() called ==================================
2023-11-09 23:04:09,571:INFO:Initializing create_model()
2023-11-09 23:04:09,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001798D338EB0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000017990816340>, model_only=True, return_train_score=False, kwargs={})
2023-11-09 23:04:09,571:INFO:Checking exceptions
2023-11-09 23:04:09,571:INFO:Importing libraries
2023-11-09 23:04:09,571:INFO:Copying training dataset
2023-11-09 23:04:11,007:INFO:Defining folds
2023-11-09 23:04:11,007:INFO:Declaring metric variables
2023-11-09 23:04:11,009:INFO:Importing untrained model
2023-11-09 23:04:11,012:INFO:Extreme Gradient Boosting Imported successfully
2023-11-09 23:04:11,015:INFO:Starting cross validation
2023-11-09 23:04:11,016:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-09 23:04:57,426:INFO:Calculating mean and std
2023-11-09 23:04:57,427:INFO:Creating metrics dataframe
2023-11-09 23:04:57,429:INFO:Uploading results into container
2023-11-09 23:04:57,429:INFO:Uploading model into container now
2023-11-09 23:04:57,429:INFO:_master_model_container: 5
2023-11-09 23:04:57,429:INFO:_display_container: 2
2023-11-09 23:04:57,430:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-11-09 23:04:57,430:INFO:create_model() successfully completed......................................
2023-11-09 23:04:57,501:INFO:SubProcess create_model() end ==================================
2023-11-09 23:04:57,501:INFO:Creating metrics dataframe
2023-11-09 23:04:57,511:INFO:Initializing create_model()
2023-11-09 23:04:57,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001798D338EB0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-09 23:04:57,511:INFO:Checking exceptions
2023-11-09 23:04:57,512:INFO:Importing libraries
2023-11-09 23:04:57,512:INFO:Copying training dataset
2023-11-09 23:04:58,708:INFO:Defining folds
2023-11-09 23:04:58,708:INFO:Declaring metric variables
2023-11-09 23:04:58,708:INFO:Importing untrained model
2023-11-09 23:04:58,709:INFO:Declaring custom model
2023-11-09 23:04:58,709:INFO:Logistic Regression Imported successfully
2023-11-09 23:04:58,710:INFO:Cross validation set to False
2023-11-09 23:04:58,710:INFO:Fitting Model
2023-11-09 23:06:14,294:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-09 23:06:14,314:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-09 23:06:14,315:INFO:create_model() successfully completed......................................
2023-11-09 23:06:14,437:INFO:_master_model_container: 5
2023-11-09 23:06:14,437:INFO:_display_container: 2
2023-11-09 23:06:14,437:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-09 23:06:14,437:INFO:compare_models() successfully completed......................................
2023-11-17 18:14:28,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 18:14:28,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 18:14:28,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 18:14:28,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-17 18:15:32,893:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_21012\3567181292.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2'].loc[idx]=0

2023-11-17 18:15:32,893:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_21012\3567181292.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2_fillna'].loc[idx]=1

2023-11-17 18:16:06,328:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_21012\3567181292.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2'].loc[idx]=0

2023-11-17 18:16:06,329:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_21012\3567181292.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2_fillna'].loc[idx]=1

2023-11-17 18:18:43,890:INFO:PyCaret ClassificationExperiment
2023-11-17 18:18:43,890:INFO:Logging name: clf-default-name
2023-11-17 18:18:43,890:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 18:18:43,890:INFO:version 3.1.0
2023-11-17 18:18:43,890:INFO:Initializing setup()
2023-11-17 18:18:43,890:INFO:self.USI: ec21
2023-11-17 18:18:43,890:INFO:self._variable_keys: {'_ml_usecase', 'fold_generator', 'y_train', 'fold_shuffle_param', 'fix_imbalance', 'y_test', 'logging_param', 'target_param', 'X_train', 'exp_id', 'y', 'gpu_n_jobs_param', 'seed', 'X', 'is_multiclass', 'gpu_param', 'html_param', 'exp_name_log', 'pipeline', 'X_test', 'fold_groups_param', 'USI', 'data', 'n_jobs_param', '_available_plots', 'log_plots_param', 'memory', 'idx'}
2023-11-17 18:18:43,891:INFO:Checking environment
2023-11-17 18:18:43,891:INFO:python_version: 3.8.18
2023-11-17 18:18:43,891:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-17 18:18:43,891:INFO:machine: AMD64
2023-11-17 18:18:43,891:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-17 18:18:43,893:INFO:Memory: svmem(total=137167351808, available=96006422528, percent=30.0, used=41160929280, free=96006422528)
2023-11-17 18:18:43,893:INFO:Physical Core: 24
2023-11-17 18:18:43,893:INFO:Logical Core: 32
2023-11-17 18:18:43,893:INFO:Checking libraries
2023-11-17 18:18:43,893:INFO:System:
2023-11-17 18:18:43,893:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-17 18:18:43,893:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-17 18:18:43,893:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-17 18:18:43,893:INFO:PyCaret required dependencies:
2023-11-17 18:18:43,913:INFO:                 pip: 23.3
2023-11-17 18:18:43,913:INFO:          setuptools: 68.0.0
2023-11-17 18:18:43,913:INFO:             pycaret: 3.1.0
2023-11-17 18:18:43,913:INFO:             IPython: 8.12.3
2023-11-17 18:18:43,913:INFO:          ipywidgets: 8.1.1
2023-11-17 18:18:43,913:INFO:                tqdm: 4.66.1
2023-11-17 18:18:43,913:INFO:               numpy: 1.23.5
2023-11-17 18:18:43,913:INFO:              pandas: 1.5.3
2023-11-17 18:18:43,913:INFO:              jinja2: 3.1.2
2023-11-17 18:18:43,913:INFO:               scipy: 1.10.1
2023-11-17 18:18:43,913:INFO:              joblib: 1.3.2
2023-11-17 18:18:43,913:INFO:             sklearn: 1.2.2
2023-11-17 18:18:43,913:INFO:                pyod: 1.1.0
2023-11-17 18:18:43,913:INFO:            imblearn: 0.11.0
2023-11-17 18:18:43,913:INFO:   category_encoders: 2.6.2
2023-11-17 18:18:43,913:INFO:            lightgbm: 4.1.0
2023-11-17 18:18:43,913:INFO:               numba: 0.58.1
2023-11-17 18:18:43,913:INFO:            requests: 2.31.0
2023-11-17 18:18:43,913:INFO:          matplotlib: 3.7.3
2023-11-17 18:18:43,913:INFO:          scikitplot: 0.3.7
2023-11-17 18:18:43,913:INFO:         yellowbrick: 1.5
2023-11-17 18:18:43,913:INFO:              plotly: 5.17.0
2023-11-17 18:18:43,913:INFO:    plotly-resampler: Not installed
2023-11-17 18:18:43,913:INFO:             kaleido: 0.2.1
2023-11-17 18:18:43,913:INFO:           schemdraw: 0.15
2023-11-17 18:18:43,914:INFO:         statsmodels: 0.14.0
2023-11-17 18:18:43,914:INFO:              sktime: 0.21.1
2023-11-17 18:18:43,914:INFO:               tbats: 1.1.3
2023-11-17 18:18:43,914:INFO:            pmdarima: 2.0.3
2023-11-17 18:18:43,914:INFO:              psutil: 5.9.6
2023-11-17 18:18:43,914:INFO:          markupsafe: 2.1.3
2023-11-17 18:18:43,914:INFO:             pickle5: Not installed
2023-11-17 18:18:43,914:INFO:         cloudpickle: 3.0.0
2023-11-17 18:18:43,914:INFO:         deprecation: 2.1.0
2023-11-17 18:18:43,914:INFO:              xxhash: 3.4.1
2023-11-17 18:18:43,914:INFO:           wurlitzer: Not installed
2023-11-17 18:18:43,914:INFO:PyCaret optional dependencies:
2023-11-17 18:18:44,004:INFO:                shap: Not installed
2023-11-17 18:18:44,004:INFO:           interpret: Not installed
2023-11-17 18:18:44,004:INFO:                umap: Not installed
2023-11-17 18:18:44,004:INFO:     ydata_profiling: Not installed
2023-11-17 18:18:44,004:INFO:  explainerdashboard: Not installed
2023-11-17 18:18:44,004:INFO:             autoviz: Not installed
2023-11-17 18:18:44,004:INFO:           fairlearn: Not installed
2023-11-17 18:18:44,004:INFO:          deepchecks: Not installed
2023-11-17 18:18:44,004:INFO:             xgboost: 2.0.0
2023-11-17 18:18:44,004:INFO:            catboost: Not installed
2023-11-17 18:18:44,004:INFO:              kmodes: Not installed
2023-11-17 18:18:44,004:INFO:             mlxtend: Not installed
2023-11-17 18:18:44,004:INFO:       statsforecast: Not installed
2023-11-17 18:18:44,004:INFO:        tune_sklearn: Not installed
2023-11-17 18:18:44,004:INFO:                 ray: Not installed
2023-11-17 18:18:44,005:INFO:            hyperopt: Not installed
2023-11-17 18:18:44,005:INFO:              optuna: Not installed
2023-11-17 18:18:44,005:INFO:               skopt: Not installed
2023-11-17 18:18:44,005:INFO:              mlflow: Not installed
2023-11-17 18:18:44,005:INFO:              gradio: Not installed
2023-11-17 18:18:44,005:INFO:             fastapi: Not installed
2023-11-17 18:18:44,005:INFO:             uvicorn: Not installed
2023-11-17 18:18:44,005:INFO:              m2cgen: Not installed
2023-11-17 18:18:44,005:INFO:           evidently: Not installed
2023-11-17 18:18:44,005:INFO:               fugue: Not installed
2023-11-17 18:18:44,005:INFO:           streamlit: Not installed
2023-11-17 18:18:44,005:INFO:             prophet: Not installed
2023-11-17 18:18:44,005:INFO:None
2023-11-17 18:18:44,005:INFO:Set up data.
2023-11-17 18:18:44,863:INFO:Set up folding strategy.
2023-11-17 18:18:44,863:INFO:Set up train/test split.
2023-11-17 18:18:44,863:INFO:Set up data.
2023-11-17 18:18:45,352:INFO:Set up index.
2023-11-17 18:18:45,698:INFO:Assigning column types.
2023-11-17 18:18:46,415:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 18:18:46,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 18:18:46,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:18:46,458:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:18:46,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:18:46,481:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 18:18:46,481:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:18:46,495:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:18:46,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:18:46,497:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 18:18:46,519:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:18:46,532:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:18:46,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:18:46,555:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:18:46,568:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:18:46,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:18:46,569:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 18:18:46,604:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:18:46,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:18:46,639:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:18:46,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:18:46,643:INFO:Preparing preprocessing pipeline...
2023-11-17 18:18:46,754:INFO:Set up simple imputation.
2023-11-17 18:18:46,868:INFO:Set up column name cleaning.
2023-11-17 18:19:34,259:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_21012\3646303665.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2'].loc[idx]=0

2023-11-17 18:19:34,261:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_21012\3646303665.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2_fillna'].loc[idx]=1

2023-11-17 18:19:47,463:INFO:PyCaret ClassificationExperiment
2023-11-17 18:19:47,464:INFO:Logging name: clf-default-name
2023-11-17 18:19:47,464:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 18:19:47,464:INFO:version 3.1.0
2023-11-17 18:19:47,464:INFO:Initializing setup()
2023-11-17 18:19:47,464:INFO:self.USI: edfb
2023-11-17 18:19:47,464:INFO:self._variable_keys: {'_ml_usecase', 'fold_generator', 'y_train', 'fold_shuffle_param', 'fix_imbalance', 'y_test', 'logging_param', 'target_param', 'X_train', 'exp_id', 'y', 'gpu_n_jobs_param', 'seed', 'X', 'is_multiclass', 'gpu_param', 'html_param', 'exp_name_log', 'pipeline', 'X_test', 'fold_groups_param', 'USI', 'data', 'n_jobs_param', '_available_plots', 'log_plots_param', 'memory', 'idx'}
2023-11-17 18:19:47,464:INFO:Checking environment
2023-11-17 18:19:47,464:INFO:python_version: 3.8.18
2023-11-17 18:19:47,464:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-17 18:19:47,464:INFO:machine: AMD64
2023-11-17 18:19:47,464:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-17 18:19:47,466:INFO:Memory: svmem(total=137167351808, available=99560378368, percent=27.4, used=37606973440, free=99560378368)
2023-11-17 18:19:47,466:INFO:Physical Core: 24
2023-11-17 18:19:47,466:INFO:Logical Core: 32
2023-11-17 18:19:47,466:INFO:Checking libraries
2023-11-17 18:19:47,466:INFO:System:
2023-11-17 18:19:47,466:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-17 18:19:47,467:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-17 18:19:47,467:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-17 18:19:47,467:INFO:PyCaret required dependencies:
2023-11-17 18:19:47,467:INFO:                 pip: 23.3
2023-11-17 18:19:47,467:INFO:          setuptools: 68.0.0
2023-11-17 18:19:47,467:INFO:             pycaret: 3.1.0
2023-11-17 18:19:47,467:INFO:             IPython: 8.12.3
2023-11-17 18:19:47,467:INFO:          ipywidgets: 8.1.1
2023-11-17 18:19:47,467:INFO:                tqdm: 4.66.1
2023-11-17 18:19:47,467:INFO:               numpy: 1.23.5
2023-11-17 18:19:47,467:INFO:              pandas: 1.5.3
2023-11-17 18:19:47,467:INFO:              jinja2: 3.1.2
2023-11-17 18:19:47,467:INFO:               scipy: 1.10.1
2023-11-17 18:19:47,467:INFO:              joblib: 1.3.2
2023-11-17 18:19:47,467:INFO:             sklearn: 1.2.2
2023-11-17 18:19:47,467:INFO:                pyod: 1.1.0
2023-11-17 18:19:47,467:INFO:            imblearn: 0.11.0
2023-11-17 18:19:47,467:INFO:   category_encoders: 2.6.2
2023-11-17 18:19:47,467:INFO:            lightgbm: 4.1.0
2023-11-17 18:19:47,467:INFO:               numba: 0.58.1
2023-11-17 18:19:47,467:INFO:            requests: 2.31.0
2023-11-17 18:19:47,467:INFO:          matplotlib: 3.7.3
2023-11-17 18:19:47,467:INFO:          scikitplot: 0.3.7
2023-11-17 18:19:47,467:INFO:         yellowbrick: 1.5
2023-11-17 18:19:47,467:INFO:              plotly: 5.17.0
2023-11-17 18:19:47,467:INFO:    plotly-resampler: Not installed
2023-11-17 18:19:47,467:INFO:             kaleido: 0.2.1
2023-11-17 18:19:47,467:INFO:           schemdraw: 0.15
2023-11-17 18:19:47,467:INFO:         statsmodels: 0.14.0
2023-11-17 18:19:47,467:INFO:              sktime: 0.21.1
2023-11-17 18:19:47,467:INFO:               tbats: 1.1.3
2023-11-17 18:19:47,467:INFO:            pmdarima: 2.0.3
2023-11-17 18:19:47,467:INFO:              psutil: 5.9.6
2023-11-17 18:19:47,467:INFO:          markupsafe: 2.1.3
2023-11-17 18:19:47,467:INFO:             pickle5: Not installed
2023-11-17 18:19:47,467:INFO:         cloudpickle: 3.0.0
2023-11-17 18:19:47,467:INFO:         deprecation: 2.1.0
2023-11-17 18:19:47,467:INFO:              xxhash: 3.4.1
2023-11-17 18:19:47,467:INFO:           wurlitzer: Not installed
2023-11-17 18:19:47,467:INFO:PyCaret optional dependencies:
2023-11-17 18:19:47,467:INFO:                shap: Not installed
2023-11-17 18:19:47,467:INFO:           interpret: Not installed
2023-11-17 18:19:47,467:INFO:                umap: Not installed
2023-11-17 18:19:47,467:INFO:     ydata_profiling: Not installed
2023-11-17 18:19:47,467:INFO:  explainerdashboard: Not installed
2023-11-17 18:19:47,467:INFO:             autoviz: Not installed
2023-11-17 18:19:47,467:INFO:           fairlearn: Not installed
2023-11-17 18:19:47,467:INFO:          deepchecks: Not installed
2023-11-17 18:19:47,467:INFO:             xgboost: 2.0.0
2023-11-17 18:19:47,467:INFO:            catboost: Not installed
2023-11-17 18:19:47,468:INFO:              kmodes: Not installed
2023-11-17 18:19:47,468:INFO:             mlxtend: Not installed
2023-11-17 18:19:47,468:INFO:       statsforecast: Not installed
2023-11-17 18:19:47,468:INFO:        tune_sklearn: Not installed
2023-11-17 18:19:47,468:INFO:                 ray: Not installed
2023-11-17 18:19:47,468:INFO:            hyperopt: Not installed
2023-11-17 18:19:47,468:INFO:              optuna: Not installed
2023-11-17 18:19:47,468:INFO:               skopt: Not installed
2023-11-17 18:19:47,468:INFO:              mlflow: Not installed
2023-11-17 18:19:47,468:INFO:              gradio: Not installed
2023-11-17 18:19:47,468:INFO:             fastapi: Not installed
2023-11-17 18:19:47,468:INFO:             uvicorn: Not installed
2023-11-17 18:19:47,468:INFO:              m2cgen: Not installed
2023-11-17 18:19:47,468:INFO:           evidently: Not installed
2023-11-17 18:19:47,468:INFO:               fugue: Not installed
2023-11-17 18:19:47,468:INFO:           streamlit: Not installed
2023-11-17 18:19:47,468:INFO:             prophet: Not installed
2023-11-17 18:19:47,468:INFO:None
2023-11-17 18:19:47,468:INFO:Set up data.
2023-11-17 18:19:48,237:INFO:Set up folding strategy.
2023-11-17 18:19:48,237:INFO:Set up train/test split.
2023-11-17 18:19:48,237:INFO:Set up data.
2023-11-17 18:19:48,734:INFO:Set up index.
2023-11-17 18:19:49,025:INFO:Assigning column types.
2023-11-17 18:19:49,715:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 18:19:49,737:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 18:19:49,737:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:19:49,750:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:19:49,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:19:49,773:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 18:19:49,773:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:19:49,785:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:19:49,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:19:49,786:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 18:19:49,807:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:19:49,820:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:19:49,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:19:49,842:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:19:49,856:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:19:49,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:19:49,857:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 18:19:49,892:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:19:49,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:19:49,928:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:19:49,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:19:49,930:INFO:Preparing preprocessing pipeline...
2023-11-17 18:19:50,024:INFO:Set up simple imputation.
2023-11-17 18:19:50,117:INFO:Set up column name cleaning.
2023-11-17 18:19:53,127:INFO:Finished creating preprocessing pipeline.
2023-11-17 18:19:53,130:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0',
                                             'Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrin...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-17 18:19:53,130:INFO:Creating final display dataframe.
2023-11-17 18:19:58,782:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           classes
2                   Target type            Binary
3           Original data shape     (592693, 224)
4        Transformed data shape     (592693, 224)
5   Transformed train set shape     (410446, 224)
6    Transformed test set shape     (182247, 224)
7              Numeric features               223
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              edfb
2023-11-17 18:19:58,820:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:19:58,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:19:58,857:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:19:58,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:19:58,859:INFO:setup() successfully completed in 11.4s...............
2023-11-17 18:20:01,084:INFO:Initializing compare_models()
2023-11-17 18:20:01,084:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000010BF5C77D90>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000010BF5C77D90>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-17 18:20:01,085:INFO:Checking exceptions
2023-11-17 18:20:01,579:INFO:Preparing display monitor
2023-11-17 18:20:01,595:INFO:Initializing SVM - Linear Kernel
2023-11-17 18:20:01,595:INFO:Total runtime is 0.0 minutes
2023-11-17 18:20:01,597:INFO:SubProcess create_model() called ==================================
2023-11-17 18:20:01,597:INFO:Initializing create_model()
2023-11-17 18:20:01,597:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000010BF5C77D90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000010BF60F6160>, model_only=True, return_train_score=False, kwargs={})
2023-11-17 18:20:01,597:INFO:Checking exceptions
2023-11-17 18:20:01,597:INFO:Importing libraries
2023-11-17 18:20:01,598:INFO:Copying training dataset
2023-11-17 18:20:02,330:INFO:Defining folds
2023-11-17 18:20:02,330:INFO:Declaring metric variables
2023-11-17 18:20:02,332:INFO:Importing untrained model
2023-11-17 18:20:02,335:INFO:SVM - Linear Kernel Imported successfully
2023-11-17 18:20:02,338:INFO:Starting cross validation
2023-11-17 18:20:02,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 18:21:53,293:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 18:21:53,304:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 18:21:57,674:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 18:22:04,138:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 18:22:04,148:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 18:22:04,501:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 18:22:06,782:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 18:22:16,444:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 18:22:16,453:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 18:22:17,942:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 18:22:17,951:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 18:22:19,000:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 18:22:19,010:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 18:22:23,672:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 18:22:23,681:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-17 18:22:30,354:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-17 18:22:30,720:INFO:Calculating mean and std
2023-11-17 18:22:30,721:INFO:Creating metrics dataframe
2023-11-17 18:22:30,724:INFO:Uploading results into container
2023-11-17 18:22:30,724:INFO:Uploading model into container now
2023-11-17 18:22:30,724:INFO:_master_model_container: 1
2023-11-17 18:22:30,724:INFO:_display_container: 2
2023-11-17 18:22:30,724:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-17 18:22:30,724:INFO:create_model() successfully completed......................................
2023-11-17 18:22:30,806:INFO:SubProcess create_model() end ==================================
2023-11-17 18:22:30,807:INFO:Creating metrics dataframe
2023-11-17 18:22:30,811:INFO:Initializing Logistic Regression
2023-11-17 18:22:30,811:INFO:Total runtime is 2.486924425760905 minutes
2023-11-17 18:22:30,813:INFO:SubProcess create_model() called ==================================
2023-11-17 18:22:30,813:INFO:Initializing create_model()
2023-11-17 18:22:30,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000010BF5C77D90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000010BF60F6160>, model_only=True, return_train_score=False, kwargs={})
2023-11-17 18:22:30,813:INFO:Checking exceptions
2023-11-17 18:22:30,813:INFO:Importing libraries
2023-11-17 18:22:30,813:INFO:Copying training dataset
2023-11-17 18:22:31,771:INFO:Defining folds
2023-11-17 18:22:31,771:INFO:Declaring metric variables
2023-11-17 18:22:31,774:INFO:Importing untrained model
2023-11-17 18:22:31,776:INFO:Logistic Regression Imported successfully
2023-11-17 18:22:31,779:INFO:Starting cross validation
2023-11-17 18:22:31,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-17 18:23:54,005:INFO:PyCaret ClassificationExperiment
2023-11-17 18:23:54,005:INFO:Logging name: clf-default-name
2023-11-17 18:23:54,005:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-17 18:23:54,005:INFO:version 3.1.0
2023-11-17 18:23:54,005:INFO:Initializing setup()
2023-11-17 18:23:54,005:INFO:self.USI: 3c7e
2023-11-17 18:23:54,005:INFO:self._variable_keys: {'_ml_usecase', 'fold_generator', 'y_train', 'fold_shuffle_param', 'fix_imbalance', 'y_test', 'logging_param', 'target_param', 'X_train', 'exp_id', 'y', 'gpu_n_jobs_param', 'seed', 'X', 'is_multiclass', 'gpu_param', 'html_param', 'exp_name_log', 'pipeline', 'X_test', 'fold_groups_param', 'USI', 'data', 'n_jobs_param', '_available_plots', 'log_plots_param', 'memory', 'idx'}
2023-11-17 18:23:54,005:INFO:Checking environment
2023-11-17 18:23:54,005:INFO:python_version: 3.8.18
2023-11-17 18:23:54,005:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-17 18:23:54,005:INFO:machine: AMD64
2023-11-17 18:23:54,005:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-17 18:23:54,005:INFO:Memory: svmem(total=137167351808, available=97386938368, percent=29.0, used=39780413440, free=97386938368)
2023-11-17 18:23:54,005:INFO:Physical Core: 24
2023-11-17 18:23:54,005:INFO:Logical Core: 32
2023-11-17 18:23:54,005:INFO:Checking libraries
2023-11-17 18:23:54,005:INFO:System:
2023-11-17 18:23:54,005:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-17 18:23:54,005:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-17 18:23:54,005:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-17 18:23:54,005:INFO:PyCaret required dependencies:
2023-11-17 18:23:54,005:INFO:                 pip: 23.3
2023-11-17 18:23:54,005:INFO:          setuptools: 68.0.0
2023-11-17 18:23:54,005:INFO:             pycaret: 3.1.0
2023-11-17 18:23:54,005:INFO:             IPython: 8.12.3
2023-11-17 18:23:54,005:INFO:          ipywidgets: 8.1.1
2023-11-17 18:23:54,005:INFO:                tqdm: 4.66.1
2023-11-17 18:23:54,005:INFO:               numpy: 1.23.5
2023-11-17 18:23:54,005:INFO:              pandas: 1.5.3
2023-11-17 18:23:54,005:INFO:              jinja2: 3.1.2
2023-11-17 18:23:54,005:INFO:               scipy: 1.10.1
2023-11-17 18:23:54,005:INFO:              joblib: 1.3.2
2023-11-17 18:23:54,005:INFO:             sklearn: 1.2.2
2023-11-17 18:23:54,005:INFO:                pyod: 1.1.0
2023-11-17 18:23:54,005:INFO:            imblearn: 0.11.0
2023-11-17 18:23:54,005:INFO:   category_encoders: 2.6.2
2023-11-17 18:23:54,005:INFO:            lightgbm: 4.1.0
2023-11-17 18:23:54,005:INFO:               numba: 0.58.1
2023-11-17 18:23:54,005:INFO:            requests: 2.31.0
2023-11-17 18:23:54,005:INFO:          matplotlib: 3.7.3
2023-11-17 18:23:54,005:INFO:          scikitplot: 0.3.7
2023-11-17 18:23:54,005:INFO:         yellowbrick: 1.5
2023-11-17 18:23:54,005:INFO:              plotly: 5.17.0
2023-11-17 18:23:54,005:INFO:    plotly-resampler: Not installed
2023-11-17 18:23:54,005:INFO:             kaleido: 0.2.1
2023-11-17 18:23:54,005:INFO:           schemdraw: 0.15
2023-11-17 18:23:54,005:INFO:         statsmodels: 0.14.0
2023-11-17 18:23:54,005:INFO:              sktime: 0.21.1
2023-11-17 18:23:54,005:INFO:               tbats: 1.1.3
2023-11-17 18:23:54,005:INFO:            pmdarima: 2.0.3
2023-11-17 18:23:54,005:INFO:              psutil: 5.9.6
2023-11-17 18:23:54,005:INFO:          markupsafe: 2.1.3
2023-11-17 18:23:54,005:INFO:             pickle5: Not installed
2023-11-17 18:23:54,005:INFO:         cloudpickle: 3.0.0
2023-11-17 18:23:54,005:INFO:         deprecation: 2.1.0
2023-11-17 18:23:54,005:INFO:              xxhash: 3.4.1
2023-11-17 18:23:54,005:INFO:           wurlitzer: Not installed
2023-11-17 18:23:54,005:INFO:PyCaret optional dependencies:
2023-11-17 18:23:54,005:INFO:                shap: Not installed
2023-11-17 18:23:54,005:INFO:           interpret: Not installed
2023-11-17 18:23:54,005:INFO:                umap: Not installed
2023-11-17 18:23:54,005:INFO:     ydata_profiling: Not installed
2023-11-17 18:23:54,005:INFO:  explainerdashboard: Not installed
2023-11-17 18:23:54,005:INFO:             autoviz: Not installed
2023-11-17 18:23:54,005:INFO:           fairlearn: Not installed
2023-11-17 18:23:54,005:INFO:          deepchecks: Not installed
2023-11-17 18:23:54,005:INFO:             xgboost: 2.0.0
2023-11-17 18:23:54,005:INFO:            catboost: Not installed
2023-11-17 18:23:54,005:INFO:              kmodes: Not installed
2023-11-17 18:23:54,005:INFO:             mlxtend: Not installed
2023-11-17 18:23:54,005:INFO:       statsforecast: Not installed
2023-11-17 18:23:54,005:INFO:        tune_sklearn: Not installed
2023-11-17 18:23:54,005:INFO:                 ray: Not installed
2023-11-17 18:23:54,005:INFO:            hyperopt: Not installed
2023-11-17 18:23:54,005:INFO:              optuna: Not installed
2023-11-17 18:23:54,005:INFO:               skopt: Not installed
2023-11-17 18:23:54,005:INFO:              mlflow: Not installed
2023-11-17 18:23:54,005:INFO:              gradio: Not installed
2023-11-17 18:23:54,005:INFO:             fastapi: Not installed
2023-11-17 18:23:54,005:INFO:             uvicorn: Not installed
2023-11-17 18:23:54,005:INFO:              m2cgen: Not installed
2023-11-17 18:23:54,005:INFO:           evidently: Not installed
2023-11-17 18:23:54,005:INFO:               fugue: Not installed
2023-11-17 18:23:54,005:INFO:           streamlit: Not installed
2023-11-17 18:23:54,005:INFO:             prophet: Not installed
2023-11-17 18:23:54,005:INFO:None
2023-11-17 18:23:54,005:INFO:Set up data.
2023-11-17 18:23:54,829:INFO:Set up folding strategy.
2023-11-17 18:23:54,829:INFO:Set up train/test split.
2023-11-17 18:23:54,830:INFO:Set up data.
2023-11-17 18:23:55,325:INFO:Set up index.
2023-11-17 18:23:55,614:INFO:Assigning column types.
2023-11-17 18:23:56,312:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-17 18:23:56,333:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 18:23:56,334:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:23:56,346:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:23:56,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:23:56,369:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-17 18:23:56,369:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:23:56,383:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:23:56,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:23:56,384:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-17 18:23:56,405:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:23:56,418:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:23:56,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:23:56,442:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-17 18:23:56,455:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:23:56,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:23:56,456:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-17 18:23:56,492:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:23:56,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:23:56,529:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-17 18:23:56,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-17 18:23:56,531:INFO:Preparing preprocessing pipeline...
2023-11-17 18:23:56,626:INFO:Set up simple imputation.
2023-11-17 18:23:56,627:INFO:Set up imbalanced handling.
2023-11-17 18:23:56,720:INFO:Set up column name cleaning.
2023-11-18 20:34:16,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-18 20:34:16,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-18 20:34:16,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-18 20:34:16,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-18 20:34:31,300:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_24724\3646303665.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2'].loc[idx]=0

2023-11-18 20:34:31,301:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_24724\3646303665.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2_fillna'].loc[idx]=1

2023-11-18 20:46:32,025:INFO:PyCaret ClassificationExperiment
2023-11-18 20:46:32,025:INFO:Logging name: clf-default-name
2023-11-18 20:46:32,025:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-18 20:46:32,025:INFO:version 3.1.0
2023-11-18 20:46:32,025:INFO:Initializing setup()
2023-11-18 20:46:32,025:INFO:self.USI: 9613
2023-11-18 20:46:32,025:INFO:self._variable_keys: {'logging_param', 'exp_name_log', '_ml_usecase', 'y_train', 'memory', 'data', '_available_plots', 'pipeline', 'target_param', 'log_plots_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'y', 'X', 'idx', 'fold_groups_param', 'USI', 'fold_shuffle_param', 'X_test', 'is_multiclass', 'gpu_param', 'X_train', 'seed', 'y_test', 'fix_imbalance', 'html_param', 'exp_id'}
2023-11-18 20:46:32,025:INFO:Checking environment
2023-11-18 20:46:32,025:INFO:python_version: 3.8.18
2023-11-18 20:46:32,025:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-18 20:46:32,025:INFO:machine: AMD64
2023-11-18 20:46:32,025:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-18 20:46:32,028:INFO:Memory: svmem(total=137167351808, available=72166699008, percent=47.4, used=65000652800, free=72166699008)
2023-11-18 20:46:32,028:INFO:Physical Core: 24
2023-11-18 20:46:32,028:INFO:Logical Core: 32
2023-11-18 20:46:32,028:INFO:Checking libraries
2023-11-18 20:46:32,028:INFO:System:
2023-11-18 20:46:32,028:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-18 20:46:32,028:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-18 20:46:32,028:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-18 20:46:32,028:INFO:PyCaret required dependencies:
2023-11-18 20:46:32,042:INFO:                 pip: 23.3
2023-11-18 20:46:32,042:INFO:          setuptools: 68.0.0
2023-11-18 20:46:32,042:INFO:             pycaret: 3.1.0
2023-11-18 20:46:32,042:INFO:             IPython: 8.12.3
2023-11-18 20:46:32,042:INFO:          ipywidgets: 8.1.1
2023-11-18 20:46:32,042:INFO:                tqdm: 4.66.1
2023-11-18 20:46:32,042:INFO:               numpy: 1.23.5
2023-11-18 20:46:32,042:INFO:              pandas: 1.5.3
2023-11-18 20:46:32,042:INFO:              jinja2: 3.1.2
2023-11-18 20:46:32,042:INFO:               scipy: 1.10.1
2023-11-18 20:46:32,042:INFO:              joblib: 1.3.2
2023-11-18 20:46:32,042:INFO:             sklearn: 1.2.2
2023-11-18 20:46:32,042:INFO:                pyod: 1.1.0
2023-11-18 20:46:32,042:INFO:            imblearn: 0.11.0
2023-11-18 20:46:32,042:INFO:   category_encoders: 2.6.2
2023-11-18 20:46:32,042:INFO:            lightgbm: 4.1.0
2023-11-18 20:46:32,042:INFO:               numba: 0.58.1
2023-11-18 20:46:32,042:INFO:            requests: 2.31.0
2023-11-18 20:46:32,042:INFO:          matplotlib: 3.7.3
2023-11-18 20:46:32,043:INFO:          scikitplot: 0.3.7
2023-11-18 20:46:32,043:INFO:         yellowbrick: 1.5
2023-11-18 20:46:32,043:INFO:              plotly: 5.17.0
2023-11-18 20:46:32,043:INFO:    plotly-resampler: Not installed
2023-11-18 20:46:32,043:INFO:             kaleido: 0.2.1
2023-11-18 20:46:32,043:INFO:           schemdraw: 0.15
2023-11-18 20:46:32,043:INFO:         statsmodels: 0.14.0
2023-11-18 20:46:32,043:INFO:              sktime: 0.21.1
2023-11-18 20:46:32,043:INFO:               tbats: 1.1.3
2023-11-18 20:46:32,043:INFO:            pmdarima: 2.0.3
2023-11-18 20:46:32,043:INFO:              psutil: 5.9.6
2023-11-18 20:46:32,043:INFO:          markupsafe: 2.1.3
2023-11-18 20:46:32,043:INFO:             pickle5: Not installed
2023-11-18 20:46:32,043:INFO:         cloudpickle: 3.0.0
2023-11-18 20:46:32,043:INFO:         deprecation: 2.1.0
2023-11-18 20:46:32,043:INFO:              xxhash: 3.4.1
2023-11-18 20:46:32,043:INFO:           wurlitzer: Not installed
2023-11-18 20:46:32,043:INFO:PyCaret optional dependencies:
2023-11-18 20:46:32,114:INFO:                shap: Not installed
2023-11-18 20:46:32,114:INFO:           interpret: Not installed
2023-11-18 20:46:32,114:INFO:                umap: Not installed
2023-11-18 20:46:32,114:INFO:     ydata_profiling: Not installed
2023-11-18 20:46:32,114:INFO:  explainerdashboard: Not installed
2023-11-18 20:46:32,114:INFO:             autoviz: Not installed
2023-11-18 20:46:32,114:INFO:           fairlearn: Not installed
2023-11-18 20:46:32,114:INFO:          deepchecks: Not installed
2023-11-18 20:46:32,114:INFO:             xgboost: 2.0.0
2023-11-18 20:46:32,114:INFO:            catboost: Not installed
2023-11-18 20:46:32,114:INFO:              kmodes: Not installed
2023-11-18 20:46:32,115:INFO:             mlxtend: Not installed
2023-11-18 20:46:32,115:INFO:       statsforecast: Not installed
2023-11-18 20:46:32,115:INFO:        tune_sklearn: Not installed
2023-11-18 20:46:32,115:INFO:                 ray: Not installed
2023-11-18 20:46:32,115:INFO:            hyperopt: Not installed
2023-11-18 20:46:32,115:INFO:              optuna: Not installed
2023-11-18 20:46:32,115:INFO:               skopt: Not installed
2023-11-18 20:46:32,115:INFO:              mlflow: Not installed
2023-11-18 20:46:32,115:INFO:              gradio: Not installed
2023-11-18 20:46:32,115:INFO:             fastapi: Not installed
2023-11-18 20:46:32,115:INFO:             uvicorn: Not installed
2023-11-18 20:46:32,115:INFO:              m2cgen: Not installed
2023-11-18 20:46:32,115:INFO:           evidently: Not installed
2023-11-18 20:46:32,115:INFO:               fugue: Not installed
2023-11-18 20:46:32,115:INFO:           streamlit: Not installed
2023-11-18 20:46:32,115:INFO:             prophet: Not installed
2023-11-18 20:46:32,115:INFO:None
2023-11-18 20:46:32,115:INFO:Set up data.
2023-11-18 20:46:33,727:INFO:Set up folding strategy.
2023-11-18 20:46:33,727:INFO:Set up train/test split.
2023-11-18 20:46:33,727:INFO:Set up data.
2023-11-18 20:46:34,365:INFO:Set up index.
2023-11-18 20:46:34,877:INFO:Assigning column types.
2023-11-18 20:46:36,144:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-18 20:46:36,165:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-18 20:46:36,166:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 20:46:36,182:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 20:46:36,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 20:46:36,205:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-18 20:46:36,205:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 20:46:36,218:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 20:46:36,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 20:46:36,219:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-18 20:46:36,240:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 20:46:36,253:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 20:46:36,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 20:46:36,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 20:46:36,289:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 20:46:36,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 20:46:36,290:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-18 20:46:36,324:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 20:46:36,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 20:46:36,358:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 20:46:36,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 20:46:36,361:INFO:Preparing preprocessing pipeline...
2023-11-18 20:46:36,548:INFO:Set up simple imputation.
2023-11-18 20:46:36,732:INFO:Set up column name cleaning.
2023-11-18 20:46:42,704:INFO:Finished creating preprocessing pipeline.
2023-11-18 20:46:42,708:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             '...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-18 20:46:42,708:INFO:Creating final display dataframe.
2023-11-18 20:46:54,550:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           classes
2                   Target type            Binary
3           Original data shape     (969805, 223)
4        Transformed data shape     (969805, 223)
5   Transformed train set shape     (787558, 223)
6    Transformed test set shape     (182247, 223)
7              Numeric features               222
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              9613
2023-11-18 20:46:54,588:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 20:46:54,590:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 20:46:54,625:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 20:46:54,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 20:46:54,627:INFO:setup() successfully completed in 22.61s...............
2023-11-18 20:47:01,064:INFO:Initializing compare_models()
2023-11-18 20:47:01,064:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-18 20:47:01,064:INFO:Checking exceptions
2023-11-18 20:47:02,064:INFO:Preparing display monitor
2023-11-18 20:47:02,087:INFO:Initializing SVM - Linear Kernel
2023-11-18 20:47:02,087:INFO:Total runtime is 0.0 minutes
2023-11-18 20:47:02,089:INFO:SubProcess create_model() called ==================================
2023-11-18 20:47:02,090:INFO:Initializing create_model()
2023-11-18 20:47:02,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BBF9F6A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 20:47:02,090:INFO:Checking exceptions
2023-11-18 20:47:02,090:INFO:Importing libraries
2023-11-18 20:47:02,091:INFO:Copying training dataset
2023-11-18 20:47:03,767:INFO:Defining folds
2023-11-18 20:47:03,767:INFO:Declaring metric variables
2023-11-18 20:47:03,770:INFO:Importing untrained model
2023-11-18 20:47:03,772:INFO:SVM - Linear Kernel Imported successfully
2023-11-18 20:47:03,775:INFO:Starting cross validation
2023-11-18 20:47:03,777:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 20:49:30,024:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 20:49:52,085:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 20:49:58,125:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 20:49:58,784:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 20:50:12,073:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 20:50:12,977:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 20:50:22,442:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 20:50:24,694:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 20:50:25,077:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 20:50:26,020:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 20:50:26,442:INFO:Calculating mean and std
2023-11-18 20:50:26,444:INFO:Creating metrics dataframe
2023-11-18 20:50:26,450:INFO:Uploading results into container
2023-11-18 20:50:26,451:INFO:Uploading model into container now
2023-11-18 20:50:26,451:INFO:_master_model_container: 1
2023-11-18 20:50:26,451:INFO:_display_container: 2
2023-11-18 20:50:26,451:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-18 20:50:26,452:INFO:create_model() successfully completed......................................
2023-11-18 20:50:26,597:INFO:SubProcess create_model() end ==================================
2023-11-18 20:50:26,597:INFO:Creating metrics dataframe
2023-11-18 20:50:26,605:INFO:Initializing Logistic Regression
2023-11-18 20:50:26,605:INFO:Total runtime is 3.4086222966512043 minutes
2023-11-18 20:50:26,609:INFO:SubProcess create_model() called ==================================
2023-11-18 20:50:26,610:INFO:Initializing create_model()
2023-11-18 20:50:26,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BBF9F6A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 20:50:26,610:INFO:Checking exceptions
2023-11-18 20:50:26,610:INFO:Importing libraries
2023-11-18 20:50:26,610:INFO:Copying training dataset
2023-11-18 20:50:29,025:INFO:Defining folds
2023-11-18 20:50:29,025:INFO:Declaring metric variables
2023-11-18 20:50:29,028:INFO:Importing untrained model
2023-11-18 20:50:29,031:INFO:Logistic Regression Imported successfully
2023-11-18 20:50:29,037:INFO:Starting cross validation
2023-11-18 20:50:29,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 21:01:58,425:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 21:02:00,757:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 21:02:03,666:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 21:02:05,119:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 21:02:05,523:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 21:02:06,908:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 21:02:07,433:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 21:02:08,270:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 21:02:09,758:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 21:02:18,011:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 21:02:19,198:INFO:Calculating mean and std
2023-11-18 21:02:19,200:INFO:Creating metrics dataframe
2023-11-18 21:02:19,203:INFO:Uploading results into container
2023-11-18 21:02:19,204:INFO:Uploading model into container now
2023-11-18 21:02:19,204:INFO:_master_model_container: 2
2023-11-18 21:02:19,204:INFO:_display_container: 2
2023-11-18 21:02:19,205:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-18 21:02:19,205:INFO:create_model() successfully completed......................................
2023-11-18 21:02:19,330:INFO:SubProcess create_model() end ==================================
2023-11-18 21:02:19,330:INFO:Creating metrics dataframe
2023-11-18 21:02:19,339:INFO:Initializing Decision Tree Classifier
2023-11-18 21:02:19,339:INFO:Total runtime is 15.287531022230784 minutes
2023-11-18 21:02:19,342:INFO:SubProcess create_model() called ==================================
2023-11-18 21:02:19,342:INFO:Initializing create_model()
2023-11-18 21:02:19,342:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BBF9F6A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 21:02:19,342:INFO:Checking exceptions
2023-11-18 21:02:19,342:INFO:Importing libraries
2023-11-18 21:02:19,343:INFO:Copying training dataset
2023-11-18 21:02:21,732:INFO:Defining folds
2023-11-18 21:02:21,732:INFO:Declaring metric variables
2023-11-18 21:02:21,736:INFO:Importing untrained model
2023-11-18 21:02:21,740:INFO:Decision Tree Classifier Imported successfully
2023-11-18 21:02:21,746:INFO:Starting cross validation
2023-11-18 21:02:21,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 21:05:18,449:INFO:Calculating mean and std
2023-11-18 21:05:18,450:INFO:Creating metrics dataframe
2023-11-18 21:05:18,453:INFO:Uploading results into container
2023-11-18 21:05:18,454:INFO:Uploading model into container now
2023-11-18 21:05:18,454:INFO:_master_model_container: 3
2023-11-18 21:05:18,454:INFO:_display_container: 2
2023-11-18 21:05:18,455:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-11-18 21:05:18,455:INFO:create_model() successfully completed......................................
2023-11-18 21:05:18,619:INFO:SubProcess create_model() end ==================================
2023-11-18 21:05:18,619:INFO:Creating metrics dataframe
2023-11-18 21:05:18,629:INFO:Initializing Light Gradient Boosting Machine
2023-11-18 21:05:18,629:INFO:Total runtime is 18.2756943265597 minutes
2023-11-18 21:05:18,632:INFO:SubProcess create_model() called ==================================
2023-11-18 21:05:18,632:INFO:Initializing create_model()
2023-11-18 21:05:18,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BBF9F6A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 21:05:18,632:INFO:Checking exceptions
2023-11-18 21:05:18,632:INFO:Importing libraries
2023-11-18 21:05:18,632:INFO:Copying training dataset
2023-11-18 21:05:20,766:INFO:Defining folds
2023-11-18 21:05:20,766:INFO:Declaring metric variables
2023-11-18 21:05:20,770:INFO:Importing untrained model
2023-11-18 21:05:20,774:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-18 21:05:20,781:INFO:Starting cross validation
2023-11-18 21:05:20,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 21:07:17,260:INFO:Calculating mean and std
2023-11-18 21:07:17,262:INFO:Creating metrics dataframe
2023-11-18 21:07:17,265:INFO:Uploading results into container
2023-11-18 21:07:17,266:INFO:Uploading model into container now
2023-11-18 21:07:17,266:INFO:_master_model_container: 4
2023-11-18 21:07:17,266:INFO:_display_container: 2
2023-11-18 21:07:17,267:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-18 21:07:17,267:INFO:create_model() successfully completed......................................
2023-11-18 21:07:17,412:INFO:SubProcess create_model() end ==================================
2023-11-18 21:07:17,412:INFO:Creating metrics dataframe
2023-11-18 21:07:17,421:INFO:Initializing Extreme Gradient Boosting
2023-11-18 21:07:17,421:INFO:Total runtime is 20.255563525358834 minutes
2023-11-18 21:07:17,424:INFO:SubProcess create_model() called ==================================
2023-11-18 21:07:17,425:INFO:Initializing create_model()
2023-11-18 21:07:17,425:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BBF9F6A0>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 21:07:17,425:INFO:Checking exceptions
2023-11-18 21:07:17,425:INFO:Importing libraries
2023-11-18 21:07:17,425:INFO:Copying training dataset
2023-11-18 21:07:19,659:INFO:Defining folds
2023-11-18 21:07:19,659:INFO:Declaring metric variables
2023-11-18 21:07:19,702:INFO:Importing untrained model
2023-11-18 21:07:19,707:INFO:Extreme Gradient Boosting Imported successfully
2023-11-18 21:07:19,714:INFO:Starting cross validation
2023-11-18 21:07:19,715:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 21:08:34,697:INFO:Calculating mean and std
2023-11-18 21:08:34,699:INFO:Creating metrics dataframe
2023-11-18 21:08:34,703:INFO:Uploading results into container
2023-11-18 21:08:34,703:INFO:Uploading model into container now
2023-11-18 21:08:34,703:INFO:_master_model_container: 5
2023-11-18 21:08:34,703:INFO:_display_container: 2
2023-11-18 21:08:34,704:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-11-18 21:08:34,704:INFO:create_model() successfully completed......................................
2023-11-18 21:08:34,808:INFO:SubProcess create_model() end ==================================
2023-11-18 21:08:34,808:INFO:Creating metrics dataframe
2023-11-18 21:08:34,829:INFO:Initializing create_model()
2023-11-18 21:08:34,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-18 21:08:34,830:INFO:Checking exceptions
2023-11-18 21:08:34,832:INFO:Importing libraries
2023-11-18 21:08:34,832:INFO:Copying training dataset
2023-11-18 21:08:36,324:INFO:Defining folds
2023-11-18 21:08:36,324:INFO:Declaring metric variables
2023-11-18 21:08:36,324:INFO:Importing untrained model
2023-11-18 21:08:36,324:INFO:Declaring custom model
2023-11-18 21:08:36,325:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-18 21:08:36,327:INFO:Cross validation set to False
2023-11-18 21:08:36,327:INFO:Fitting Model
2023-11-18 21:08:42,097:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-18 21:08:42,098:INFO:[LightGBM] [Info] Number of positive: 393779, number of negative: 393779
2023-11-18 21:08:42,289:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.149874 seconds.
2023-11-18 21:08:42,289:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-18 21:08:42,296:INFO:[LightGBM] [Info] Total Bins 39886
2023-11-18 21:08:42,298:INFO:[LightGBM] [Info] Number of data points in the train set: 787558, number of used features: 195
2023-11-18 21:08:42,301:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-11-18 21:08:46,495:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-18 21:08:46,495:INFO:create_model() successfully completed......................................
2023-11-18 21:08:46,590:INFO:_master_model_container: 5
2023-11-18 21:08:46,591:INFO:_display_container: 2
2023-11-18 21:08:46,591:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-18 21:08:46,591:INFO:compare_models() successfully completed......................................
2023-11-18 21:10:56,591:INFO:Initializing compare_models()
2023-11-18 21:10:56,591:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=None, round=4, cross_validation=False, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-18 21:10:56,591:INFO:Checking exceptions
2023-11-18 21:10:57,140:INFO:Preparing display monitor
2023-11-18 21:10:57,143:INFO:Initializing SVM - Linear Kernel
2023-11-18 21:10:57,143:INFO:Total runtime is 0.0 minutes
2023-11-18 21:10:57,143:INFO:SubProcess create_model() called ==================================
2023-11-18 21:10:57,143:INFO:Initializing create_model()
2023-11-18 21:10:57,143:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000174B8ED0EB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 21:10:57,143:INFO:Checking exceptions
2023-11-18 21:10:57,143:INFO:Importing libraries
2023-11-18 21:10:57,143:INFO:Copying training dataset
2023-11-18 21:10:58,669:INFO:Defining folds
2023-11-18 21:10:58,670:INFO:Declaring metric variables
2023-11-18 21:10:58,672:INFO:Importing untrained model
2023-11-18 21:10:58,674:INFO:SVM - Linear Kernel Imported successfully
2023-11-18 21:10:58,677:INFO:Cross validation set to False
2023-11-18 21:10:58,677:INFO:Fitting Model
2023-11-18 21:12:31,981:INFO:Initializing predict_model()
2023-11-18 21:12:31,981:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000174D25F0160>)
2023-11-18 21:12:31,981:INFO:Checking exceptions
2023-11-18 21:12:31,982:INFO:Preloading libraries
2023-11-18 21:12:34,743:INFO:_display_container: 3
2023-11-18 21:12:34,743:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-18 21:12:34,744:INFO:create_model() successfully completed......................................
2023-11-18 21:12:34,814:INFO:SubProcess create_model() end ==================================
2023-11-18 21:12:34,814:INFO:Creating metrics dataframe
2023-11-18 21:12:34,820:INFO:Initializing Logistic Regression
2023-11-18 21:12:34,820:INFO:Total runtime is 1.62796284755071 minutes
2023-11-18 21:12:34,822:INFO:SubProcess create_model() called ==================================
2023-11-18 21:12:34,822:INFO:Initializing create_model()
2023-11-18 21:12:34,822:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000174B8ED0EB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 21:12:34,822:INFO:Checking exceptions
2023-11-18 21:12:34,822:INFO:Importing libraries
2023-11-18 21:12:34,822:INFO:Copying training dataset
2023-11-18 21:12:36,294:INFO:Defining folds
2023-11-18 21:12:36,294:INFO:Declaring metric variables
2023-11-18 21:12:36,303:INFO:Importing untrained model
2023-11-18 21:12:36,305:INFO:Logistic Regression Imported successfully
2023-11-18 21:12:36,305:INFO:Cross validation set to False
2023-11-18 21:12:36,305:INFO:Fitting Model
2023-11-18 21:14:03,558:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 21:14:03,590:INFO:Initializing predict_model()
2023-11-18 21:14:03,590:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000175BBFFCEE0>)
2023-11-18 21:14:03,590:INFO:Checking exceptions
2023-11-18 21:14:03,590:INFO:Preloading libraries
2023-11-18 21:14:06,596:INFO:_display_container: 3
2023-11-18 21:14:06,597:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-18 21:14:06,597:INFO:create_model() successfully completed......................................
2023-11-18 21:14:06,710:INFO:SubProcess create_model() end ==================================
2023-11-18 21:14:06,710:INFO:Creating metrics dataframe
2023-11-18 21:14:06,718:INFO:Initializing Decision Tree Classifier
2023-11-18 21:14:06,718:INFO:Total runtime is 3.159598922729492 minutes
2023-11-18 21:14:06,720:INFO:SubProcess create_model() called ==================================
2023-11-18 21:14:06,721:INFO:Initializing create_model()
2023-11-18 21:14:06,721:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000174B8ED0EB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 21:14:06,721:INFO:Checking exceptions
2023-11-18 21:14:06,721:INFO:Importing libraries
2023-11-18 21:14:06,721:INFO:Copying training dataset
2023-11-18 21:14:08,151:INFO:Defining folds
2023-11-18 21:14:08,151:INFO:Declaring metric variables
2023-11-18 21:14:08,151:INFO:Importing untrained model
2023-11-18 21:14:08,163:INFO:Decision Tree Classifier Imported successfully
2023-11-18 21:14:08,164:INFO:Cross validation set to False
2023-11-18 21:14:08,164:INFO:Fitting Model
2023-11-18 21:16:03,440:INFO:Initializing predict_model()
2023-11-18 21:16:03,440:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000175BB6CAA60>)
2023-11-18 21:16:03,440:INFO:Checking exceptions
2023-11-18 21:16:03,441:INFO:Preloading libraries
2023-11-18 21:16:06,642:INFO:_display_container: 3
2023-11-18 21:16:06,643:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-11-18 21:16:06,643:INFO:create_model() successfully completed......................................
2023-11-18 21:16:06,752:INFO:SubProcess create_model() end ==================================
2023-11-18 21:16:06,753:INFO:Creating metrics dataframe
2023-11-18 21:16:06,759:INFO:Initializing Light Gradient Boosting Machine
2023-11-18 21:16:06,759:INFO:Total runtime is 5.160270218054453 minutes
2023-11-18 21:16:06,762:INFO:SubProcess create_model() called ==================================
2023-11-18 21:16:06,762:INFO:Initializing create_model()
2023-11-18 21:16:06,762:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000174B8ED0EB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 21:16:06,762:INFO:Checking exceptions
2023-11-18 21:16:06,762:INFO:Importing libraries
2023-11-18 21:16:06,762:INFO:Copying training dataset
2023-11-18 21:16:08,419:INFO:Defining folds
2023-11-18 21:16:08,419:INFO:Declaring metric variables
2023-11-18 21:16:08,422:INFO:Importing untrained model
2023-11-18 21:16:08,424:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-18 21:16:08,426:INFO:Cross validation set to False
2023-11-18 21:16:08,426:INFO:Fitting Model
2023-11-18 21:16:13,974:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-18 21:16:13,974:INFO:[LightGBM] [Info] Number of positive: 393779, number of negative: 393779
2023-11-18 21:16:14,163:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.153708 seconds.
2023-11-18 21:16:14,164:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-18 21:16:14,170:INFO:[LightGBM] [Info] Total Bins 39886
2023-11-18 21:16:14,171:INFO:[LightGBM] [Info] Number of data points in the train set: 787558, number of used features: 195
2023-11-18 21:16:14,174:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-11-18 21:16:18,482:INFO:Initializing predict_model()
2023-11-18 21:16:18,482:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000174D25F0160>)
2023-11-18 21:16:18,482:INFO:Checking exceptions
2023-11-18 21:16:18,482:INFO:Preloading libraries
2023-11-18 21:16:21,794:INFO:_display_container: 3
2023-11-18 21:16:21,795:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-18 21:16:21,795:INFO:create_model() successfully completed......................................
2023-11-18 21:16:21,885:INFO:SubProcess create_model() end ==================================
2023-11-18 21:16:21,886:INFO:Creating metrics dataframe
2023-11-18 21:16:21,892:INFO:Initializing Extreme Gradient Boosting
2023-11-18 21:16:21,892:INFO:Total runtime is 5.412496221065521 minutes
2023-11-18 21:16:21,894:INFO:SubProcess create_model() called ==================================
2023-11-18 21:16:21,894:INFO:Initializing create_model()
2023-11-18 21:16:21,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000174B8ED0EB0>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 21:16:21,894:INFO:Checking exceptions
2023-11-18 21:16:21,894:INFO:Importing libraries
2023-11-18 21:16:21,895:INFO:Copying training dataset
2023-11-18 21:16:23,426:INFO:Defining folds
2023-11-18 21:16:23,426:INFO:Declaring metric variables
2023-11-18 21:16:23,428:INFO:Importing untrained model
2023-11-18 21:16:23,430:INFO:Extreme Gradient Boosting Imported successfully
2023-11-18 21:16:23,433:INFO:Cross validation set to False
2023-11-18 21:16:23,433:INFO:Fitting Model
2023-11-18 21:16:32,828:INFO:Initializing predict_model()
2023-11-18 21:16:32,828:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                               importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, multi_strategy=None,
                               n_estimators=None, n_jobs=-1,
                               num_parallel_tree=None,
                               objective='binary:logistic', ...))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000175BB7D10D0>)
2023-11-18 21:16:32,828:INFO:Checking exceptions
2023-11-18 21:16:32,828:INFO:Preloading libraries
2023-11-18 21:16:35,851:INFO:_display_container: 3
2023-11-18 21:16:35,852:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-11-18 21:16:35,852:INFO:create_model() successfully completed......................................
2023-11-18 21:16:35,970:INFO:SubProcess create_model() end ==================================
2023-11-18 21:16:35,970:INFO:Creating metrics dataframe
2023-11-18 21:16:35,985:INFO:Initializing create_model()
2023-11-18 21:16:35,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174D24A5340>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-18 21:16:35,985:INFO:Checking exceptions
2023-11-18 21:16:35,986:INFO:Importing libraries
2023-11-18 21:16:35,986:INFO:Copying training dataset
2023-11-18 21:16:37,497:INFO:Defining folds
2023-11-18 21:16:37,497:INFO:Declaring metric variables
2023-11-18 21:16:37,498:INFO:Importing untrained model
2023-11-18 21:16:37,498:INFO:Declaring custom model
2023-11-18 21:16:37,498:INFO:Extreme Gradient Boosting Imported successfully
2023-11-18 21:16:37,499:INFO:Cross validation set to False
2023-11-18 21:16:37,499:INFO:Fitting Model
2023-11-18 21:16:46,395:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-11-18 21:16:46,395:INFO:create_model() successfully completed......................................
2023-11-18 21:16:46,548:INFO:_master_model_container: 5
2023-11-18 21:16:46,548:INFO:_display_container: 3
2023-11-18 21:16:46,549:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-11-18 21:16:46,549:INFO:compare_models() successfully completed......................................
2023-11-18 22:06:59,981:INFO:PyCaret ClassificationExperiment
2023-11-18 22:06:59,981:INFO:Logging name: clf-default-name
2023-11-18 22:06:59,981:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-18 22:06:59,981:INFO:version 3.1.0
2023-11-18 22:06:59,981:INFO:Initializing setup()
2023-11-18 22:06:59,981:INFO:self.USI: 1af3
2023-11-18 22:06:59,981:INFO:self._variable_keys: {'logging_param', 'exp_name_log', '_ml_usecase', 'y_train', 'memory', 'data', '_available_plots', 'pipeline', 'target_param', 'log_plots_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'y', 'X', 'idx', 'fold_groups_param', 'USI', 'fold_shuffle_param', 'X_test', 'is_multiclass', 'gpu_param', 'X_train', 'seed', 'y_test', 'fix_imbalance', 'html_param', 'exp_id'}
2023-11-18 22:06:59,981:INFO:Checking environment
2023-11-18 22:06:59,981:INFO:python_version: 3.8.18
2023-11-18 22:06:59,981:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-18 22:06:59,981:INFO:machine: AMD64
2023-11-18 22:06:59,981:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-18 22:06:59,998:INFO:Memory: svmem(total=137167351808, available=85066817536, percent=38.0, used=52100534272, free=85066817536)
2023-11-18 22:06:59,998:INFO:Physical Core: 24
2023-11-18 22:06:59,998:INFO:Logical Core: 32
2023-11-18 22:06:59,998:INFO:Checking libraries
2023-11-18 22:06:59,998:INFO:System:
2023-11-18 22:06:59,998:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-18 22:06:59,998:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-18 22:06:59,998:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-18 22:06:59,998:INFO:PyCaret required dependencies:
2023-11-18 22:06:59,999:INFO:                 pip: 23.3
2023-11-18 22:06:59,999:INFO:          setuptools: 68.0.0
2023-11-18 22:06:59,999:INFO:             pycaret: 3.1.0
2023-11-18 22:06:59,999:INFO:             IPython: 8.12.3
2023-11-18 22:06:59,999:INFO:          ipywidgets: 8.1.1
2023-11-18 22:06:59,999:INFO:                tqdm: 4.66.1
2023-11-18 22:06:59,999:INFO:               numpy: 1.23.5
2023-11-18 22:06:59,999:INFO:              pandas: 1.5.3
2023-11-18 22:06:59,999:INFO:              jinja2: 3.1.2
2023-11-18 22:06:59,999:INFO:               scipy: 1.10.1
2023-11-18 22:06:59,999:INFO:              joblib: 1.3.2
2023-11-18 22:06:59,999:INFO:             sklearn: 1.2.2
2023-11-18 22:06:59,999:INFO:                pyod: 1.1.0
2023-11-18 22:06:59,999:INFO:            imblearn: 0.11.0
2023-11-18 22:06:59,999:INFO:   category_encoders: 2.6.2
2023-11-18 22:06:59,999:INFO:            lightgbm: 4.1.0
2023-11-18 22:06:59,999:INFO:               numba: 0.58.1
2023-11-18 22:06:59,999:INFO:            requests: 2.31.0
2023-11-18 22:06:59,999:INFO:          matplotlib: 3.7.3
2023-11-18 22:06:59,999:INFO:          scikitplot: 0.3.7
2023-11-18 22:06:59,999:INFO:         yellowbrick: 1.5
2023-11-18 22:06:59,999:INFO:              plotly: 5.17.0
2023-11-18 22:06:59,999:INFO:    plotly-resampler: Not installed
2023-11-18 22:06:59,999:INFO:             kaleido: 0.2.1
2023-11-18 22:06:59,999:INFO:           schemdraw: 0.15
2023-11-18 22:06:59,999:INFO:         statsmodels: 0.14.0
2023-11-18 22:06:59,999:INFO:              sktime: 0.21.1
2023-11-18 22:06:59,999:INFO:               tbats: 1.1.3
2023-11-18 22:06:59,999:INFO:            pmdarima: 2.0.3
2023-11-18 22:06:59,999:INFO:              psutil: 5.9.6
2023-11-18 22:06:59,999:INFO:          markupsafe: 2.1.3
2023-11-18 22:06:59,999:INFO:             pickle5: Not installed
2023-11-18 22:06:59,999:INFO:         cloudpickle: 3.0.0
2023-11-18 22:07:00,000:INFO:         deprecation: 2.1.0
2023-11-18 22:07:00,000:INFO:              xxhash: 3.4.1
2023-11-18 22:07:00,000:INFO:           wurlitzer: Not installed
2023-11-18 22:07:00,000:INFO:PyCaret optional dependencies:
2023-11-18 22:07:00,000:INFO:                shap: Not installed
2023-11-18 22:07:00,000:INFO:           interpret: Not installed
2023-11-18 22:07:00,000:INFO:                umap: Not installed
2023-11-18 22:07:00,000:INFO:     ydata_profiling: Not installed
2023-11-18 22:07:00,000:INFO:  explainerdashboard: Not installed
2023-11-18 22:07:00,000:INFO:             autoviz: Not installed
2023-11-18 22:07:00,000:INFO:           fairlearn: Not installed
2023-11-18 22:07:00,000:INFO:          deepchecks: Not installed
2023-11-18 22:07:00,000:INFO:             xgboost: 2.0.0
2023-11-18 22:07:00,000:INFO:            catboost: Not installed
2023-11-18 22:07:00,000:INFO:              kmodes: Not installed
2023-11-18 22:07:00,000:INFO:             mlxtend: Not installed
2023-11-18 22:07:00,000:INFO:       statsforecast: Not installed
2023-11-18 22:07:00,000:INFO:        tune_sklearn: Not installed
2023-11-18 22:07:00,000:INFO:                 ray: Not installed
2023-11-18 22:07:00,000:INFO:            hyperopt: Not installed
2023-11-18 22:07:00,000:INFO:              optuna: Not installed
2023-11-18 22:07:00,000:INFO:               skopt: Not installed
2023-11-18 22:07:00,000:INFO:              mlflow: Not installed
2023-11-18 22:07:00,000:INFO:              gradio: Not installed
2023-11-18 22:07:00,000:INFO:             fastapi: Not installed
2023-11-18 22:07:00,000:INFO:             uvicorn: Not installed
2023-11-18 22:07:00,000:INFO:              m2cgen: Not installed
2023-11-18 22:07:00,000:INFO:           evidently: Not installed
2023-11-18 22:07:00,000:INFO:               fugue: Not installed
2023-11-18 22:07:00,000:INFO:           streamlit: Not installed
2023-11-18 22:07:00,000:INFO:             prophet: Not installed
2023-11-18 22:07:00,000:INFO:None
2023-11-18 22:07:00,000:INFO:Set up data.
2023-11-18 22:07:04,293:INFO:Set up folding strategy.
2023-11-18 22:07:04,293:INFO:Set up train/test split.
2023-11-18 22:07:04,293:INFO:Set up data.
2023-11-18 22:17:32,226:INFO:PyCaret ClassificationExperiment
2023-11-18 22:17:32,226:INFO:Logging name: clf-default-name
2023-11-18 22:17:32,226:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-18 22:17:32,226:INFO:version 3.1.0
2023-11-18 22:17:32,226:INFO:Initializing setup()
2023-11-18 22:17:32,226:INFO:self.USI: e68a
2023-11-18 22:17:32,227:INFO:self._variable_keys: {'logging_param', 'exp_name_log', '_ml_usecase', 'y_train', 'memory', 'data', '_available_plots', 'pipeline', 'target_param', 'log_plots_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'y', 'X', 'idx', 'fold_groups_param', 'USI', 'fold_shuffle_param', 'X_test', 'is_multiclass', 'gpu_param', 'X_train', 'seed', 'y_test', 'fix_imbalance', 'html_param', 'exp_id'}
2023-11-18 22:17:32,227:INFO:Checking environment
2023-11-18 22:17:32,227:INFO:python_version: 3.8.18
2023-11-18 22:17:32,227:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-18 22:17:32,227:INFO:machine: AMD64
2023-11-18 22:17:32,227:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-18 22:17:32,229:INFO:Memory: svmem(total=137167351808, available=79141974016, percent=42.3, used=58025377792, free=79141974016)
2023-11-18 22:17:32,229:INFO:Physical Core: 24
2023-11-18 22:17:32,229:INFO:Logical Core: 32
2023-11-18 22:17:32,229:INFO:Checking libraries
2023-11-18 22:17:32,229:INFO:System:
2023-11-18 22:17:32,229:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-18 22:17:32,229:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-18 22:17:32,229:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-18 22:17:32,229:INFO:PyCaret required dependencies:
2023-11-18 22:17:32,229:INFO:                 pip: 23.3
2023-11-18 22:17:32,229:INFO:          setuptools: 68.0.0
2023-11-18 22:17:32,229:INFO:             pycaret: 3.1.0
2023-11-18 22:17:32,229:INFO:             IPython: 8.12.3
2023-11-18 22:17:32,229:INFO:          ipywidgets: 8.1.1
2023-11-18 22:17:32,229:INFO:                tqdm: 4.66.1
2023-11-18 22:17:32,229:INFO:               numpy: 1.23.5
2023-11-18 22:17:32,229:INFO:              pandas: 1.5.3
2023-11-18 22:17:32,230:INFO:              jinja2: 3.1.2
2023-11-18 22:17:32,230:INFO:               scipy: 1.10.1
2023-11-18 22:17:32,230:INFO:              joblib: 1.3.2
2023-11-18 22:17:32,230:INFO:             sklearn: 1.2.2
2023-11-18 22:17:32,230:INFO:                pyod: 1.1.0
2023-11-18 22:17:32,230:INFO:            imblearn: 0.11.0
2023-11-18 22:17:32,230:INFO:   category_encoders: 2.6.2
2023-11-18 22:17:32,230:INFO:            lightgbm: 4.1.0
2023-11-18 22:17:32,230:INFO:               numba: 0.58.1
2023-11-18 22:17:32,230:INFO:            requests: 2.31.0
2023-11-18 22:17:32,230:INFO:          matplotlib: 3.7.3
2023-11-18 22:17:32,230:INFO:          scikitplot: 0.3.7
2023-11-18 22:17:32,230:INFO:         yellowbrick: 1.5
2023-11-18 22:17:32,230:INFO:              plotly: 5.17.0
2023-11-18 22:17:32,230:INFO:    plotly-resampler: Not installed
2023-11-18 22:17:32,230:INFO:             kaleido: 0.2.1
2023-11-18 22:17:32,230:INFO:           schemdraw: 0.15
2023-11-18 22:17:32,230:INFO:         statsmodels: 0.14.0
2023-11-18 22:17:32,230:INFO:              sktime: 0.21.1
2023-11-18 22:17:32,230:INFO:               tbats: 1.1.3
2023-11-18 22:17:32,230:INFO:            pmdarima: 2.0.3
2023-11-18 22:17:32,230:INFO:              psutil: 5.9.6
2023-11-18 22:17:32,230:INFO:          markupsafe: 2.1.3
2023-11-18 22:17:32,230:INFO:             pickle5: Not installed
2023-11-18 22:17:32,230:INFO:         cloudpickle: 3.0.0
2023-11-18 22:17:32,230:INFO:         deprecation: 2.1.0
2023-11-18 22:17:32,230:INFO:              xxhash: 3.4.1
2023-11-18 22:17:32,230:INFO:           wurlitzer: Not installed
2023-11-18 22:17:32,230:INFO:PyCaret optional dependencies:
2023-11-18 22:17:32,230:INFO:                shap: Not installed
2023-11-18 22:17:32,230:INFO:           interpret: Not installed
2023-11-18 22:17:32,230:INFO:                umap: Not installed
2023-11-18 22:17:32,230:INFO:     ydata_profiling: Not installed
2023-11-18 22:17:32,230:INFO:  explainerdashboard: Not installed
2023-11-18 22:17:32,230:INFO:             autoviz: Not installed
2023-11-18 22:17:32,230:INFO:           fairlearn: Not installed
2023-11-18 22:17:32,230:INFO:          deepchecks: Not installed
2023-11-18 22:17:32,230:INFO:             xgboost: 2.0.0
2023-11-18 22:17:32,230:INFO:            catboost: Not installed
2023-11-18 22:17:32,230:INFO:              kmodes: Not installed
2023-11-18 22:17:32,230:INFO:             mlxtend: Not installed
2023-11-18 22:17:32,230:INFO:       statsforecast: Not installed
2023-11-18 22:17:32,230:INFO:        tune_sklearn: Not installed
2023-11-18 22:17:32,230:INFO:                 ray: Not installed
2023-11-18 22:17:32,230:INFO:            hyperopt: Not installed
2023-11-18 22:17:32,230:INFO:              optuna: Not installed
2023-11-18 22:17:32,230:INFO:               skopt: Not installed
2023-11-18 22:17:32,230:INFO:              mlflow: Not installed
2023-11-18 22:17:32,230:INFO:              gradio: Not installed
2023-11-18 22:17:32,230:INFO:             fastapi: Not installed
2023-11-18 22:17:32,230:INFO:             uvicorn: Not installed
2023-11-18 22:17:32,230:INFO:              m2cgen: Not installed
2023-11-18 22:17:32,230:INFO:           evidently: Not installed
2023-11-18 22:17:32,230:INFO:               fugue: Not installed
2023-11-18 22:17:32,230:INFO:           streamlit: Not installed
2023-11-18 22:17:32,230:INFO:             prophet: Not installed
2023-11-18 22:17:32,231:INFO:None
2023-11-18 22:17:32,231:INFO:Set up data.
2023-11-18 22:17:35,946:INFO:Set up folding strategy.
2023-11-18 22:17:35,947:INFO:Set up train/test split.
2023-11-18 22:17:35,947:INFO:Set up data.
2023-11-18 22:17:37,596:INFO:Set up index.
2023-11-18 22:17:38,787:INFO:Assigning column types.
2023-11-18 22:17:41,315:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-18 22:17:41,358:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-18 22:17:41,359:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 22:17:41,394:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 22:17:41,396:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 22:17:41,437:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-18 22:17:41,438:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 22:17:41,464:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 22:17:41,468:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 22:17:41,468:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-18 22:17:41,504:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 22:17:41,539:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 22:17:41,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 22:17:41,576:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 22:17:41,596:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 22:17:41,598:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 22:17:41,598:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-18 22:17:41,673:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 22:17:41,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 22:17:41,748:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 22:17:41,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 22:17:41,752:INFO:Preparing preprocessing pipeline...
2023-11-18 22:17:42,097:INFO:Set up simple imputation.
2023-11-18 22:17:42,388:INFO:Set up column name cleaning.
2023-11-18 22:17:57,161:INFO:Finished creating preprocessing pipeline.
2023-11-18 22:17:57,169:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             '...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-18 22:17:57,169:INFO:Creating final display dataframe.
2023-11-18 22:18:22,980:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           classes
2                   Target type            Binary
3           Original data shape     (969805, 407)
4        Transformed data shape     (969805, 407)
5   Transformed train set shape     (787558, 407)
6    Transformed test set shape     (182247, 407)
7              Numeric features               406
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              e68a
2023-11-18 22:18:23,065:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 22:18:23,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 22:18:23,125:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 22:18:23,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 22:18:23,127:INFO:setup() successfully completed in 50.91s...............
2023-11-18 22:18:23,192:INFO:Initializing compare_models()
2023-11-18 22:18:23,192:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-18 22:18:23,193:INFO:Checking exceptions
2023-11-18 22:18:25,602:INFO:Preparing display monitor
2023-11-18 22:18:25,626:INFO:Initializing SVM - Linear Kernel
2023-11-18 22:18:25,627:INFO:Total runtime is 1.658201217651367e-05 minutes
2023-11-18 22:18:25,631:INFO:SubProcess create_model() called ==================================
2023-11-18 22:18:25,631:INFO:Initializing create_model()
2023-11-18 22:18:25,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BBFAB400>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 22:18:25,631:INFO:Checking exceptions
2023-11-18 22:18:25,632:INFO:Importing libraries
2023-11-18 22:18:25,632:INFO:Copying training dataset
2023-11-18 22:18:29,124:INFO:Defining folds
2023-11-18 22:18:29,124:INFO:Declaring metric variables
2023-11-18 22:18:29,126:INFO:Importing untrained model
2023-11-18 22:18:29,128:INFO:SVM - Linear Kernel Imported successfully
2023-11-18 22:18:29,132:INFO:Starting cross validation
2023-11-18 22:18:29,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 22:34:17,802:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py:702: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-11-18 22:34:19,502:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 22:34:20,999:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py:702: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-11-18 22:34:22,354:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 22:34:22,385:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-18 22:34:32,995:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py:702: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-11-18 22:34:33,151:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py:702: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-11-18 22:34:35,012:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 22:34:35,046:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-18 22:34:35,097:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 22:34:35,128:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-18 22:34:40,098:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py:702: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-11-18 22:34:40,657:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py:702: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-11-18 22:34:41,840:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 22:34:41,869:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-18 22:34:42,313:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 22:34:45,597:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py:702: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-11-18 22:34:46,204:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py:702: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-11-18 22:34:47,262:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 22:34:47,321:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-18 22:34:47,900:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 22:34:47,927:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-18 22:34:50,967:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py:702: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-11-18 22:34:52,520:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 22:34:52,562:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-11-18 22:34:58,521:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py:702: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-11-18 22:34:59,957:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 22:35:00,485:INFO:Calculating mean and std
2023-11-18 22:35:00,501:INFO:Creating metrics dataframe
2023-11-18 22:35:00,507:INFO:Uploading results into container
2023-11-18 22:35:00,507:INFO:Uploading model into container now
2023-11-18 22:35:00,509:INFO:_master_model_container: 1
2023-11-18 22:35:00,509:INFO:_display_container: 2
2023-11-18 22:35:00,510:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-18 22:35:00,510:INFO:create_model() successfully completed......................................
2023-11-18 22:35:00,715:INFO:SubProcess create_model() end ==================================
2023-11-18 22:35:00,715:INFO:Creating metrics dataframe
2023-11-18 22:35:00,727:INFO:Initializing Logistic Regression
2023-11-18 22:35:00,727:INFO:Total runtime is 16.585022358099618 minutes
2023-11-18 22:35:00,731:INFO:SubProcess create_model() called ==================================
2023-11-18 22:35:00,731:INFO:Initializing create_model()
2023-11-18 22:35:00,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BBFAB400>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 22:35:00,732:INFO:Checking exceptions
2023-11-18 22:35:00,732:INFO:Importing libraries
2023-11-18 22:35:00,732:INFO:Copying training dataset
2023-11-18 22:35:05,584:INFO:Defining folds
2023-11-18 22:35:05,585:INFO:Declaring metric variables
2023-11-18 22:35:05,588:INFO:Importing untrained model
2023-11-18 22:35:05,592:INFO:Logistic Regression Imported successfully
2023-11-18 22:35:05,598:INFO:Starting cross validation
2023-11-18 22:35:05,601:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 22:36:34,237:INFO:Calculating mean and std
2023-11-18 22:36:34,238:INFO:Creating metrics dataframe
2023-11-18 22:36:34,241:INFO:Uploading results into container
2023-11-18 22:36:34,241:INFO:Uploading model into container now
2023-11-18 22:36:34,241:INFO:_master_model_container: 2
2023-11-18 22:36:34,241:INFO:_display_container: 2
2023-11-18 22:36:34,242:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-18 22:36:34,242:INFO:create_model() successfully completed......................................
2023-11-18 22:36:34,341:INFO:SubProcess create_model() end ==================================
2023-11-18 22:36:34,341:INFO:Creating metrics dataframe
2023-11-18 22:36:34,346:INFO:Initializing Decision Tree Classifier
2023-11-18 22:36:34,346:INFO:Total runtime is 18.145334112644193 minutes
2023-11-18 22:36:34,348:INFO:SubProcess create_model() called ==================================
2023-11-18 22:36:34,348:INFO:Initializing create_model()
2023-11-18 22:36:34,348:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BBFAB400>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 22:36:34,348:INFO:Checking exceptions
2023-11-18 22:36:34,348:INFO:Importing libraries
2023-11-18 22:36:34,348:INFO:Copying training dataset
2023-11-18 22:36:37,312:INFO:Defining folds
2023-11-18 22:36:37,312:INFO:Declaring metric variables
2023-11-18 22:36:37,314:INFO:Importing untrained model
2023-11-18 22:36:37,316:INFO:Decision Tree Classifier Imported successfully
2023-11-18 22:36:37,319:INFO:Starting cross validation
2023-11-18 22:36:37,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 22:46:37,648:INFO:Calculating mean and std
2023-11-18 22:46:37,651:INFO:Creating metrics dataframe
2023-11-18 22:46:37,656:INFO:Uploading results into container
2023-11-18 22:46:37,657:INFO:Uploading model into container now
2023-11-18 22:46:37,658:INFO:_master_model_container: 3
2023-11-18 22:46:37,658:INFO:_display_container: 2
2023-11-18 22:46:37,659:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-11-18 22:46:37,659:INFO:create_model() successfully completed......................................
2023-11-18 22:46:37,936:INFO:SubProcess create_model() end ==================================
2023-11-18 22:46:37,936:INFO:Creating metrics dataframe
2023-11-18 22:46:37,947:INFO:Initializing Light Gradient Boosting Machine
2023-11-18 22:46:37,947:INFO:Total runtime is 28.2053587436676 minutes
2023-11-18 22:46:37,951:INFO:SubProcess create_model() called ==================================
2023-11-18 22:46:37,952:INFO:Initializing create_model()
2023-11-18 22:46:37,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BBFAB400>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 22:46:37,952:INFO:Checking exceptions
2023-11-18 22:46:37,952:INFO:Importing libraries
2023-11-18 22:46:37,952:INFO:Copying training dataset
2023-11-18 22:46:40,963:INFO:Defining folds
2023-11-18 22:46:40,963:INFO:Declaring metric variables
2023-11-18 22:46:40,971:INFO:Importing untrained model
2023-11-18 22:46:40,971:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-18 22:46:40,982:INFO:Starting cross validation
2023-11-18 22:46:40,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 22:49:26,264:INFO:Calculating mean and std
2023-11-18 22:49:26,265:INFO:Creating metrics dataframe
2023-11-18 22:49:26,268:INFO:Uploading results into container
2023-11-18 22:49:26,269:INFO:Uploading model into container now
2023-11-18 22:49:26,269:INFO:_master_model_container: 4
2023-11-18 22:49:26,269:INFO:_display_container: 2
2023-11-18 22:49:26,270:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-18 22:49:26,270:INFO:create_model() successfully completed......................................
2023-11-18 22:49:26,419:INFO:SubProcess create_model() end ==================================
2023-11-18 22:49:26,419:INFO:Creating metrics dataframe
2023-11-18 22:49:26,435:INFO:Initializing Extreme Gradient Boosting
2023-11-18 22:49:26,435:INFO:Total runtime is 31.01348265409469 minutes
2023-11-18 22:49:26,438:INFO:SubProcess create_model() called ==================================
2023-11-18 22:49:26,438:INFO:Initializing create_model()
2023-11-18 22:49:26,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BBFAB400>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 22:49:26,439:INFO:Checking exceptions
2023-11-18 22:49:26,439:INFO:Importing libraries
2023-11-18 22:49:26,439:INFO:Copying training dataset
2023-11-18 22:49:30,386:INFO:Defining folds
2023-11-18 22:49:30,386:INFO:Declaring metric variables
2023-11-18 22:49:30,390:INFO:Importing untrained model
2023-11-18 22:49:30,394:INFO:Extreme Gradient Boosting Imported successfully
2023-11-18 22:49:30,401:INFO:Starting cross validation
2023-11-18 22:49:30,404:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 22:52:23,806:INFO:Calculating mean and std
2023-11-18 22:52:23,810:INFO:Creating metrics dataframe
2023-11-18 22:52:23,815:INFO:Uploading results into container
2023-11-18 22:52:23,816:INFO:Uploading model into container now
2023-11-18 22:52:23,817:INFO:_master_model_container: 5
2023-11-18 22:52:23,817:INFO:_display_container: 2
2023-11-18 22:52:23,819:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-11-18 22:52:23,820:INFO:create_model() successfully completed......................................
2023-11-18 22:52:24,041:INFO:SubProcess create_model() end ==================================
2023-11-18 22:52:24,041:INFO:Creating metrics dataframe
2023-11-18 22:52:24,057:INFO:Initializing create_model()
2023-11-18 22:52:24,057:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-18 22:52:24,057:INFO:Checking exceptions
2023-11-18 22:52:24,060:INFO:Importing libraries
2023-11-18 22:52:24,060:INFO:Copying training dataset
2023-11-18 22:52:27,251:INFO:Defining folds
2023-11-18 22:52:27,251:INFO:Declaring metric variables
2023-11-18 22:52:27,251:INFO:Importing untrained model
2023-11-18 22:52:27,251:INFO:Declaring custom model
2023-11-18 22:52:27,252:INFO:Decision Tree Classifier Imported successfully
2023-11-18 22:52:27,253:INFO:Cross validation set to False
2023-11-18 22:52:27,253:INFO:Fitting Model
2023-11-18 23:05:25,655:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-11-18 23:05:25,656:INFO:create_model() successfully completed......................................
2023-11-18 23:05:25,871:INFO:_master_model_container: 5
2023-11-18 23:05:25,871:INFO:_display_container: 2
2023-11-18 23:05:25,872:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-11-18 23:05:25,872:INFO:compare_models() successfully completed......................................
2023-11-18 23:05:25,945:INFO:Initializing compare_models()
2023-11-18 23:05:25,945:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=None, round=4, cross_validation=False, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-18 23:05:25,946:INFO:Checking exceptions
2023-11-18 23:05:27,488:INFO:Preparing display monitor
2023-11-18 23:05:27,512:INFO:Initializing SVM - Linear Kernel
2023-11-18 23:05:27,512:INFO:Total runtime is 0.0 minutes
2023-11-18 23:05:27,516:INFO:SubProcess create_model() called ==================================
2023-11-18 23:05:27,517:INFO:Initializing create_model()
2023-11-18 23:05:27,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000174B6173D00>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 23:05:27,517:INFO:Checking exceptions
2023-11-18 23:05:27,517:INFO:Importing libraries
2023-11-18 23:05:27,517:INFO:Copying training dataset
2023-11-18 23:05:31,328:INFO:Defining folds
2023-11-18 23:05:31,328:INFO:Declaring metric variables
2023-11-18 23:05:31,332:INFO:Importing untrained model
2023-11-18 23:05:31,335:INFO:SVM - Linear Kernel Imported successfully
2023-11-18 23:05:31,343:INFO:Cross validation set to False
2023-11-18 23:05:31,343:INFO:Fitting Model
2023-11-18 23:16:50,329:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py:702: ConvergenceWarning: Maximum number of iteration reached before convergence. Consider increasing max_iter to improve the fit.
  warnings.warn(

2023-11-18 23:16:50,424:INFO:Initializing predict_model()
2023-11-18 23:16:50,425:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000175BBD5BD30>)
2023-11-18 23:16:50,425:INFO:Checking exceptions
2023-11-18 23:16:50,425:INFO:Preloading libraries
2023-11-18 23:16:57,492:INFO:_display_container: 3
2023-11-18 23:16:57,494:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-18 23:16:57,494:INFO:create_model() successfully completed......................................
2023-11-18 23:16:57,664:INFO:SubProcess create_model() end ==================================
2023-11-18 23:16:57,664:INFO:Creating metrics dataframe
2023-11-18 23:16:57,673:INFO:Initializing Logistic Regression
2023-11-18 23:16:57,673:INFO:Total runtime is 11.502680242061615 minutes
2023-11-18 23:16:57,677:INFO:SubProcess create_model() called ==================================
2023-11-18 23:16:57,677:INFO:Initializing create_model()
2023-11-18 23:16:57,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000174B6173D00>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 23:16:57,677:INFO:Checking exceptions
2023-11-18 23:16:57,677:INFO:Importing libraries
2023-11-18 23:16:57,677:INFO:Copying training dataset
2023-11-18 23:17:01,188:INFO:Defining folds
2023-11-18 23:17:01,189:INFO:Declaring metric variables
2023-11-18 23:17:01,193:INFO:Importing untrained model
2023-11-18 23:17:01,196:INFO:Logistic Regression Imported successfully
2023-11-18 23:17:01,202:INFO:Cross validation set to False
2023-11-18 23:17:01,202:INFO:Fitting Model
2023-11-18 23:17:19,460:INFO:Initializing predict_model()
2023-11-18 23:17:19,460:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000175BBE3F310>)
2023-11-18 23:17:19,460:INFO:Checking exceptions
2023-11-18 23:17:19,460:INFO:Preloading libraries
2023-11-18 23:17:26,490:INFO:_display_container: 3
2023-11-18 23:17:26,492:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-18 23:17:26,492:INFO:create_model() successfully completed......................................
2023-11-18 23:17:26,673:INFO:SubProcess create_model() end ==================================
2023-11-18 23:17:26,674:INFO:Creating metrics dataframe
2023-11-18 23:17:26,689:INFO:Initializing Decision Tree Classifier
2023-11-18 23:17:26,689:INFO:Total runtime is 11.986276264985403 minutes
2023-11-18 23:17:26,693:INFO:SubProcess create_model() called ==================================
2023-11-18 23:17:26,693:INFO:Initializing create_model()
2023-11-18 23:17:26,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000174B6173D00>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 23:17:26,694:INFO:Checking exceptions
2023-11-18 23:17:26,694:INFO:Importing libraries
2023-11-18 23:17:26,694:INFO:Copying training dataset
2023-11-18 23:17:30,349:INFO:Defining folds
2023-11-18 23:17:30,350:INFO:Declaring metric variables
2023-11-18 23:17:30,353:INFO:Importing untrained model
2023-11-18 23:17:30,357:INFO:Decision Tree Classifier Imported successfully
2023-11-18 23:17:30,362:INFO:Cross validation set to False
2023-11-18 23:17:30,362:INFO:Fitting Model
2023-11-18 23:29:12,001:INFO:Initializing predict_model()
2023-11-18 23:29:12,001:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000175BBD5BD30>)
2023-11-18 23:29:12,001:INFO:Checking exceptions
2023-11-18 23:29:12,001:INFO:Preloading libraries
2023-11-18 23:29:19,073:INFO:_display_container: 3
2023-11-18 23:29:19,076:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-11-18 23:29:19,076:INFO:create_model() successfully completed......................................
2023-11-18 23:29:19,246:INFO:SubProcess create_model() end ==================================
2023-11-18 23:29:19,247:INFO:Creating metrics dataframe
2023-11-18 23:29:19,256:INFO:Initializing Light Gradient Boosting Machine
2023-11-18 23:29:19,256:INFO:Total runtime is 23.86240365902583 minutes
2023-11-18 23:29:19,259:INFO:SubProcess create_model() called ==================================
2023-11-18 23:29:19,260:INFO:Initializing create_model()
2023-11-18 23:29:19,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000174B6173D00>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 23:29:19,260:INFO:Checking exceptions
2023-11-18 23:29:19,260:INFO:Importing libraries
2023-11-18 23:29:19,260:INFO:Copying training dataset
2023-11-18 23:29:22,745:INFO:Defining folds
2023-11-18 23:29:22,745:INFO:Declaring metric variables
2023-11-18 23:29:22,748:INFO:Importing untrained model
2023-11-18 23:29:22,752:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-18 23:29:22,757:INFO:Cross validation set to False
2023-11-18 23:29:22,757:INFO:Fitting Model
2023-11-18 23:37:47,336:INFO:Initializing compare_models()
2023-11-18 23:37:47,336:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-18 23:37:47,337:INFO:Checking exceptions
2023-11-18 23:37:48,247:INFO:Preparing display monitor
2023-11-18 23:37:48,260:INFO:Initializing SVM - Linear Kernel
2023-11-18 23:37:48,260:INFO:Total runtime is 0.0 minutes
2023-11-18 23:37:48,262:INFO:SubProcess create_model() called ==================================
2023-11-18 23:37:48,262:INFO:Initializing create_model()
2023-11-18 23:37:48,262:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B5D977C0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BE0DE2E0>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 23:37:48,262:INFO:Checking exceptions
2023-11-18 23:37:48,262:INFO:Importing libraries
2023-11-18 23:37:48,262:INFO:Copying training dataset
2023-11-18 23:37:53,319:INFO:PyCaret ClassificationExperiment
2023-11-18 23:37:53,319:INFO:Logging name: clf-default-name
2023-11-18 23:37:53,319:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-18 23:37:53,320:INFO:version 3.1.0
2023-11-18 23:37:53,320:INFO:Initializing setup()
2023-11-18 23:37:53,320:INFO:self.USI: e599
2023-11-18 23:37:53,320:INFO:self._variable_keys: {'logging_param', 'exp_name_log', '_ml_usecase', 'y_train', 'memory', 'data', '_available_plots', 'pipeline', 'target_param', 'log_plots_param', 'n_jobs_param', 'gpu_n_jobs_param', 'fold_generator', 'y', 'X', 'idx', 'fold_groups_param', 'USI', 'fold_shuffle_param', 'X_test', 'is_multiclass', 'gpu_param', 'X_train', 'seed', 'y_test', 'fix_imbalance', 'html_param', 'exp_id'}
2023-11-18 23:37:53,320:INFO:Checking environment
2023-11-18 23:37:53,320:INFO:python_version: 3.8.18
2023-11-18 23:37:53,320:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-18 23:37:53,320:INFO:machine: AMD64
2023-11-18 23:37:53,320:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-18 23:37:53,323:INFO:Memory: svmem(total=137167351808, available=105369645056, percent=23.2, used=31797706752, free=105369645056)
2023-11-18 23:37:53,323:INFO:Physical Core: 24
2023-11-18 23:37:53,323:INFO:Logical Core: 32
2023-11-18 23:37:53,323:INFO:Checking libraries
2023-11-18 23:37:53,323:INFO:System:
2023-11-18 23:37:53,323:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-18 23:37:53,323:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-18 23:37:53,323:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-18 23:37:53,323:INFO:PyCaret required dependencies:
2023-11-18 23:37:53,323:INFO:                 pip: 23.3
2023-11-18 23:37:53,323:INFO:          setuptools: 68.0.0
2023-11-18 23:37:53,323:INFO:             pycaret: 3.1.0
2023-11-18 23:37:53,323:INFO:             IPython: 8.12.3
2023-11-18 23:37:53,323:INFO:          ipywidgets: 8.1.1
2023-11-18 23:37:53,323:INFO:                tqdm: 4.66.1
2023-11-18 23:37:53,323:INFO:               numpy: 1.23.5
2023-11-18 23:37:53,323:INFO:              pandas: 1.5.3
2023-11-18 23:37:53,323:INFO:              jinja2: 3.1.2
2023-11-18 23:37:53,323:INFO:               scipy: 1.10.1
2023-11-18 23:37:53,323:INFO:              joblib: 1.3.2
2023-11-18 23:37:53,323:INFO:             sklearn: 1.2.2
2023-11-18 23:37:53,323:INFO:                pyod: 1.1.0
2023-11-18 23:37:53,323:INFO:            imblearn: 0.11.0
2023-11-18 23:37:53,323:INFO:   category_encoders: 2.6.2
2023-11-18 23:37:53,323:INFO:            lightgbm: 4.1.0
2023-11-18 23:37:53,324:INFO:               numba: 0.58.1
2023-11-18 23:37:53,324:INFO:            requests: 2.31.0
2023-11-18 23:37:53,324:INFO:          matplotlib: 3.7.3
2023-11-18 23:37:53,324:INFO:          scikitplot: 0.3.7
2023-11-18 23:37:53,324:INFO:         yellowbrick: 1.5
2023-11-18 23:37:53,324:INFO:              plotly: 5.17.0
2023-11-18 23:37:53,324:INFO:    plotly-resampler: Not installed
2023-11-18 23:37:53,324:INFO:             kaleido: 0.2.1
2023-11-18 23:37:53,324:INFO:           schemdraw: 0.15
2023-11-18 23:37:53,324:INFO:         statsmodels: 0.14.0
2023-11-18 23:37:53,324:INFO:              sktime: 0.21.1
2023-11-18 23:37:53,324:INFO:               tbats: 1.1.3
2023-11-18 23:37:53,324:INFO:            pmdarima: 2.0.3
2023-11-18 23:37:53,324:INFO:              psutil: 5.9.6
2023-11-18 23:37:53,324:INFO:          markupsafe: 2.1.3
2023-11-18 23:37:53,324:INFO:             pickle5: Not installed
2023-11-18 23:37:53,324:INFO:         cloudpickle: 3.0.0
2023-11-18 23:37:53,324:INFO:         deprecation: 2.1.0
2023-11-18 23:37:53,324:INFO:              xxhash: 3.4.1
2023-11-18 23:37:53,324:INFO:           wurlitzer: Not installed
2023-11-18 23:37:53,324:INFO:PyCaret optional dependencies:
2023-11-18 23:37:53,324:INFO:                shap: Not installed
2023-11-18 23:37:53,324:INFO:           interpret: Not installed
2023-11-18 23:37:53,324:INFO:                umap: Not installed
2023-11-18 23:37:53,324:INFO:     ydata_profiling: Not installed
2023-11-18 23:37:53,324:INFO:  explainerdashboard: Not installed
2023-11-18 23:37:53,324:INFO:             autoviz: Not installed
2023-11-18 23:37:53,324:INFO:           fairlearn: Not installed
2023-11-18 23:37:53,324:INFO:          deepchecks: Not installed
2023-11-18 23:37:53,324:INFO:             xgboost: 2.0.0
2023-11-18 23:37:53,324:INFO:            catboost: Not installed
2023-11-18 23:37:53,324:INFO:              kmodes: Not installed
2023-11-18 23:37:53,324:INFO:             mlxtend: Not installed
2023-11-18 23:37:53,324:INFO:       statsforecast: Not installed
2023-11-18 23:37:53,324:INFO:        tune_sklearn: Not installed
2023-11-18 23:37:53,324:INFO:                 ray: Not installed
2023-11-18 23:37:53,324:INFO:            hyperopt: Not installed
2023-11-18 23:37:53,324:INFO:              optuna: Not installed
2023-11-18 23:37:53,324:INFO:               skopt: Not installed
2023-11-18 23:37:53,324:INFO:              mlflow: Not installed
2023-11-18 23:37:53,324:INFO:              gradio: Not installed
2023-11-18 23:37:53,324:INFO:             fastapi: Not installed
2023-11-18 23:37:53,324:INFO:             uvicorn: Not installed
2023-11-18 23:37:53,324:INFO:              m2cgen: Not installed
2023-11-18 23:37:53,324:INFO:           evidently: Not installed
2023-11-18 23:37:53,324:INFO:               fugue: Not installed
2023-11-18 23:37:53,324:INFO:           streamlit: Not installed
2023-11-18 23:37:53,324:INFO:             prophet: Not installed
2023-11-18 23:37:53,324:INFO:None
2023-11-18 23:37:53,324:INFO:Set up data.
2023-11-18 23:37:54,911:INFO:Set up folding strategy.
2023-11-18 23:37:54,911:INFO:Set up train/test split.
2023-11-18 23:37:54,911:INFO:Set up data.
2023-11-18 23:37:55,557:INFO:Set up index.
2023-11-18 23:37:56,076:INFO:Assigning column types.
2023-11-18 23:37:57,251:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-18 23:37:57,268:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-18 23:37:57,268:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 23:37:57,285:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 23:37:57,285:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 23:37:57,316:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-18 23:37:57,316:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 23:37:57,335:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 23:37:57,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 23:37:57,336:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-18 23:37:57,354:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 23:37:57,354:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 23:37:57,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 23:37:57,385:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-18 23:37:57,401:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 23:37:57,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 23:37:57,401:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-18 23:37:57,439:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 23:37:57,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 23:37:57,485:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 23:37:57,485:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 23:37:57,485:INFO:Preparing preprocessing pipeline...
2023-11-18 23:37:57,639:INFO:Set up simple imputation.
2023-11-18 23:37:57,821:INFO:Set up column name cleaning.
2023-11-18 23:38:03,729:INFO:Finished creating preprocessing pipeline.
2023-11-18 23:38:03,735:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             '...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-18 23:38:03,735:INFO:Creating final display dataframe.
2023-11-18 23:38:13,145:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           classes
2                   Target type            Binary
3           Original data shape     (969805, 223)
4        Transformed data shape     (969805, 223)
5   Transformed train set shape     (787558, 223)
6    Transformed test set shape     (182247, 223)
7              Numeric features               222
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              e599
2023-11-18 23:38:13,183:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 23:38:13,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 23:38:13,224:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-18 23:38:13,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-18 23:38:13,226:INFO:setup() successfully completed in 19.96s...............
2023-11-18 23:38:13,295:INFO:Initializing compare_models()
2023-11-18 23:38:13,296:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-18 23:38:13,296:INFO:Checking exceptions
2023-11-18 23:38:14,100:INFO:Preparing display monitor
2023-11-18 23:38:14,114:INFO:Initializing SVM - Linear Kernel
2023-11-18 23:38:14,114:INFO:Total runtime is 0.0 minutes
2023-11-18 23:38:14,116:INFO:SubProcess create_model() called ==================================
2023-11-18 23:38:14,116:INFO:Initializing create_model()
2023-11-18 23:38:14,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BE1AEF70>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 23:38:14,116:INFO:Checking exceptions
2023-11-18 23:38:14,116:INFO:Importing libraries
2023-11-18 23:38:14,116:INFO:Copying training dataset
2023-11-18 23:38:15,417:INFO:Defining folds
2023-11-18 23:38:15,418:INFO:Declaring metric variables
2023-11-18 23:38:15,420:INFO:Importing untrained model
2023-11-18 23:38:15,420:INFO:SVM - Linear Kernel Imported successfully
2023-11-18 23:38:15,420:INFO:Starting cross validation
2023-11-18 23:38:15,420:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 23:39:07,463:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 23:39:22,180:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 23:39:24,325:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 23:39:41,771:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 23:39:42,622:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-18 23:39:43,102:INFO:Calculating mean and std
2023-11-18 23:39:43,103:INFO:Creating metrics dataframe
2023-11-18 23:39:43,106:INFO:Uploading results into container
2023-11-18 23:39:43,106:INFO:Uploading model into container now
2023-11-18 23:39:43,106:INFO:_master_model_container: 1
2023-11-18 23:39:43,106:INFO:_display_container: 2
2023-11-18 23:39:43,107:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-18 23:39:43,107:INFO:create_model() successfully completed......................................
2023-11-18 23:39:43,524:INFO:SubProcess create_model() end ==================================
2023-11-18 23:39:43,524:INFO:Creating metrics dataframe
2023-11-18 23:39:43,528:INFO:Initializing Logistic Regression
2023-11-18 23:39:43,528:INFO:Total runtime is 1.4902339816093444 minutes
2023-11-18 23:39:43,530:INFO:SubProcess create_model() called ==================================
2023-11-18 23:39:43,530:INFO:Initializing create_model()
2023-11-18 23:39:43,530:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BE1AEF70>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 23:39:43,531:INFO:Checking exceptions
2023-11-18 23:39:43,531:INFO:Importing libraries
2023-11-18 23:39:43,531:INFO:Copying training dataset
2023-11-18 23:39:44,920:INFO:Defining folds
2023-11-18 23:39:44,920:INFO:Declaring metric variables
2023-11-18 23:39:44,922:INFO:Importing untrained model
2023-11-18 23:39:44,924:INFO:Logistic Regression Imported successfully
2023-11-18 23:39:44,928:INFO:Starting cross validation
2023-11-18 23:39:44,929:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 23:45:22,485:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 23:45:23,327:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 23:45:24,069:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 23:45:24,410:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 23:45:25,638:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-18 23:45:27,272:INFO:Calculating mean and std
2023-11-18 23:45:27,273:INFO:Creating metrics dataframe
2023-11-18 23:45:27,277:INFO:Uploading results into container
2023-11-18 23:45:27,277:INFO:Uploading model into container now
2023-11-18 23:45:27,278:INFO:_master_model_container: 2
2023-11-18 23:45:27,278:INFO:_display_container: 2
2023-11-18 23:45:27,278:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-18 23:45:27,278:INFO:create_model() successfully completed......................................
2023-11-18 23:45:27,456:INFO:SubProcess create_model() end ==================================
2023-11-18 23:45:27,456:INFO:Creating metrics dataframe
2023-11-18 23:45:27,466:INFO:Initializing Decision Tree Classifier
2023-11-18 23:45:27,466:INFO:Total runtime is 7.222523510456085 minutes
2023-11-18 23:45:27,469:INFO:SubProcess create_model() called ==================================
2023-11-18 23:45:27,469:INFO:Initializing create_model()
2023-11-18 23:45:27,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BE1AEF70>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 23:45:27,469:INFO:Checking exceptions
2023-11-18 23:45:27,469:INFO:Importing libraries
2023-11-18 23:45:27,470:INFO:Copying training dataset
2023-11-18 23:45:29,474:INFO:Defining folds
2023-11-18 23:45:29,474:INFO:Declaring metric variables
2023-11-18 23:45:29,478:INFO:Importing untrained model
2023-11-18 23:45:29,482:INFO:Decision Tree Classifier Imported successfully
2023-11-18 23:45:29,488:INFO:Starting cross validation
2023-11-18 23:45:29,489:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 23:46:54,003:INFO:Calculating mean and std
2023-11-18 23:46:54,004:INFO:Creating metrics dataframe
2023-11-18 23:46:54,006:INFO:Uploading results into container
2023-11-18 23:46:54,006:INFO:Uploading model into container now
2023-11-18 23:46:54,007:INFO:_master_model_container: 3
2023-11-18 23:46:54,007:INFO:_display_container: 2
2023-11-18 23:46:54,007:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-11-18 23:46:54,007:INFO:create_model() successfully completed......................................
2023-11-18 23:46:54,193:INFO:SubProcess create_model() end ==================================
2023-11-18 23:46:54,193:INFO:Creating metrics dataframe
2023-11-18 23:46:54,199:INFO:Initializing Light Gradient Boosting Machine
2023-11-18 23:46:54,199:INFO:Total runtime is 8.668076753616333 minutes
2023-11-18 23:46:54,200:INFO:SubProcess create_model() called ==================================
2023-11-18 23:46:54,201:INFO:Initializing create_model()
2023-11-18 23:46:54,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BE1AEF70>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 23:46:54,201:INFO:Checking exceptions
2023-11-18 23:46:54,201:INFO:Importing libraries
2023-11-18 23:46:54,201:INFO:Copying training dataset
2023-11-18 23:46:55,469:INFO:Defining folds
2023-11-18 23:46:55,469:INFO:Declaring metric variables
2023-11-18 23:46:55,472:INFO:Importing untrained model
2023-11-18 23:46:55,473:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-18 23:46:55,476:INFO:Starting cross validation
2023-11-18 23:46:55,477:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 23:47:24,019:INFO:Calculating mean and std
2023-11-18 23:47:24,019:INFO:Creating metrics dataframe
2023-11-18 23:47:24,023:INFO:Uploading results into container
2023-11-18 23:47:24,024:INFO:Uploading model into container now
2023-11-18 23:47:24,024:INFO:_master_model_container: 4
2023-11-18 23:47:24,024:INFO:_display_container: 2
2023-11-18 23:47:24,024:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-18 23:47:24,024:INFO:create_model() successfully completed......................................
2023-11-18 23:47:24,135:INFO:SubProcess create_model() end ==================================
2023-11-18 23:47:24,135:INFO:Creating metrics dataframe
2023-11-18 23:47:24,135:INFO:Initializing Extreme Gradient Boosting
2023-11-18 23:47:24,135:INFO:Total runtime is 9.167009258270264 minutes
2023-11-18 23:47:24,135:INFO:SubProcess create_model() called ==================================
2023-11-18 23:47:24,135:INFO:Initializing create_model()
2023-11-18 23:47:24,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000175BE1AEF70>, model_only=True, return_train_score=False, kwargs={})
2023-11-18 23:47:24,135:INFO:Checking exceptions
2023-11-18 23:47:24,135:INFO:Importing libraries
2023-11-18 23:47:24,135:INFO:Copying training dataset
2023-11-18 23:47:25,766:INFO:Defining folds
2023-11-18 23:47:25,766:INFO:Declaring metric variables
2023-11-18 23:47:25,769:INFO:Importing untrained model
2023-11-18 23:47:25,772:INFO:Extreme Gradient Boosting Imported successfully
2023-11-18 23:47:25,776:INFO:Starting cross validation
2023-11-18 23:47:25,777:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 23:48:06,073:INFO:Calculating mean and std
2023-11-18 23:48:06,074:INFO:Creating metrics dataframe
2023-11-18 23:48:06,076:INFO:Uploading results into container
2023-11-18 23:48:06,076:INFO:Uploading model into container now
2023-11-18 23:48:06,077:INFO:_master_model_container: 5
2023-11-18 23:48:06,077:INFO:_display_container: 2
2023-11-18 23:48:06,078:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-11-18 23:48:06,078:INFO:create_model() successfully completed......................................
2023-11-18 23:48:06,178:INFO:SubProcess create_model() end ==================================
2023-11-18 23:48:06,178:INFO:Creating metrics dataframe
2023-11-18 23:48:06,189:INFO:Initializing create_model()
2023-11-18 23:48:06,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-18 23:48:06,189:INFO:Checking exceptions
2023-11-18 23:48:06,190:INFO:Importing libraries
2023-11-18 23:48:06,190:INFO:Copying training dataset
2023-11-18 23:48:07,426:INFO:Defining folds
2023-11-18 23:48:07,426:INFO:Declaring metric variables
2023-11-18 23:48:07,426:INFO:Importing untrained model
2023-11-18 23:48:07,426:INFO:Declaring custom model
2023-11-18 23:48:07,426:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-18 23:48:07,426:INFO:Cross validation set to False
2023-11-18 23:48:07,426:INFO:Fitting Model
2023-11-18 23:48:12,682:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-18 23:48:12,682:INFO:[LightGBM] [Info] Number of positive: 393779, number of negative: 393779
2023-11-18 23:48:12,870:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.150214 seconds.
2023-11-18 23:48:12,870:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-18 23:48:12,870:INFO:[LightGBM] [Info] Total Bins 39886
2023-11-18 23:48:12,870:INFO:[LightGBM] [Info] Number of data points in the train set: 787558, number of used features: 195
2023-11-18 23:48:12,885:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-11-18 23:48:16,322:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-18 23:48:16,322:INFO:create_model() successfully completed......................................
2023-11-18 23:48:16,456:INFO:_master_model_container: 5
2023-11-18 23:48:16,456:INFO:_display_container: 2
2023-11-18 23:48:16,456:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-18 23:48:16,456:INFO:compare_models() successfully completed......................................
2023-11-18 23:48:25,298:INFO:Initializing create_model()
2023-11-18 23:48:25,298:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, estimator=lightgbm, fold=None, round=4, cross_validation=False, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-18 23:48:25,298:INFO:Checking exceptions
2023-11-18 23:48:25,309:INFO:Importing libraries
2023-11-18 23:48:25,309:INFO:Copying training dataset
2023-11-18 23:48:26,609:INFO:Defining folds
2023-11-18 23:48:26,609:INFO:Declaring metric variables
2023-11-18 23:48:26,611:INFO:Importing untrained model
2023-11-18 23:48:26,613:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-18 23:48:26,615:INFO:Cross validation set to False
2023-11-18 23:48:26,615:INFO:Fitting Model
2023-11-18 23:48:31,756:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-18 23:48:31,756:INFO:[LightGBM] [Info] Number of positive: 393779, number of negative: 393779
2023-11-18 23:48:31,932:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.142959 seconds.
2023-11-18 23:48:31,932:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-18 23:48:31,938:INFO:[LightGBM] [Info] Total Bins 39886
2023-11-18 23:48:31,939:INFO:[LightGBM] [Info] Number of data points in the train set: 787558, number of used features: 195
2023-11-18 23:48:31,942:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-11-18 23:48:35,510:INFO:Initializing predict_model()
2023-11-18 23:48:35,511:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000017848A19820>)
2023-11-18 23:48:35,511:INFO:Checking exceptions
2023-11-18 23:48:35,511:INFO:Preloading libraries
2023-11-18 23:48:38,553:INFO:_display_container: 3
2023-11-18 23:48:38,553:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-18 23:48:38,553:INFO:create_model() successfully completed......................................
2023-11-18 23:48:49,531:INFO:Initializing create_model()
2023-11-18 23:48:49,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, estimator=lightgbm, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-18 23:48:49,531:INFO:Checking exceptions
2023-11-18 23:48:49,539:INFO:Importing libraries
2023-11-18 23:48:49,539:INFO:Copying training dataset
2023-11-18 23:48:50,882:INFO:Defining folds
2023-11-18 23:48:50,882:INFO:Declaring metric variables
2023-11-18 23:48:50,891:INFO:Importing untrained model
2023-11-18 23:48:50,895:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-18 23:48:50,899:INFO:Starting cross validation
2023-11-18 23:48:50,900:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-18 23:49:20,068:INFO:Calculating mean and std
2023-11-18 23:49:20,069:INFO:Creating metrics dataframe
2023-11-18 23:49:20,075:INFO:Finalizing model
2023-11-18 23:49:25,434:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-18 23:49:25,434:INFO:[LightGBM] [Info] Number of positive: 393779, number of negative: 393779
2023-11-18 23:49:25,616:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.149185 seconds.
2023-11-18 23:49:25,616:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-18 23:49:25,622:INFO:[LightGBM] [Info] Total Bins 39886
2023-11-18 23:49:25,623:INFO:[LightGBM] [Info] Number of data points in the train set: 787558, number of used features: 195
2023-11-18 23:49:25,626:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-11-18 23:49:28,969:INFO:Uploading results into container
2023-11-18 23:49:28,970:INFO:Uploading model into container now
2023-11-18 23:49:28,976:INFO:_master_model_container: 6
2023-11-18 23:49:28,977:INFO:_display_container: 4
2023-11-18 23:49:28,977:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-18 23:49:28,978:INFO:create_model() successfully completed......................................
2023-11-18 23:49:31,690:INFO:Initializing plot_model()
2023-11-18 23:49:31,690:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, system=True)
2023-11-18 23:49:31,690:INFO:Checking exceptions
2023-11-18 23:49:32,155:INFO:Preloading libraries
2023-11-18 23:49:32,160:INFO:Copying training dataset
2023-11-18 23:49:32,160:INFO:Plot type: confusion_matrix
2023-11-18 23:49:37,182:INFO:Fitting Model
2023-11-18 23:49:37,186:INFO:Scoring test/hold-out set
2023-11-18 23:49:37,653:INFO:Visual Rendered Successfully
2023-11-18 23:49:37,799:INFO:plot_model() successfully completed......................................
2023-11-18 23:50:56,913:INFO:Initializing plot_model()
2023-11-18 23:50:56,913:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, system=True)
2023-11-18 23:50:56,913:INFO:Checking exceptions
2023-11-18 23:50:57,426:INFO:Preloading libraries
2023-11-18 23:50:57,432:INFO:Copying training dataset
2023-11-18 23:50:57,432:INFO:Plot type: confusion_matrix
2023-11-18 23:51:02,536:INFO:Fitting Model
2023-11-18 23:51:02,539:INFO:Scoring test/hold-out set
2023-11-18 23:51:03,017:INFO:Visual Rendered Successfully
2023-11-18 23:51:03,155:INFO:plot_model() successfully completed......................................
2023-11-18 23:51:35,266:INFO:Initializing predict_model()
2023-11-18 23:51:35,266:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000175BB6ED820>)
2023-11-18 23:51:35,267:INFO:Checking exceptions
2023-11-18 23:51:35,267:INFO:Preloading libraries
2023-11-18 23:51:35,268:INFO:Set up data.
2023-11-18 23:51:35,678:INFO:Set up index.
2023-11-19 00:02:02,202:INFO:Initializing predict_model()
2023-11-19 00:02:02,203:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000174B615F4C0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000175BC1CEAF0>)
2023-11-19 00:02:02,203:INFO:Checking exceptions
2023-11-19 00:02:02,203:INFO:Preloading libraries
2023-11-19 00:02:02,204:INFO:Set up data.
2023-11-19 00:02:02,615:INFO:Set up index.
2023-11-19 00:02:41,159:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-19 00:02:41,159:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-19 00:02:41,159:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-19 00:02:41,159:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-19 00:02:50,092:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15884\3646303665.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2'].loc[idx]=0

2023-11-19 00:02:50,093:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15884\3646303665.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2_fillna'].loc[idx]=1

2023-11-19 00:03:42,040:INFO:PyCaret ClassificationExperiment
2023-11-19 00:03:42,040:INFO:Logging name: clf-default-name
2023-11-19 00:03:42,040:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-19 00:03:42,040:INFO:version 3.1.0
2023-11-19 00:03:42,040:INFO:Initializing setup()
2023-11-19 00:03:42,040:INFO:self.USI: 1198
2023-11-19 00:03:42,040:INFO:self._variable_keys: {'seed', 'y_train', 'fold_shuffle_param', '_ml_usecase', 'exp_name_log', 'memory', 'is_multiclass', 'X_train', 'gpu_param', 'USI', 'fold_generator', 'y', '_available_plots', 'pipeline', 'data', 'fix_imbalance', 'X', 'target_param', 'html_param', 'gpu_n_jobs_param', 'y_test', 'idx', 'exp_id', 'n_jobs_param', 'log_plots_param', 'logging_param', 'X_test', 'fold_groups_param'}
2023-11-19 00:03:42,040:INFO:Checking environment
2023-11-19 00:03:42,040:INFO:python_version: 3.8.18
2023-11-19 00:03:42,040:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-19 00:03:42,040:INFO:machine: AMD64
2023-11-19 00:03:42,040:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-19 00:03:42,044:INFO:Memory: svmem(total=137167351808, available=101255704576, percent=26.2, used=35911647232, free=101255704576)
2023-11-19 00:03:42,045:INFO:Physical Core: 24
2023-11-19 00:03:42,045:INFO:Logical Core: 32
2023-11-19 00:03:42,045:INFO:Checking libraries
2023-11-19 00:03:42,045:INFO:System:
2023-11-19 00:03:42,045:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-19 00:03:42,045:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-19 00:03:42,045:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-19 00:03:42,045:INFO:PyCaret required dependencies:
2023-11-19 00:03:42,060:INFO:                 pip: 23.3
2023-11-19 00:03:42,060:INFO:          setuptools: 68.0.0
2023-11-19 00:03:42,060:INFO:             pycaret: 3.1.0
2023-11-19 00:03:42,061:INFO:             IPython: 8.12.3
2023-11-19 00:03:42,061:INFO:          ipywidgets: 8.1.1
2023-11-19 00:03:42,061:INFO:                tqdm: 4.66.1
2023-11-19 00:03:42,061:INFO:               numpy: 1.23.5
2023-11-19 00:03:42,061:INFO:              pandas: 1.5.3
2023-11-19 00:03:42,061:INFO:              jinja2: 3.1.2
2023-11-19 00:03:42,061:INFO:               scipy: 1.10.1
2023-11-19 00:03:42,061:INFO:              joblib: 1.3.2
2023-11-19 00:03:42,061:INFO:             sklearn: 1.2.2
2023-11-19 00:03:42,061:INFO:                pyod: 1.1.0
2023-11-19 00:03:42,061:INFO:            imblearn: 0.11.0
2023-11-19 00:03:42,061:INFO:   category_encoders: 2.6.2
2023-11-19 00:03:42,061:INFO:            lightgbm: 4.1.0
2023-11-19 00:03:42,061:INFO:               numba: 0.58.1
2023-11-19 00:03:42,061:INFO:            requests: 2.31.0
2023-11-19 00:03:42,061:INFO:          matplotlib: 3.7.3
2023-11-19 00:03:42,061:INFO:          scikitplot: 0.3.7
2023-11-19 00:03:42,061:INFO:         yellowbrick: 1.5
2023-11-19 00:03:42,061:INFO:              plotly: 5.17.0
2023-11-19 00:03:42,061:INFO:    plotly-resampler: Not installed
2023-11-19 00:03:42,061:INFO:             kaleido: 0.2.1
2023-11-19 00:03:42,061:INFO:           schemdraw: 0.15
2023-11-19 00:03:42,061:INFO:         statsmodels: 0.14.0
2023-11-19 00:03:42,061:INFO:              sktime: 0.21.1
2023-11-19 00:03:42,061:INFO:               tbats: 1.1.3
2023-11-19 00:03:42,061:INFO:            pmdarima: 2.0.3
2023-11-19 00:03:42,061:INFO:              psutil: 5.9.6
2023-11-19 00:03:42,061:INFO:          markupsafe: 2.1.3
2023-11-19 00:03:42,061:INFO:             pickle5: Not installed
2023-11-19 00:03:42,061:INFO:         cloudpickle: 3.0.0
2023-11-19 00:03:42,061:INFO:         deprecation: 2.1.0
2023-11-19 00:03:42,061:INFO:              xxhash: 3.4.1
2023-11-19 00:03:42,061:INFO:           wurlitzer: Not installed
2023-11-19 00:03:42,061:INFO:PyCaret optional dependencies:
2023-11-19 00:03:42,087:INFO:                shap: Not installed
2023-11-19 00:03:42,087:INFO:           interpret: Not installed
2023-11-19 00:03:42,087:INFO:                umap: Not installed
2023-11-19 00:03:42,087:INFO:     ydata_profiling: Not installed
2023-11-19 00:03:42,087:INFO:  explainerdashboard: Not installed
2023-11-19 00:03:42,087:INFO:             autoviz: Not installed
2023-11-19 00:03:42,087:INFO:           fairlearn: Not installed
2023-11-19 00:03:42,087:INFO:          deepchecks: Not installed
2023-11-19 00:03:42,087:INFO:             xgboost: 2.0.0
2023-11-19 00:03:42,087:INFO:            catboost: Not installed
2023-11-19 00:03:42,087:INFO:              kmodes: Not installed
2023-11-19 00:03:42,087:INFO:             mlxtend: Not installed
2023-11-19 00:03:42,088:INFO:       statsforecast: Not installed
2023-11-19 00:03:42,088:INFO:        tune_sklearn: Not installed
2023-11-19 00:03:42,088:INFO:                 ray: Not installed
2023-11-19 00:03:42,088:INFO:            hyperopt: Not installed
2023-11-19 00:03:42,088:INFO:              optuna: Not installed
2023-11-19 00:03:42,088:INFO:               skopt: Not installed
2023-11-19 00:03:42,088:INFO:              mlflow: Not installed
2023-11-19 00:03:42,088:INFO:              gradio: Not installed
2023-11-19 00:03:42,088:INFO:             fastapi: Not installed
2023-11-19 00:03:42,088:INFO:             uvicorn: Not installed
2023-11-19 00:03:42,088:INFO:              m2cgen: Not installed
2023-11-19 00:03:42,088:INFO:           evidently: Not installed
2023-11-19 00:03:42,088:INFO:               fugue: Not installed
2023-11-19 00:03:42,088:INFO:           streamlit: Not installed
2023-11-19 00:03:42,088:INFO:             prophet: Not installed
2023-11-19 00:03:42,088:INFO:None
2023-11-19 00:03:42,088:INFO:Set up data.
2023-11-19 00:03:43,816:INFO:Set up folding strategy.
2023-11-19 00:03:43,817:INFO:Set up train/test split.
2023-11-19 00:03:43,817:INFO:Set up data.
2023-11-19 00:03:44,482:INFO:Set up index.
2023-11-19 00:03:44,989:INFO:Assigning column types.
2023-11-19 00:03:46,163:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-19 00:03:46,197:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-19 00:03:46,197:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-19 00:03:46,224:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 00:03:46,226:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 00:03:46,251:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-19 00:03:46,251:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-19 00:03:46,263:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 00:03:46,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 00:03:46,263:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-19 00:03:46,280:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-19 00:03:46,297:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 00:03:46,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 00:03:46,318:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-19 00:03:46,330:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 00:03:46,330:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 00:03:46,330:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-19 00:03:46,364:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 00:03:46,364:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 00:03:46,397:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 00:03:46,397:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 00:03:46,397:INFO:Preparing preprocessing pipeline...
2023-11-19 00:03:46,563:INFO:Set up simple imputation.
2023-11-19 00:03:46,730:INFO:Set up column name cleaning.
2023-11-19 00:03:48,922:INFO:Finished creating preprocessing pipeline.
2023-11-19 00:03:48,927:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             '...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-19 00:03:48,927:INFO:Creating final display dataframe.
2023-11-19 00:03:54,292:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           classes
2                   Target type            Binary
3           Original data shape     (969805, 223)
4        Transformed data shape     (969805, 223)
5   Transformed train set shape     (787558, 223)
6    Transformed test set shape     (182247, 223)
7              Numeric features               222
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              1198
2023-11-19 00:03:54,332:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 00:03:54,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 00:03:54,368:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 00:03:54,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 00:03:54,370:INFO:setup() successfully completed in 12.33s...............
2023-11-19 00:03:54,437:INFO:Initializing compare_models()
2023-11-19 00:03:54,437:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027D5577EF70>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000027D5577EF70>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-19 00:03:54,437:INFO:Checking exceptions
2023-11-19 00:03:55,354:INFO:Preparing display monitor
2023-11-19 00:03:55,371:INFO:Initializing SVM - Linear Kernel
2023-11-19 00:03:55,371:INFO:Total runtime is 0.0 minutes
2023-11-19 00:03:55,374:INFO:SubProcess create_model() called ==================================
2023-11-19 00:03:55,374:INFO:Initializing create_model()
2023-11-19 00:03:55,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027D5577EF70>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D55B3CE20>, model_only=True, return_train_score=False, kwargs={})
2023-11-19 00:03:55,374:INFO:Checking exceptions
2023-11-19 00:03:55,374:INFO:Importing libraries
2023-11-19 00:03:55,374:INFO:Copying training dataset
2023-11-19 00:03:56,720:INFO:Defining folds
2023-11-19 00:03:56,720:INFO:Declaring metric variables
2023-11-19 00:03:56,723:INFO:Importing untrained model
2023-11-19 00:03:56,725:INFO:SVM - Linear Kernel Imported successfully
2023-11-19 00:03:56,728:INFO:Starting cross validation
2023-11-19 00:03:56,730:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-19 00:04:50,581:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-19 00:05:06,085:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-19 00:05:08,191:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-19 00:05:26,677:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-19 00:05:33,811:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-19 00:05:34,238:INFO:Calculating mean and std
2023-11-19 00:05:34,239:INFO:Creating metrics dataframe
2023-11-19 00:05:34,241:INFO:Uploading results into container
2023-11-19 00:05:34,241:INFO:Uploading model into container now
2023-11-19 00:05:34,242:INFO:_master_model_container: 1
2023-11-19 00:05:34,242:INFO:_display_container: 2
2023-11-19 00:05:34,242:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-19 00:05:34,242:INFO:create_model() successfully completed......................................
2023-11-19 00:05:34,299:INFO:SubProcess create_model() end ==================================
2023-11-19 00:05:34,299:INFO:Creating metrics dataframe
2023-11-19 00:05:34,304:INFO:Initializing Logistic Regression
2023-11-19 00:05:34,304:INFO:Total runtime is 1.6488858342170716 minutes
2023-11-19 00:05:34,306:INFO:SubProcess create_model() called ==================================
2023-11-19 00:05:34,306:INFO:Initializing create_model()
2023-11-19 00:05:34,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027D5577EF70>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027D55B3CE20>, model_only=True, return_train_score=False, kwargs={})
2023-11-19 00:05:34,306:INFO:Checking exceptions
2023-11-19 00:05:34,306:INFO:Importing libraries
2023-11-19 00:05:34,306:INFO:Copying training dataset
2023-11-19 00:05:35,606:INFO:Defining folds
2023-11-19 00:05:35,606:INFO:Declaring metric variables
2023-11-19 00:05:35,608:INFO:Importing untrained model
2023-11-19 00:05:35,610:INFO:Logistic Regression Imported successfully
2023-11-19 00:05:35,613:INFO:Starting cross validation
2023-11-19 00:05:35,614:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-19 21:12:43,901:INFO:Initializing create_model()
2023-11-19 21:12:43,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027D5577EF70>, estimator=lightgbm, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-19 21:12:43,902:INFO:Checking exceptions
2023-11-19 21:12:43,910:INFO:Importing libraries
2023-11-19 21:12:43,910:INFO:Copying training dataset
2023-11-19 21:12:45,319:INFO:Defining folds
2023-11-19 21:12:45,319:INFO:Declaring metric variables
2023-11-19 21:12:45,321:INFO:Importing untrained model
2023-11-19 21:12:45,324:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-19 21:12:45,328:INFO:Starting cross validation
2023-11-19 21:12:45,329:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-19 21:13:22,987:INFO:Calculating mean and std
2023-11-19 21:13:22,988:INFO:Creating metrics dataframe
2023-11-19 21:13:22,995:INFO:Finalizing model
2023-11-19 21:13:30,695:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-19 21:13:30,696:INFO:[LightGBM] [Info] Number of positive: 393779, number of negative: 393779
2023-11-19 21:13:30,991:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.222491 seconds.
2023-11-19 21:13:30,991:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-19 21:13:30,997:INFO:[LightGBM] [Info] Total Bins 39886
2023-11-19 21:13:31,001:INFO:[LightGBM] [Info] Number of data points in the train set: 787558, number of used features: 195
2023-11-19 21:13:31,013:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-11-19 21:13:37,454:INFO:Uploading results into container
2023-11-19 21:13:37,455:INFO:Uploading model into container now
2023-11-19 21:13:37,463:INFO:_master_model_container: 2
2023-11-19 21:13:37,463:INFO:_display_container: 2
2023-11-19 21:13:37,463:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-19 21:13:37,464:INFO:create_model() successfully completed......................................
2023-11-19 21:15:05,646:INFO:Initializing plot_model()
2023-11-19 21:15:05,646:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027D5577EF70>, system=True)
2023-11-19 21:15:05,646:INFO:Checking exceptions
2023-11-19 21:15:06,422:INFO:Preloading libraries
2023-11-19 21:15:06,426:INFO:Copying training dataset
2023-11-19 21:15:06,426:INFO:Plot type: feature
2023-11-19 21:15:06,427:WARNING:No coef_ found. Trying feature_importances_
2023-11-19 21:15:09,455:INFO:Visual Rendered Successfully
2023-11-19 21:15:09,554:INFO:plot_model() successfully completed......................................
2023-11-19 21:15:35,864:INFO:Initializing plot_model()
2023-11-19 21:15:35,864:INFO:plot_model(plot=feature_all, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027D5577EF70>, system=True)
2023-11-19 21:15:35,864:INFO:Checking exceptions
2023-11-19 21:15:36,343:INFO:Preloading libraries
2023-11-19 21:15:36,347:INFO:Copying training dataset
2023-11-19 21:15:36,347:INFO:Plot type: feature_all
2023-11-19 21:15:38,309:WARNING:No coef_ found. Trying feature_importances_
2023-11-19 21:15:41,011:INFO:Visual Rendered Successfully
2023-11-19 21:15:41,089:INFO:plot_model() successfully completed......................................
2023-11-19 21:19:37,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-19 21:19:37,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-19 21:19:37,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-19 21:19:37,626:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-19 21:19:46,336:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_23856\3646303665.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2'].loc[idx]=0

2023-11-19 21:19:46,337:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_23856\3646303665.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2_fillna'].loc[idx]=1

2023-11-19 21:21:00,211:INFO:PyCaret ClassificationExperiment
2023-11-19 21:21:00,211:INFO:Logging name: clf-default-name
2023-11-19 21:21:00,211:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-19 21:21:00,211:INFO:version 3.1.0
2023-11-19 21:21:00,211:INFO:Initializing setup()
2023-11-19 21:21:00,211:INFO:self.USI: befd
2023-11-19 21:21:00,211:INFO:self._variable_keys: {'USI', 'X', 'data', 'seed', 'exp_id', 'memory', 'y', 'fix_imbalance', 'log_plots_param', 'exp_name_log', 'y_test', 'fold_generator', 'is_multiclass', 'X_test', 'gpu_n_jobs_param', '_available_plots', 'X_train', 'logging_param', 'html_param', 'y_train', 'fold_groups_param', 'target_param', 'gpu_param', 'fold_shuffle_param', 'idx', '_ml_usecase', 'n_jobs_param', 'pipeline'}
2023-11-19 21:21:00,211:INFO:Checking environment
2023-11-19 21:21:00,211:INFO:python_version: 3.8.18
2023-11-19 21:21:00,211:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-19 21:21:00,211:INFO:machine: AMD64
2023-11-19 21:21:00,211:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-19 21:21:00,213:INFO:Memory: svmem(total=137167351808, available=89453637632, percent=34.8, used=47713714176, free=89453637632)
2023-11-19 21:21:00,213:INFO:Physical Core: 24
2023-11-19 21:21:00,213:INFO:Logical Core: 32
2023-11-19 21:21:00,213:INFO:Checking libraries
2023-11-19 21:21:00,213:INFO:System:
2023-11-19 21:21:00,213:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-19 21:21:00,213:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-19 21:21:00,213:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-19 21:21:00,213:INFO:PyCaret required dependencies:
2023-11-19 21:21:00,227:INFO:                 pip: 23.3
2023-11-19 21:21:00,228:INFO:          setuptools: 68.0.0
2023-11-19 21:21:00,228:INFO:             pycaret: 3.1.0
2023-11-19 21:21:00,228:INFO:             IPython: 8.12.3
2023-11-19 21:21:00,228:INFO:          ipywidgets: 8.1.1
2023-11-19 21:21:00,228:INFO:                tqdm: 4.66.1
2023-11-19 21:21:00,228:INFO:               numpy: 1.23.5
2023-11-19 21:21:00,228:INFO:              pandas: 1.5.3
2023-11-19 21:21:00,228:INFO:              jinja2: 3.1.2
2023-11-19 21:21:00,228:INFO:               scipy: 1.10.1
2023-11-19 21:21:00,228:INFO:              joblib: 1.3.2
2023-11-19 21:21:00,228:INFO:             sklearn: 1.2.2
2023-11-19 21:21:00,228:INFO:                pyod: 1.1.0
2023-11-19 21:21:00,228:INFO:            imblearn: 0.11.0
2023-11-19 21:21:00,228:INFO:   category_encoders: 2.6.2
2023-11-19 21:21:00,228:INFO:            lightgbm: 4.1.0
2023-11-19 21:21:00,228:INFO:               numba: 0.58.1
2023-11-19 21:21:00,228:INFO:            requests: 2.31.0
2023-11-19 21:21:00,228:INFO:          matplotlib: 3.7.3
2023-11-19 21:21:00,228:INFO:          scikitplot: 0.3.7
2023-11-19 21:21:00,228:INFO:         yellowbrick: 1.5
2023-11-19 21:21:00,228:INFO:              plotly: 5.17.0
2023-11-19 21:21:00,228:INFO:    plotly-resampler: Not installed
2023-11-19 21:21:00,228:INFO:             kaleido: 0.2.1
2023-11-19 21:21:00,228:INFO:           schemdraw: 0.15
2023-11-19 21:21:00,228:INFO:         statsmodels: 0.14.0
2023-11-19 21:21:00,228:INFO:              sktime: 0.21.1
2023-11-19 21:21:00,228:INFO:               tbats: 1.1.3
2023-11-19 21:21:00,228:INFO:            pmdarima: 2.0.3
2023-11-19 21:21:00,228:INFO:              psutil: 5.9.6
2023-11-19 21:21:00,228:INFO:          markupsafe: 2.1.3
2023-11-19 21:21:00,228:INFO:             pickle5: Not installed
2023-11-19 21:21:00,228:INFO:         cloudpickle: 3.0.0
2023-11-19 21:21:00,228:INFO:         deprecation: 2.1.0
2023-11-19 21:21:00,228:INFO:              xxhash: 3.4.1
2023-11-19 21:21:00,228:INFO:           wurlitzer: Not installed
2023-11-19 21:21:00,228:INFO:PyCaret optional dependencies:
2023-11-19 21:21:00,289:INFO:                shap: Not installed
2023-11-19 21:21:00,289:INFO:           interpret: Not installed
2023-11-19 21:21:00,289:INFO:                umap: Not installed
2023-11-19 21:21:00,289:INFO:     ydata_profiling: Not installed
2023-11-19 21:21:00,289:INFO:  explainerdashboard: Not installed
2023-11-19 21:21:00,289:INFO:             autoviz: Not installed
2023-11-19 21:21:00,289:INFO:           fairlearn: Not installed
2023-11-19 21:21:00,289:INFO:          deepchecks: Not installed
2023-11-19 21:21:00,289:INFO:             xgboost: 2.0.0
2023-11-19 21:21:00,289:INFO:            catboost: Not installed
2023-11-19 21:21:00,289:INFO:              kmodes: Not installed
2023-11-19 21:21:00,289:INFO:             mlxtend: Not installed
2023-11-19 21:21:00,289:INFO:       statsforecast: Not installed
2023-11-19 21:21:00,289:INFO:        tune_sklearn: Not installed
2023-11-19 21:21:00,289:INFO:                 ray: Not installed
2023-11-19 21:21:00,289:INFO:            hyperopt: Not installed
2023-11-19 21:21:00,289:INFO:              optuna: Not installed
2023-11-19 21:21:00,289:INFO:               skopt: Not installed
2023-11-19 21:21:00,289:INFO:              mlflow: Not installed
2023-11-19 21:21:00,289:INFO:              gradio: Not installed
2023-11-19 21:21:00,289:INFO:             fastapi: Not installed
2023-11-19 21:21:00,289:INFO:             uvicorn: Not installed
2023-11-19 21:21:00,289:INFO:              m2cgen: Not installed
2023-11-19 21:21:00,289:INFO:           evidently: Not installed
2023-11-19 21:21:00,289:INFO:               fugue: Not installed
2023-11-19 21:21:00,289:INFO:           streamlit: Not installed
2023-11-19 21:21:00,289:INFO:             prophet: Not installed
2023-11-19 21:21:00,289:INFO:None
2023-11-19 21:21:00,289:INFO:Set up data.
2023-11-19 21:21:01,090:INFO:Set up folding strategy.
2023-11-19 21:21:01,090:INFO:Set up train/test split.
2023-11-19 21:21:01,090:INFO:Set up data.
2023-11-19 21:21:01,583:INFO:Set up index.
2023-11-19 21:21:01,880:INFO:Assigning column types.
2023-11-19 21:21:02,579:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-19 21:21:02,600:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-19 21:21:02,602:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-19 21:21:02,618:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 21:21:02,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 21:21:02,639:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-19 21:21:02,639:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-19 21:21:02,651:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 21:21:02,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 21:21:02,653:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-19 21:21:02,675:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-19 21:21:02,688:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 21:21:02,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 21:21:02,709:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-19 21:21:02,722:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 21:21:02,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 21:21:02,724:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-19 21:21:02,757:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 21:21:02,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 21:21:02,792:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 21:21:02,792:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 21:21:02,794:INFO:Preparing preprocessing pipeline...
2023-11-19 21:21:02,890:INFO:Set up simple imputation.
2023-11-19 21:21:02,985:INFO:Set up column name cleaning.
2023-11-19 21:21:06,116:INFO:Finished creating preprocessing pipeline.
2023-11-19 21:21:06,119:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             '...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-19 21:21:06,119:INFO:Creating final display dataframe.
2023-11-19 21:21:11,751:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           classes
2                   Target type            Binary
3           Original data shape     (592693, 223)
4        Transformed data shape     (592693, 223)
5   Transformed train set shape     (410446, 223)
6    Transformed test set shape     (182247, 223)
7              Numeric features               222
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              befd
2023-11-19 21:21:11,789:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 21:21:11,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 21:21:11,824:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-19 21:21:11,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-19 21:21:11,825:INFO:setup() successfully completed in 11.62s...............
2023-11-19 21:21:13,653:INFO:Initializing compare_models()
2023-11-19 21:21:13,653:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-19 21:21:13,653:INFO:Checking exceptions
2023-11-19 21:21:14,100:INFO:Preparing display monitor
2023-11-19 21:21:14,113:INFO:Initializing SVM - Linear Kernel
2023-11-19 21:21:14,113:INFO:Total runtime is 0.0 minutes
2023-11-19 21:21:14,115:INFO:SubProcess create_model() called ==================================
2023-11-19 21:21:14,115:INFO:Initializing create_model()
2023-11-19 21:21:14,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AC6BAF3430>, model_only=True, return_train_score=False, kwargs={})
2023-11-19 21:21:14,115:INFO:Checking exceptions
2023-11-19 21:21:14,115:INFO:Importing libraries
2023-11-19 21:21:14,115:INFO:Copying training dataset
2023-11-19 21:21:14,830:INFO:Defining folds
2023-11-19 21:21:14,830:INFO:Declaring metric variables
2023-11-19 21:21:14,832:INFO:Importing untrained model
2023-11-19 21:21:14,835:INFO:SVM - Linear Kernel Imported successfully
2023-11-19 21:21:14,838:INFO:Starting cross validation
2023-11-19 21:21:14,839:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-11-19 21:21:28,673:INFO:Initializing compare_models()
2023-11-19 21:21:28,673:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=5, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': 5, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-19 21:21:28,673:INFO:Checking exceptions
2023-11-19 21:21:28,923:INFO:Preparing display monitor
2023-11-19 21:21:28,935:INFO:Initializing SVM - Linear Kernel
2023-11-19 21:21:28,935:INFO:Total runtime is 0.0 minutes
2023-11-19 21:21:28,937:INFO:SubProcess create_model() called ==================================
2023-11-19 21:21:28,937:INFO:Initializing create_model()
2023-11-19 21:21:28,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AC6BADC700>, model_only=True, return_train_score=False, kwargs={})
2023-11-19 21:21:28,937:INFO:Checking exceptions
2023-11-19 21:21:28,937:INFO:Importing libraries
2023-11-19 21:21:28,937:INFO:Copying training dataset
2023-11-19 21:21:29,675:INFO:Defining folds
2023-11-19 21:21:29,675:INFO:Declaring metric variables
2023-11-19 21:21:29,678:INFO:Importing untrained model
2023-11-19 21:21:29,680:INFO:SVM - Linear Kernel Imported successfully
2023-11-19 21:21:29,683:INFO:Starting cross validation
2023-11-19 21:21:29,684:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-19 21:21:45,282:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-19 21:21:46,465:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-19 21:21:46,816:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-19 21:21:47,981:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-19 21:21:49,290:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-11-19 21:21:49,459:INFO:Calculating mean and std
2023-11-19 21:21:49,460:INFO:Creating metrics dataframe
2023-11-19 21:21:49,462:INFO:Uploading results into container
2023-11-19 21:21:49,462:INFO:Uploading model into container now
2023-11-19 21:21:49,462:INFO:_master_model_container: 1
2023-11-19 21:21:49,462:INFO:_display_container: 2
2023-11-19 21:21:49,463:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-19 21:21:49,463:INFO:create_model() successfully completed......................................
2023-11-19 21:21:49,526:INFO:SubProcess create_model() end ==================================
2023-11-19 21:21:49,526:INFO:Creating metrics dataframe
2023-11-19 21:21:49,531:INFO:Initializing Logistic Regression
2023-11-19 21:21:49,531:INFO:Total runtime is 0.3432671268781026 minutes
2023-11-19 21:21:49,533:INFO:SubProcess create_model() called ==================================
2023-11-19 21:21:49,533:INFO:Initializing create_model()
2023-11-19 21:21:49,533:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AC6BADC700>, model_only=True, return_train_score=False, kwargs={})
2023-11-19 21:21:49,533:INFO:Checking exceptions
2023-11-19 21:21:49,533:INFO:Importing libraries
2023-11-19 21:21:49,533:INFO:Copying training dataset
2023-11-19 21:21:50,236:INFO:Defining folds
2023-11-19 21:21:50,236:INFO:Declaring metric variables
2023-11-19 21:21:50,239:INFO:Importing untrained model
2023-11-19 21:21:50,241:INFO:Logistic Regression Imported successfully
2023-11-19 21:21:50,244:INFO:Starting cross validation
2023-11-19 21:21:50,245:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-19 21:24:16,431:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-19 21:24:16,789:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-19 21:24:17,626:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-19 21:24:17,662:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-19 21:24:18,020:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-19 21:24:18,828:INFO:Calculating mean and std
2023-11-19 21:24:18,829:INFO:Creating metrics dataframe
2023-11-19 21:24:18,832:INFO:Uploading results into container
2023-11-19 21:24:18,833:INFO:Uploading model into container now
2023-11-19 21:24:18,833:INFO:_master_model_container: 2
2023-11-19 21:24:18,833:INFO:_display_container: 2
2023-11-19 21:24:18,833:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-19 21:24:18,834:INFO:create_model() successfully completed......................................
2023-11-19 21:24:18,892:INFO:SubProcess create_model() end ==================================
2023-11-19 21:24:18,892:INFO:Creating metrics dataframe
2023-11-19 21:24:18,898:INFO:Initializing Decision Tree Classifier
2023-11-19 21:24:18,898:INFO:Total runtime is 2.832714581489563 minutes
2023-11-19 21:24:18,900:INFO:SubProcess create_model() called ==================================
2023-11-19 21:24:18,900:INFO:Initializing create_model()
2023-11-19 21:24:18,900:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AC6BADC700>, model_only=True, return_train_score=False, kwargs={})
2023-11-19 21:24:18,900:INFO:Checking exceptions
2023-11-19 21:24:18,900:INFO:Importing libraries
2023-11-19 21:24:18,900:INFO:Copying training dataset
2023-11-19 21:24:19,584:INFO:Defining folds
2023-11-19 21:24:19,584:INFO:Declaring metric variables
2023-11-19 21:24:19,586:INFO:Importing untrained model
2023-11-19 21:24:19,587:INFO:Decision Tree Classifier Imported successfully
2023-11-19 21:24:19,591:INFO:Starting cross validation
2023-11-19 21:24:19,592:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-19 21:24:53,873:INFO:Calculating mean and std
2023-11-19 21:24:53,874:INFO:Creating metrics dataframe
2023-11-19 21:24:53,876:INFO:Uploading results into container
2023-11-19 21:24:53,876:INFO:Uploading model into container now
2023-11-19 21:24:53,877:INFO:_master_model_container: 3
2023-11-19 21:24:53,877:INFO:_display_container: 2
2023-11-19 21:24:53,877:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-11-19 21:24:53,877:INFO:create_model() successfully completed......................................
2023-11-19 21:24:53,937:INFO:SubProcess create_model() end ==================================
2023-11-19 21:24:53,937:INFO:Creating metrics dataframe
2023-11-19 21:24:53,942:INFO:Initializing Light Gradient Boosting Machine
2023-11-19 21:24:53,942:INFO:Total runtime is 3.4167930761973064 minutes
2023-11-19 21:24:53,945:INFO:SubProcess create_model() called ==================================
2023-11-19 21:24:53,945:INFO:Initializing create_model()
2023-11-19 21:24:53,945:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AC6BADC700>, model_only=True, return_train_score=False, kwargs={})
2023-11-19 21:24:53,945:INFO:Checking exceptions
2023-11-19 21:24:53,945:INFO:Importing libraries
2023-11-19 21:24:53,945:INFO:Copying training dataset
2023-11-19 21:24:54,683:INFO:Defining folds
2023-11-19 21:24:54,683:INFO:Declaring metric variables
2023-11-19 21:24:54,685:INFO:Importing untrained model
2023-11-19 21:24:54,687:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-19 21:24:54,691:INFO:Starting cross validation
2023-11-19 21:24:54,692:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-19 21:25:06,759:INFO:Calculating mean and std
2023-11-19 21:25:06,761:INFO:Creating metrics dataframe
2023-11-19 21:25:06,763:INFO:Uploading results into container
2023-11-19 21:25:06,764:INFO:Uploading model into container now
2023-11-19 21:25:06,764:INFO:_master_model_container: 4
2023-11-19 21:25:06,764:INFO:_display_container: 2
2023-11-19 21:25:06,764:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-19 21:25:06,764:INFO:create_model() successfully completed......................................
2023-11-19 21:25:06,854:INFO:SubProcess create_model() end ==================================
2023-11-19 21:25:06,854:INFO:Creating metrics dataframe
2023-11-19 21:25:06,860:INFO:Initializing Extreme Gradient Boosting
2023-11-19 21:25:06,860:INFO:Total runtime is 3.6320889910062157 minutes
2023-11-19 21:25:06,862:INFO:SubProcess create_model() called ==================================
2023-11-19 21:25:06,862:INFO:Initializing create_model()
2023-11-19 21:25:06,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, estimator=xgboost, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002AC6BADC700>, model_only=True, return_train_score=False, kwargs={})
2023-11-19 21:25:06,862:INFO:Checking exceptions
2023-11-19 21:25:06,862:INFO:Importing libraries
2023-11-19 21:25:06,862:INFO:Copying training dataset
2023-11-19 21:25:07,605:INFO:Defining folds
2023-11-19 21:25:07,605:INFO:Declaring metric variables
2023-11-19 21:25:07,607:INFO:Importing untrained model
2023-11-19 21:25:07,609:INFO:Extreme Gradient Boosting Imported successfully
2023-11-19 21:25:07,613:INFO:Starting cross validation
2023-11-19 21:25:07,614:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-19 21:25:27,445:INFO:Calculating mean and std
2023-11-19 21:25:27,446:INFO:Creating metrics dataframe
2023-11-19 21:25:27,447:INFO:Uploading results into container
2023-11-19 21:25:27,448:INFO:Uploading model into container now
2023-11-19 21:25:27,448:INFO:_master_model_container: 5
2023-11-19 21:25:27,448:INFO:_display_container: 2
2023-11-19 21:25:27,449:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-11-19 21:25:27,449:INFO:create_model() successfully completed......................................
2023-11-19 21:25:27,511:INFO:SubProcess create_model() end ==================================
2023-11-19 21:25:27,511:INFO:Creating metrics dataframe
2023-11-19 21:25:27,521:INFO:Initializing create_model()
2023-11-19 21:25:27,521:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-11-19 21:25:27,521:INFO:Checking exceptions
2023-11-19 21:25:27,522:INFO:Importing libraries
2023-11-19 21:25:27,522:INFO:Copying training dataset
2023-11-19 21:25:28,214:INFO:Defining folds
2023-11-19 21:25:28,215:INFO:Declaring metric variables
2023-11-19 21:25:28,215:INFO:Importing untrained model
2023-11-19 21:25:28,215:INFO:Declaring custom model
2023-11-19 21:25:28,215:INFO:Logistic Regression Imported successfully
2023-11-19 21:25:28,216:INFO:Cross validation set to False
2023-11-19 21:25:28,216:INFO:Fitting Model
2023-11-19 21:26:11,222:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-19 21:26:11,236:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-19 21:26:11,236:INFO:create_model() successfully completed......................................
2023-11-19 21:26:11,315:INFO:_master_model_container: 5
2023-11-19 21:26:11,315:INFO:_display_container: 2
2023-11-19 21:26:11,315:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-19 21:26:11,315:INFO:compare_models() successfully completed......................................
2023-11-19 21:32:26,148:INFO:Initializing create_model()
2023-11-19 21:32:26,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, estimator=lightgbm, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-19 21:32:26,148:INFO:Checking exceptions
2023-11-19 21:32:26,157:INFO:Importing libraries
2023-11-19 21:32:26,157:INFO:Copying training dataset
2023-11-19 21:32:26,905:INFO:Defining folds
2023-11-19 21:32:26,905:INFO:Declaring metric variables
2023-11-19 21:32:26,908:INFO:Importing untrained model
2023-11-19 21:32:26,910:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-19 21:32:26,913:INFO:Starting cross validation
2023-11-19 21:32:26,914:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-19 21:32:38,701:INFO:Calculating mean and std
2023-11-19 21:32:38,702:INFO:Creating metrics dataframe
2023-11-19 21:32:38,705:INFO:Finalizing model
2023-11-19 21:32:41,521:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-19 21:32:41,522:INFO:[LightGBM] [Info] Number of positive: 16667, number of negative: 393779
2023-11-19 21:32:41,629:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.086839 seconds.
2023-11-19 21:32:41,629:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-19 21:32:41,633:INFO:[LightGBM] [Info] Total Bins 28737
2023-11-19 21:32:41,633:INFO:[LightGBM] [Info] Number of data points in the train set: 410446, number of used features: 197
2023-11-19 21:32:41,636:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.040607 -> initscore=-3.162359
2023-11-19 21:32:41,636:INFO:[LightGBM] [Info] Start training from score -3.162359
2023-11-19 21:32:42,895:INFO:Uploading results into container
2023-11-19 21:32:42,897:INFO:Uploading model into container now
2023-11-19 21:32:42,903:INFO:_master_model_container: 6
2023-11-19 21:32:42,903:INFO:_display_container: 3
2023-11-19 21:32:42,903:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-19 21:32:42,904:INFO:create_model() successfully completed......................................
2023-11-19 21:34:07,845:INFO:Initializing plot_model()
2023-11-19 21:34:07,845:INFO:plot_model(plot=feature_all, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AC6BB0C550>, system=True)
2023-11-19 21:34:07,845:INFO:Checking exceptions
2023-11-19 21:34:08,120:INFO:Preloading libraries
2023-11-19 21:34:08,125:INFO:Copying training dataset
2023-11-19 21:34:08,125:INFO:Plot type: feature_all
2023-11-19 21:34:09,171:WARNING:No coef_ found. Trying feature_importances_
2023-11-19 21:34:10,970:INFO:Visual Rendered Successfully
2023-11-19 21:34:11,033:INFO:plot_model() successfully completed......................................
2023-11-20 01:32:43,727:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_23856\3646303665.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2'].loc[idx]=0

2023-11-20 01:32:43,729:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_23856\3646303665.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2_fillna'].loc[idx]=1

2023-11-20 01:33:55,994:INFO:PyCaret ClassificationExperiment
2023-11-20 01:33:55,994:INFO:Logging name: clf-default-name
2023-11-20 01:33:55,994:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-20 01:33:55,994:INFO:version 3.1.0
2023-11-20 01:33:55,994:INFO:Initializing setup()
2023-11-20 01:33:55,994:INFO:self.USI: 6091
2023-11-20 01:33:55,994:INFO:self._variable_keys: {'USI', 'X', 'data', 'seed', 'exp_id', 'memory', 'y', 'fix_imbalance', 'log_plots_param', 'exp_name_log', 'y_test', 'fold_generator', 'is_multiclass', 'X_test', 'gpu_n_jobs_param', '_available_plots', 'X_train', 'logging_param', 'html_param', 'y_train', 'fold_groups_param', 'target_param', 'gpu_param', 'fold_shuffle_param', 'idx', '_ml_usecase', 'n_jobs_param', 'pipeline'}
2023-11-20 01:33:55,994:INFO:Checking environment
2023-11-20 01:33:55,994:INFO:python_version: 3.8.18
2023-11-20 01:33:55,994:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-20 01:33:55,994:INFO:machine: AMD64
2023-11-20 01:33:55,994:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-20 01:33:55,997:INFO:Memory: svmem(total=137167351808, available=77325537280, percent=43.6, used=59841814528, free=77325537280)
2023-11-20 01:33:55,997:INFO:Physical Core: 24
2023-11-20 01:33:55,997:INFO:Logical Core: 32
2023-11-20 01:33:55,997:INFO:Checking libraries
2023-11-20 01:33:55,997:INFO:System:
2023-11-20 01:33:55,997:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-20 01:33:55,997:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-20 01:33:55,997:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-20 01:33:55,997:INFO:PyCaret required dependencies:
2023-11-20 01:33:55,997:INFO:                 pip: 23.3
2023-11-20 01:33:55,997:INFO:          setuptools: 68.0.0
2023-11-20 01:33:55,997:INFO:             pycaret: 3.1.0
2023-11-20 01:33:55,997:INFO:             IPython: 8.12.3
2023-11-20 01:33:55,997:INFO:          ipywidgets: 8.1.1
2023-11-20 01:33:55,998:INFO:                tqdm: 4.66.1
2023-11-20 01:33:55,998:INFO:               numpy: 1.23.5
2023-11-20 01:33:55,998:INFO:              pandas: 1.5.3
2023-11-20 01:33:55,998:INFO:              jinja2: 3.1.2
2023-11-20 01:33:55,998:INFO:               scipy: 1.10.1
2023-11-20 01:33:55,998:INFO:              joblib: 1.3.2
2023-11-20 01:33:55,998:INFO:             sklearn: 1.2.2
2023-11-20 01:33:55,998:INFO:                pyod: 1.1.0
2023-11-20 01:33:55,998:INFO:            imblearn: 0.11.0
2023-11-20 01:33:55,998:INFO:   category_encoders: 2.6.2
2023-11-20 01:33:55,998:INFO:            lightgbm: 4.1.0
2023-11-20 01:33:55,998:INFO:               numba: 0.58.1
2023-11-20 01:33:55,998:INFO:            requests: 2.31.0
2023-11-20 01:33:55,998:INFO:          matplotlib: 3.7.3
2023-11-20 01:33:55,998:INFO:          scikitplot: 0.3.7
2023-11-20 01:33:55,998:INFO:         yellowbrick: 1.5
2023-11-20 01:33:55,998:INFO:              plotly: 5.17.0
2023-11-20 01:33:55,998:INFO:    plotly-resampler: Not installed
2023-11-20 01:33:55,998:INFO:             kaleido: 0.2.1
2023-11-20 01:33:55,998:INFO:           schemdraw: 0.15
2023-11-20 01:33:55,998:INFO:         statsmodels: 0.14.0
2023-11-20 01:33:55,998:INFO:              sktime: 0.21.1
2023-11-20 01:33:55,998:INFO:               tbats: 1.1.3
2023-11-20 01:33:55,998:INFO:            pmdarima: 2.0.3
2023-11-20 01:33:55,998:INFO:              psutil: 5.9.6
2023-11-20 01:33:55,998:INFO:          markupsafe: 2.1.3
2023-11-20 01:33:55,998:INFO:             pickle5: Not installed
2023-11-20 01:33:55,998:INFO:         cloudpickle: 3.0.0
2023-11-20 01:33:55,998:INFO:         deprecation: 2.1.0
2023-11-20 01:33:55,998:INFO:              xxhash: 3.4.1
2023-11-20 01:33:55,998:INFO:           wurlitzer: Not installed
2023-11-20 01:33:55,998:INFO:PyCaret optional dependencies:
2023-11-20 01:33:55,998:INFO:                shap: Not installed
2023-11-20 01:33:55,998:INFO:           interpret: Not installed
2023-11-20 01:33:55,998:INFO:                umap: Not installed
2023-11-20 01:33:55,998:INFO:     ydata_profiling: Not installed
2023-11-20 01:33:55,998:INFO:  explainerdashboard: Not installed
2023-11-20 01:33:55,998:INFO:             autoviz: Not installed
2023-11-20 01:33:55,998:INFO:           fairlearn: Not installed
2023-11-20 01:33:55,998:INFO:          deepchecks: Not installed
2023-11-20 01:33:55,998:INFO:             xgboost: 2.0.0
2023-11-20 01:33:55,998:INFO:            catboost: Not installed
2023-11-20 01:33:55,998:INFO:              kmodes: Not installed
2023-11-20 01:33:55,998:INFO:             mlxtend: Not installed
2023-11-20 01:33:55,998:INFO:       statsforecast: Not installed
2023-11-20 01:33:55,998:INFO:        tune_sklearn: Not installed
2023-11-20 01:33:55,998:INFO:                 ray: Not installed
2023-11-20 01:33:55,998:INFO:            hyperopt: Not installed
2023-11-20 01:33:55,998:INFO:              optuna: Not installed
2023-11-20 01:33:55,998:INFO:               skopt: Not installed
2023-11-20 01:33:55,998:INFO:              mlflow: Not installed
2023-11-20 01:33:55,998:INFO:              gradio: Not installed
2023-11-20 01:33:55,998:INFO:             fastapi: Not installed
2023-11-20 01:33:55,998:INFO:             uvicorn: Not installed
2023-11-20 01:33:55,998:INFO:              m2cgen: Not installed
2023-11-20 01:33:55,998:INFO:           evidently: Not installed
2023-11-20 01:33:55,999:INFO:               fugue: Not installed
2023-11-20 01:33:55,999:INFO:           streamlit: Not installed
2023-11-20 01:33:55,999:INFO:             prophet: Not installed
2023-11-20 01:33:55,999:INFO:None
2023-11-20 01:33:55,999:INFO:Set up data.
2023-11-20 01:33:57,287:INFO:Set up folding strategy.
2023-11-20 01:33:57,287:INFO:Set up train/test split.
2023-11-20 01:33:57,287:INFO:Set up data.
2023-11-20 01:33:57,952:INFO:Set up index.
2023-11-20 01:33:58,415:INFO:Assigning column types.
2023-11-20 01:33:59,379:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-20 01:33:59,400:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-20 01:33:59,401:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:33:59,414:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:33:59,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:33:59,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-20 01:33:59,436:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:33:59,449:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:33:59,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:33:59,451:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-20 01:33:59,471:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:33:59,483:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:33:59,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:33:59,505:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:33:59,518:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:33:59,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:33:59,519:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-20 01:33:59,553:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:33:59,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:33:59,587:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:33:59,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:33:59,590:INFO:Preparing preprocessing pipeline...
2023-11-20 01:33:59,728:INFO:Set up simple imputation.
2023-11-20 01:33:59,872:INFO:Set up column name cleaning.
2023-11-20 01:34:04,374:INFO:Finished creating preprocessing pipeline.
2023-11-20 01:34:04,377:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             '...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-20 01:34:04,377:INFO:Creating final display dataframe.
2023-11-20 01:34:12,346:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           classes
2                   Target type            Binary
3           Original data shape    (1101186, 172)
4        Transformed data shape    (1101186, 172)
5   Transformed train set shape     (770131, 172)
6    Transformed test set shape     (331055, 172)
7              Numeric features               171
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              6091
2023-11-20 01:34:12,383:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:34:12,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:34:12,418:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:34:12,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:34:12,420:INFO:setup() successfully completed in 16.44s...............
2023-11-20 01:34:18,477:INFO:Initializing create_model()
2023-11-20 01:34:18,477:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002AF44F312E0>, estimator=lightgbm, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-20 01:34:18,478:INFO:Checking exceptions
2023-11-20 01:34:18,487:INFO:Importing libraries
2023-11-20 01:34:18,487:INFO:Copying training dataset
2023-11-20 01:34:19,482:INFO:Defining folds
2023-11-20 01:34:19,483:INFO:Declaring metric variables
2023-11-20 01:34:19,486:INFO:Importing untrained model
2023-11-20 01:34:19,489:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-20 01:34:19,493:INFO:Starting cross validation
2023-11-20 01:34:19,494:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-20 01:34:36,733:INFO:Calculating mean and std
2023-11-20 01:34:36,734:INFO:Creating metrics dataframe
2023-11-20 01:34:36,737:INFO:Finalizing model
2023-11-20 01:34:40,529:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-20 01:34:40,530:INFO:[LightGBM] [Info] Number of positive: 16786, number of negative: 753345
2023-11-20 01:34:40,671:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.033467 seconds.
2023-11-20 01:34:40,671:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-20 01:34:40,671:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-20 01:34:40,672:INFO:[LightGBM] [Info] Total Bins 20703
2023-11-20 01:34:40,673:INFO:[LightGBM] [Info] Number of data points in the train set: 770131, number of used features: 153
2023-11-20 01:34:40,675:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.021796 -> initscore=-3.803978
2023-11-20 01:34:40,676:INFO:[LightGBM] [Info] Start training from score -3.803978
2023-11-20 01:34:41,842:INFO:Uploading results into container
2023-11-20 01:34:41,843:INFO:Uploading model into container now
2023-11-20 01:34:41,849:INFO:_master_model_container: 1
2023-11-20 01:34:41,849:INFO:_display_container: 2
2023-11-20 01:34:41,849:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-20 01:34:41,850:INFO:create_model() successfully completed......................................
2023-11-20 01:38:43,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-20 01:38:43,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-20 01:38:43,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-20 01:38:43,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-20 01:38:58,982:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_25544\3646303665.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2'].loc[idx]=0

2023-11-20 01:38:58,983:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_25544\3646303665.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2_fillna'].loc[idx]=1

2023-11-20 01:42:32,904:INFO:PyCaret ClassificationExperiment
2023-11-20 01:42:32,904:INFO:Logging name: clf-default-name
2023-11-20 01:42:32,904:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-20 01:42:32,904:INFO:version 3.1.0
2023-11-20 01:42:32,904:INFO:Initializing setup()
2023-11-20 01:42:32,904:INFO:self.USI: e7dd
2023-11-20 01:42:32,904:INFO:self._variable_keys: {'y_test', 'exp_name_log', 'fold_generator', 'data', 'is_multiclass', 'X_train', 'gpu_n_jobs_param', 'html_param', 'fix_imbalance', 'y', 'y_train', 'gpu_param', 'logging_param', '_ml_usecase', '_available_plots', 'fold_groups_param', 'target_param', 'seed', 'exp_id', 'USI', 'pipeline', 'n_jobs_param', 'memory', 'X_test', 'X', 'fold_shuffle_param', 'idx', 'log_plots_param'}
2023-11-20 01:42:32,904:INFO:Checking environment
2023-11-20 01:42:32,904:INFO:python_version: 3.8.18
2023-11-20 01:42:32,904:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-20 01:42:32,904:INFO:machine: AMD64
2023-11-20 01:42:32,904:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-20 01:42:32,907:INFO:Memory: svmem(total=137167351808, available=70653943808, percent=48.5, used=66513408000, free=70653943808)
2023-11-20 01:42:32,907:INFO:Physical Core: 24
2023-11-20 01:42:32,907:INFO:Logical Core: 32
2023-11-20 01:42:32,907:INFO:Checking libraries
2023-11-20 01:42:32,907:INFO:System:
2023-11-20 01:42:32,907:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-20 01:42:32,907:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-20 01:42:32,907:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-20 01:42:32,907:INFO:PyCaret required dependencies:
2023-11-20 01:42:32,920:INFO:                 pip: 23.3
2023-11-20 01:42:32,920:INFO:          setuptools: 68.0.0
2023-11-20 01:42:32,920:INFO:             pycaret: 3.1.0
2023-11-20 01:42:32,920:INFO:             IPython: 8.12.3
2023-11-20 01:42:32,920:INFO:          ipywidgets: 8.1.1
2023-11-20 01:42:32,920:INFO:                tqdm: 4.66.1
2023-11-20 01:42:32,920:INFO:               numpy: 1.23.5
2023-11-20 01:42:32,920:INFO:              pandas: 1.5.3
2023-11-20 01:42:32,920:INFO:              jinja2: 3.1.2
2023-11-20 01:42:32,920:INFO:               scipy: 1.10.1
2023-11-20 01:42:32,920:INFO:              joblib: 1.3.2
2023-11-20 01:42:32,920:INFO:             sklearn: 1.2.2
2023-11-20 01:42:32,920:INFO:                pyod: 1.1.0
2023-11-20 01:42:32,920:INFO:            imblearn: 0.11.0
2023-11-20 01:42:32,920:INFO:   category_encoders: 2.6.2
2023-11-20 01:42:32,920:INFO:            lightgbm: 4.1.0
2023-11-20 01:42:32,920:INFO:               numba: 0.58.1
2023-11-20 01:42:32,920:INFO:            requests: 2.31.0
2023-11-20 01:42:32,920:INFO:          matplotlib: 3.7.3
2023-11-20 01:42:32,920:INFO:          scikitplot: 0.3.7
2023-11-20 01:42:32,920:INFO:         yellowbrick: 1.5
2023-11-20 01:42:32,920:INFO:              plotly: 5.17.0
2023-11-20 01:42:32,920:INFO:    plotly-resampler: Not installed
2023-11-20 01:42:32,920:INFO:             kaleido: 0.2.1
2023-11-20 01:42:32,920:INFO:           schemdraw: 0.15
2023-11-20 01:42:32,920:INFO:         statsmodels: 0.14.0
2023-11-20 01:42:32,920:INFO:              sktime: 0.21.1
2023-11-20 01:42:32,920:INFO:               tbats: 1.1.3
2023-11-20 01:42:32,920:INFO:            pmdarima: 2.0.3
2023-11-20 01:42:32,921:INFO:              psutil: 5.9.6
2023-11-20 01:42:32,921:INFO:          markupsafe: 2.1.3
2023-11-20 01:42:32,921:INFO:             pickle5: Not installed
2023-11-20 01:42:32,921:INFO:         cloudpickle: 3.0.0
2023-11-20 01:42:32,921:INFO:         deprecation: 2.1.0
2023-11-20 01:42:32,921:INFO:              xxhash: 3.4.1
2023-11-20 01:42:32,921:INFO:           wurlitzer: Not installed
2023-11-20 01:42:32,921:INFO:PyCaret optional dependencies:
2023-11-20 01:42:32,981:INFO:                shap: Not installed
2023-11-20 01:42:32,982:INFO:           interpret: Not installed
2023-11-20 01:42:32,982:INFO:                umap: Not installed
2023-11-20 01:42:32,982:INFO:     ydata_profiling: Not installed
2023-11-20 01:42:32,982:INFO:  explainerdashboard: Not installed
2023-11-20 01:42:32,982:INFO:             autoviz: Not installed
2023-11-20 01:42:32,982:INFO:           fairlearn: Not installed
2023-11-20 01:42:32,982:INFO:          deepchecks: Not installed
2023-11-20 01:42:32,982:INFO:             xgboost: 2.0.0
2023-11-20 01:42:32,982:INFO:            catboost: Not installed
2023-11-20 01:42:32,982:INFO:              kmodes: Not installed
2023-11-20 01:42:32,982:INFO:             mlxtend: Not installed
2023-11-20 01:42:32,982:INFO:       statsforecast: Not installed
2023-11-20 01:42:32,982:INFO:        tune_sklearn: Not installed
2023-11-20 01:42:32,982:INFO:                 ray: Not installed
2023-11-20 01:42:32,982:INFO:            hyperopt: Not installed
2023-11-20 01:42:32,982:INFO:              optuna: Not installed
2023-11-20 01:42:32,982:INFO:               skopt: Not installed
2023-11-20 01:42:32,982:INFO:              mlflow: Not installed
2023-11-20 01:42:32,982:INFO:              gradio: Not installed
2023-11-20 01:42:32,982:INFO:             fastapi: Not installed
2023-11-20 01:42:32,982:INFO:             uvicorn: Not installed
2023-11-20 01:42:32,982:INFO:              m2cgen: Not installed
2023-11-20 01:42:32,982:INFO:           evidently: Not installed
2023-11-20 01:42:32,982:INFO:               fugue: Not installed
2023-11-20 01:42:32,982:INFO:           streamlit: Not installed
2023-11-20 01:42:32,982:INFO:             prophet: Not installed
2023-11-20 01:42:32,982:INFO:None
2023-11-20 01:42:32,982:INFO:Set up data.
2023-11-20 01:42:35,377:INFO:Set up folding strategy.
2023-11-20 01:42:35,378:INFO:Set up train/test split.
2023-11-20 01:42:35,378:INFO:Set up data.
2023-11-20 01:42:36,085:INFO:Set up index.
2023-11-20 01:42:36,777:INFO:Assigning column types.
2023-11-20 01:42:38,364:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-20 01:42:38,384:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-20 01:42:38,386:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:42:38,403:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:42:38,404:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:42:38,425:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-20 01:42:38,425:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:42:38,438:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:42:38,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:42:38,439:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-20 01:42:38,459:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:42:38,472:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:42:38,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:42:38,494:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:42:38,507:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:42:38,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:42:38,508:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-20 01:42:38,543:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:42:38,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:42:38,576:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:42:38,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:42:38,579:INFO:Preparing preprocessing pipeline...
2023-11-20 01:42:38,805:INFO:Set up simple imputation.
2023-11-20 01:42:39,030:INFO:Set up column name cleaning.
2023-11-20 01:42:47,718:INFO:Finished creating preprocessing pipeline.
2023-11-20 01:42:47,721:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             '...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-20 01:42:47,721:INFO:Creating final display dataframe.
2023-11-20 01:43:01,227:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           classes
2                   Target type            Binary
3           Original data shape    (1837745, 172)
4        Transformed data shape    (1837745, 172)
5   Transformed train set shape    (1506690, 172)
6    Transformed test set shape     (331055, 172)
7              Numeric features               171
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              e7dd
2023-11-20 01:43:01,264:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:43:01,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:43:01,299:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:43:01,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:43:01,301:INFO:setup() successfully completed in 28.4s...............
2023-11-20 01:43:10,831:INFO:Initializing create_model()
2023-11-20 01:43:10,832:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=lightgbm, fold=5, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-20 01:43:10,832:INFO:Checking exceptions
2023-11-20 01:43:10,842:INFO:Importing libraries
2023-11-20 01:43:10,843:INFO:Copying training dataset
2023-11-20 01:43:12,703:INFO:Defining folds
2023-11-20 01:43:12,704:INFO:Declaring metric variables
2023-11-20 01:43:12,706:INFO:Importing untrained model
2023-11-20 01:43:12,708:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-20 01:43:12,711:INFO:Starting cross validation
2023-11-20 01:43:12,712:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-11-20 01:43:53,567:INFO:Calculating mean and std
2023-11-20 01:43:53,568:INFO:Creating metrics dataframe
2023-11-20 01:43:53,573:INFO:Finalizing model
2023-11-20 01:44:00,758:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-20 01:44:00,759:INFO:[LightGBM] [Info] Number of positive: 753345, number of negative: 753345
2023-11-20 01:44:01,070:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.246566 seconds.
2023-11-20 01:44:01,070:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-20 01:44:01,078:INFO:[LightGBM] [Info] Total Bins 30940
2023-11-20 01:44:01,080:INFO:[LightGBM] [Info] Number of data points in the train set: 1506690, number of used features: 153
2023-11-20 01:44:01,084:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-11-20 01:44:06,614:INFO:Uploading results into container
2023-11-20 01:44:06,615:INFO:Uploading model into container now
2023-11-20 01:44:06,621:INFO:_master_model_container: 1
2023-11-20 01:44:06,621:INFO:_display_container: 2
2023-11-20 01:44:06,621:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-20 01:44:06,621:INFO:create_model() successfully completed......................................
2023-11-20 01:44:32,883:INFO:Initializing plot_model()
2023-11-20 01:44:32,883:INFO:plot_model(plot=feature_all, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, system=True)
2023-11-20 01:44:32,884:INFO:Checking exceptions
2023-11-20 01:44:34,108:INFO:Preloading libraries
2023-11-20 01:44:34,113:INFO:Copying training dataset
2023-11-20 01:44:34,113:INFO:Plot type: feature_all
2023-11-20 01:44:36,916:WARNING:No coef_ found. Trying feature_importances_
2023-11-20 01:44:40,440:INFO:Visual Rendered Successfully
2023-11-20 01:44:40,523:INFO:plot_model() successfully completed......................................
2023-11-20 01:44:58,042:INFO:Initializing predict_model()
2023-11-20 01:44:58,043:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019B02455550>)
2023-11-20 01:44:58,043:INFO:Checking exceptions
2023-11-20 01:44:58,043:INFO:Preloading libraries
2023-11-20 01:44:58,044:INFO:Set up data.
2023-11-20 01:44:58,568:INFO:Set up index.
2023-11-20 01:46:18,920:INFO:Initializing predict_model()
2023-11-20 01:46:18,920:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000199C0E9D5E0>)
2023-11-20 01:46:18,920:INFO:Checking exceptions
2023-11-20 01:46:18,920:INFO:Preloading libraries
2023-11-20 01:46:18,921:INFO:Set up data.
2023-11-20 01:46:19,437:INFO:Set up index.
2023-11-20 01:46:44,866:INFO:Initializing plot_model()
2023-11-20 01:46:44,867:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, system=True)
2023-11-20 01:46:44,867:INFO:Checking exceptions
2023-11-20 01:46:45,549:INFO:Preloading libraries
2023-11-20 01:46:45,554:INFO:Copying training dataset
2023-11-20 01:46:45,554:INFO:Plot type: confusion_matrix
2023-11-20 01:46:52,685:INFO:Fitting Model
2023-11-20 01:46:52,692:INFO:Scoring test/hold-out set
2023-11-20 01:46:53,239:INFO:Visual Rendered Successfully
2023-11-20 01:46:53,399:INFO:plot_model() successfully completed......................................
2023-11-20 01:47:34,632:INFO:Initializing create_model()
2023-11-20 01:47:34,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=lightgbm, fold=2, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-20 01:47:34,632:INFO:Checking exceptions
2023-11-20 01:47:34,642:INFO:Importing libraries
2023-11-20 01:47:34,642:INFO:Copying training dataset
2023-11-20 01:47:36,535:INFO:Defining folds
2023-11-20 01:47:36,536:INFO:Declaring metric variables
2023-11-20 01:47:36,538:INFO:Importing untrained model
2023-11-20 01:47:36,540:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-20 01:47:36,544:INFO:Starting cross validation
2023-11-20 01:47:36,546:INFO:Cross validating with StratifiedKFold(n_splits=2, random_state=None, shuffle=False), n_jobs=-1
2023-11-20 01:47:52,316:INFO:Calculating mean and std
2023-11-20 01:47:52,317:INFO:Creating metrics dataframe
2023-11-20 01:47:52,320:INFO:Finalizing model
2023-11-20 01:47:59,514:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-20 01:47:59,514:INFO:[LightGBM] [Info] Number of positive: 753345, number of negative: 753345
2023-11-20 01:47:59,812:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.232390 seconds.
2023-11-20 01:47:59,812:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-20 01:47:59,820:INFO:[LightGBM] [Info] Total Bins 30940
2023-11-20 01:47:59,820:INFO:[LightGBM] [Info] Number of data points in the train set: 1506690, number of used features: 153
2023-11-20 01:47:59,825:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-11-20 01:48:05,363:INFO:Uploading results into container
2023-11-20 01:48:05,364:INFO:Uploading model into container now
2023-11-20 01:48:05,369:INFO:_master_model_container: 2
2023-11-20 01:48:05,370:INFO:_display_container: 5
2023-11-20 01:48:05,370:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-20 01:48:05,370:INFO:create_model() successfully completed......................................
2023-11-20 01:48:15,418:INFO:Initializing create_model()
2023-11-20 01:48:15,418:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=lightgbm, fold=1, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-20 01:48:15,418:INFO:Checking exceptions
2023-11-20 01:48:15,426:INFO:Importing libraries
2023-11-20 01:48:15,426:INFO:Copying training dataset
2023-11-20 01:48:17,277:INFO:Defining folds
2023-11-20 01:48:45,333:INFO:Initializing create_model()
2023-11-20 01:48:45,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=lightgbm, fold=None, round=4, cross_validation=False, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-20 01:48:45,333:INFO:Checking exceptions
2023-11-20 01:48:45,340:INFO:Importing libraries
2023-11-20 01:48:45,340:INFO:Copying training dataset
2023-11-20 01:48:47,313:INFO:Defining folds
2023-11-20 01:48:47,313:INFO:Declaring metric variables
2023-11-20 01:48:47,315:INFO:Importing untrained model
2023-11-20 01:48:47,318:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-20 01:48:47,319:INFO:Cross validation set to False
2023-11-20 01:48:47,319:INFO:Fitting Model
2023-11-20 01:48:54,369:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-20 01:48:54,370:INFO:[LightGBM] [Info] Number of positive: 753345, number of negative: 753345
2023-11-20 01:48:54,656:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.069443 seconds.
2023-11-20 01:48:54,656:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-20 01:48:54,656:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-20 01:48:54,658:INFO:[LightGBM] [Info] Total Bins 30940
2023-11-20 01:48:54,658:INFO:[LightGBM] [Info] Number of data points in the train set: 1506690, number of used features: 153
2023-11-20 01:48:54,663:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-11-20 01:48:58,880:INFO:Initializing predict_model()
2023-11-20 01:48:58,880:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000199C2EE7A60>)
2023-11-20 01:48:58,880:INFO:Checking exceptions
2023-11-20 01:48:58,880:INFO:Preloading libraries
2023-11-20 01:49:03,012:INFO:_display_container: 6
2023-11-20 01:49:03,012:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-20 01:49:03,012:INFO:create_model() successfully completed......................................
2023-11-20 01:49:49,415:INFO:Initializing compare_models()
2023-11-20 01:49:49,415:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=None, round=4, cross_validation=False, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-20 01:49:49,416:INFO:Checking exceptions
2023-11-20 01:49:50,102:INFO:Preparing display monitor
2023-11-20 01:49:50,114:INFO:Initializing SVM - Linear Kernel
2023-11-20 01:49:50,114:INFO:Total runtime is 0.0 minutes
2023-11-20 01:49:50,115:INFO:SubProcess create_model() called ==================================
2023-11-20 01:49:50,115:INFO:Initializing create_model()
2023-11-20 01:49:50,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019B0431F280>, model_only=True, return_train_score=False, kwargs={})
2023-11-20 01:49:50,116:INFO:Checking exceptions
2023-11-20 01:49:50,116:INFO:Importing libraries
2023-11-20 01:49:50,116:INFO:Copying training dataset
2023-11-20 01:49:52,002:INFO:Defining folds
2023-11-20 01:49:52,002:INFO:Declaring metric variables
2023-11-20 01:49:52,004:INFO:Importing untrained model
2023-11-20 01:49:52,007:INFO:SVM - Linear Kernel Imported successfully
2023-11-20 01:49:52,009:INFO:Cross validation set to False
2023-11-20 01:49:52,009:INFO:Fitting Model
2023-11-20 01:51:51,802:INFO:Initializing predict_model()
2023-11-20 01:51:51,803:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000199C1682310>)
2023-11-20 01:51:51,803:INFO:Checking exceptions
2023-11-20 01:51:51,803:INFO:Preloading libraries
2023-11-20 01:51:55,551:INFO:_display_container: 7
2023-11-20 01:51:55,552:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-20 01:51:55,552:INFO:create_model() successfully completed......................................
2023-11-20 01:51:55,660:INFO:SubProcess create_model() end ==================================
2023-11-20 01:51:55,660:INFO:Creating metrics dataframe
2023-11-20 01:51:55,665:INFO:Initializing Logistic Regression
2023-11-20 01:51:55,665:INFO:Total runtime is 2.0925130883852643 minutes
2023-11-20 01:51:55,667:INFO:SubProcess create_model() called ==================================
2023-11-20 01:51:55,668:INFO:Initializing create_model()
2023-11-20 01:51:55,668:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019B0431F280>, model_only=True, return_train_score=False, kwargs={})
2023-11-20 01:51:55,668:INFO:Checking exceptions
2023-11-20 01:51:55,668:INFO:Importing libraries
2023-11-20 01:51:55,668:INFO:Copying training dataset
2023-11-20 01:51:57,754:INFO:Defining folds
2023-11-20 01:51:57,754:INFO:Declaring metric variables
2023-11-20 01:51:57,756:INFO:Importing untrained model
2023-11-20 01:51:57,758:INFO:Logistic Regression Imported successfully
2023-11-20 01:51:57,764:INFO:Cross validation set to False
2023-11-20 01:51:57,765:INFO:Fitting Model
2023-11-20 01:54:30,500:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-20 01:54:30,562:INFO:Initializing predict_model()
2023-11-20 01:54:30,562:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000199C2E3DA60>)
2023-11-20 01:54:30,563:INFO:Checking exceptions
2023-11-20 01:54:30,563:INFO:Preloading libraries
2023-11-20 01:54:34,342:INFO:_display_container: 7
2023-11-20 01:54:34,343:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-20 01:54:34,343:INFO:create_model() successfully completed......................................
2023-11-20 01:54:34,439:INFO:SubProcess create_model() end ==================================
2023-11-20 01:54:34,439:INFO:Creating metrics dataframe
2023-11-20 01:54:34,445:INFO:Initializing Decision Tree Classifier
2023-11-20 01:54:34,445:INFO:Total runtime is 4.7388486623764035 minutes
2023-11-20 01:54:34,449:INFO:SubProcess create_model() called ==================================
2023-11-20 01:54:34,450:INFO:Initializing create_model()
2023-11-20 01:54:34,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000199DC892670>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019B0431F280>, model_only=True, return_train_score=False, kwargs={})
2023-11-20 01:54:34,450:INFO:Checking exceptions
2023-11-20 01:54:34,450:INFO:Importing libraries
2023-11-20 01:54:34,450:INFO:Copying training dataset
2023-11-20 01:54:36,353:INFO:Defining folds
2023-11-20 01:54:36,353:INFO:Declaring metric variables
2023-11-20 01:54:36,356:INFO:Importing untrained model
2023-11-20 01:54:36,358:INFO:Decision Tree Classifier Imported successfully
2023-11-20 01:54:36,360:INFO:Cross validation set to False
2023-11-20 01:54:36,360:INFO:Fitting Model
2023-11-20 01:55:53,465:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-20 01:55:53,465:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-20 01:55:53,465:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-20 01:55:53,465:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-20 01:56:08,214:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_27964\3646303665.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2'].loc[idx]=0

2023-11-20 01:56:08,215:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_27964\3646303665.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2_fillna'].loc[idx]=1

2023-11-20 01:57:12,310:INFO:PyCaret ClassificationExperiment
2023-11-20 01:57:12,310:INFO:Logging name: clf-default-name
2023-11-20 01:57:12,310:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-20 01:57:12,310:INFO:version 3.1.0
2023-11-20 01:57:12,310:INFO:Initializing setup()
2023-11-20 01:57:12,310:INFO:self.USI: 2aa3
2023-11-20 01:57:12,310:INFO:self._variable_keys: {'_available_plots', 'idx', 'is_multiclass', 'fold_generator', 'logging_param', 'target_param', 'fold_groups_param', 'USI', 'data', 'memory', 'pipeline', 'seed', 'exp_id', 'log_plots_param', 'y_test', 'X_train', 'exp_name_log', 'gpu_param', 'fix_imbalance', 'X_test', 'y', 'n_jobs_param', 'html_param', 'gpu_n_jobs_param', 'X', 'y_train', 'fold_shuffle_param', '_ml_usecase'}
2023-11-20 01:57:12,310:INFO:Checking environment
2023-11-20 01:57:12,310:INFO:python_version: 3.8.18
2023-11-20 01:57:12,310:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-20 01:57:12,311:INFO:machine: AMD64
2023-11-20 01:57:12,311:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-20 01:57:12,314:INFO:Memory: svmem(total=137167351808, available=81748725760, percent=40.4, used=55418626048, free=81748725760)
2023-11-20 01:57:12,314:INFO:Physical Core: 24
2023-11-20 01:57:12,314:INFO:Logical Core: 32
2023-11-20 01:57:12,314:INFO:Checking libraries
2023-11-20 01:57:12,314:INFO:System:
2023-11-20 01:57:12,314:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-20 01:57:12,314:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-20 01:57:12,314:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-20 01:57:12,314:INFO:PyCaret required dependencies:
2023-11-20 01:57:12,327:INFO:                 pip: 23.3
2023-11-20 01:57:12,327:INFO:          setuptools: 68.0.0
2023-11-20 01:57:12,328:INFO:             pycaret: 3.1.0
2023-11-20 01:57:12,328:INFO:             IPython: 8.12.3
2023-11-20 01:57:12,328:INFO:          ipywidgets: 8.1.1
2023-11-20 01:57:12,328:INFO:                tqdm: 4.66.1
2023-11-20 01:57:12,328:INFO:               numpy: 1.23.5
2023-11-20 01:57:12,328:INFO:              pandas: 1.5.3
2023-11-20 01:57:12,328:INFO:              jinja2: 3.1.2
2023-11-20 01:57:12,328:INFO:               scipy: 1.10.1
2023-11-20 01:57:12,328:INFO:              joblib: 1.3.2
2023-11-20 01:57:12,328:INFO:             sklearn: 1.2.2
2023-11-20 01:57:12,328:INFO:                pyod: 1.1.0
2023-11-20 01:57:12,328:INFO:            imblearn: 0.11.0
2023-11-20 01:57:12,328:INFO:   category_encoders: 2.6.2
2023-11-20 01:57:12,328:INFO:            lightgbm: 4.1.0
2023-11-20 01:57:12,328:INFO:               numba: 0.58.1
2023-11-20 01:57:12,328:INFO:            requests: 2.31.0
2023-11-20 01:57:12,328:INFO:          matplotlib: 3.7.3
2023-11-20 01:57:12,328:INFO:          scikitplot: 0.3.7
2023-11-20 01:57:12,328:INFO:         yellowbrick: 1.5
2023-11-20 01:57:12,328:INFO:              plotly: 5.17.0
2023-11-20 01:57:12,328:INFO:    plotly-resampler: Not installed
2023-11-20 01:57:12,328:INFO:             kaleido: 0.2.1
2023-11-20 01:57:12,328:INFO:           schemdraw: 0.15
2023-11-20 01:57:12,328:INFO:         statsmodels: 0.14.0
2023-11-20 01:57:12,328:INFO:              sktime: 0.21.1
2023-11-20 01:57:12,328:INFO:               tbats: 1.1.3
2023-11-20 01:57:12,328:INFO:            pmdarima: 2.0.3
2023-11-20 01:57:12,328:INFO:              psutil: 5.9.6
2023-11-20 01:57:12,328:INFO:          markupsafe: 2.1.3
2023-11-20 01:57:12,328:INFO:             pickle5: Not installed
2023-11-20 01:57:12,328:INFO:         cloudpickle: 3.0.0
2023-11-20 01:57:12,328:INFO:         deprecation: 2.1.0
2023-11-20 01:57:12,328:INFO:              xxhash: 3.4.1
2023-11-20 01:57:12,328:INFO:           wurlitzer: Not installed
2023-11-20 01:57:12,328:INFO:PyCaret optional dependencies:
2023-11-20 01:57:12,351:INFO:                shap: Not installed
2023-11-20 01:57:12,352:INFO:           interpret: Not installed
2023-11-20 01:57:12,352:INFO:                umap: Not installed
2023-11-20 01:57:12,352:INFO:     ydata_profiling: Not installed
2023-11-20 01:57:12,352:INFO:  explainerdashboard: Not installed
2023-11-20 01:57:12,352:INFO:             autoviz: Not installed
2023-11-20 01:57:12,352:INFO:           fairlearn: Not installed
2023-11-20 01:57:12,352:INFO:          deepchecks: Not installed
2023-11-20 01:57:12,352:INFO:             xgboost: 2.0.0
2023-11-20 01:57:12,352:INFO:            catboost: Not installed
2023-11-20 01:57:12,352:INFO:              kmodes: Not installed
2023-11-20 01:57:12,352:INFO:             mlxtend: Not installed
2023-11-20 01:57:12,352:INFO:       statsforecast: Not installed
2023-11-20 01:57:12,352:INFO:        tune_sklearn: Not installed
2023-11-20 01:57:12,352:INFO:                 ray: Not installed
2023-11-20 01:57:12,352:INFO:            hyperopt: Not installed
2023-11-20 01:57:12,352:INFO:              optuna: Not installed
2023-11-20 01:57:12,352:INFO:               skopt: Not installed
2023-11-20 01:57:12,352:INFO:              mlflow: Not installed
2023-11-20 01:57:12,352:INFO:              gradio: Not installed
2023-11-20 01:57:12,352:INFO:             fastapi: Not installed
2023-11-20 01:57:12,352:INFO:             uvicorn: Not installed
2023-11-20 01:57:12,352:INFO:              m2cgen: Not installed
2023-11-20 01:57:12,352:INFO:           evidently: Not installed
2023-11-20 01:57:12,352:INFO:               fugue: Not installed
2023-11-20 01:57:12,352:INFO:           streamlit: Not installed
2023-11-20 01:57:12,352:INFO:             prophet: Not installed
2023-11-20 01:57:12,352:INFO:None
2023-11-20 01:57:12,352:INFO:Set up data.
2023-11-20 01:57:14,840:INFO:Set up folding strategy.
2023-11-20 01:57:14,840:INFO:Set up train/test split.
2023-11-20 01:57:14,840:INFO:Set up data.
2023-11-20 01:57:15,605:INFO:Set up index.
2023-11-20 01:57:16,295:INFO:Assigning column types.
2023-11-20 01:57:17,904:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-20 01:57:17,925:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-20 01:57:17,926:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:57:17,981:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:57:17,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:57:18,002:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-20 01:57:18,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:57:18,015:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:57:18,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:57:18,016:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-20 01:57:18,037:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:57:18,050:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:57:18,052:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:57:18,072:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-20 01:57:18,086:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:57:18,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:57:18,087:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-20 01:57:18,120:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:57:18,121:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:57:18,154:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:57:18,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:57:18,157:INFO:Preparing preprocessing pipeline...
2023-11-20 01:57:18,421:INFO:Set up simple imputation.
2023-11-20 01:57:18,648:INFO:Set up column name cleaning.
2023-11-20 01:57:25,698:INFO:Finished creating preprocessing pipeline.
2023-11-20 01:57:25,701:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             '...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-20 01:57:25,701:INFO:Creating final display dataframe.
2023-11-20 01:57:32,973:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           classes
2                   Target type            Binary
3           Original data shape    (1837745, 172)
4        Transformed data shape    (1837745, 172)
5   Transformed train set shape    (1506690, 172)
6    Transformed test set shape     (331055, 172)
7              Numeric features               171
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              2aa3
2023-11-20 01:57:33,010:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:57:33,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:57:33,044:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-20 01:57:33,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-20 01:57:33,046:INFO:setup() successfully completed in 21.26s...............
2023-11-20 01:57:33,093:INFO:Initializing compare_models()
2023-11-20 01:57:33,094:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CB89C61E50>, include=['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], fold=None, round=4, cross_validation=False, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002CB89C61E50>, 'include': ['svm', 'lr', 'dt', 'lightgbm', 'xgboost'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': False, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-11-20 01:57:33,094:INFO:Checking exceptions
2023-11-20 01:57:34,254:INFO:Preparing display monitor
2023-11-20 01:57:34,270:INFO:Initializing SVM - Linear Kernel
2023-11-20 01:57:34,270:INFO:Total runtime is 0.0 minutes
2023-11-20 01:57:34,272:INFO:SubProcess create_model() called ==================================
2023-11-20 01:57:34,272:INFO:Initializing create_model()
2023-11-20 01:57:34,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CB89C61E50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CBED550FD0>, model_only=True, return_train_score=False, kwargs={})
2023-11-20 01:57:34,272:INFO:Checking exceptions
2023-11-20 01:57:34,272:INFO:Importing libraries
2023-11-20 01:57:34,272:INFO:Copying training dataset
2023-11-20 01:57:36,240:INFO:Defining folds
2023-11-20 01:57:36,240:INFO:Declaring metric variables
2023-11-20 01:57:36,242:INFO:Importing untrained model
2023-11-20 01:57:36,244:INFO:SVM - Linear Kernel Imported successfully
2023-11-20 01:57:36,246:INFO:Cross validation set to False
2023-11-20 01:57:36,246:INFO:Fitting Model
2023-11-20 01:59:37,070:INFO:Initializing predict_model()
2023-11-20 01:59:37,070:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CB89C61E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                ('actual_estimator',
                 SGDClassifier(alpha=0.0001, average=False, class_weight=None,
                               early_stopping=False, epsilon=0.1, eta0=0.001,
                               fit_intercept=True, l1_ratio=0.15,
                               learning_rate='optimal', loss='hinge',
                               max_iter=1000, n_iter_no_change=5, n_jobs=-1,
                               penalty='l2', power_t=0.5, random_state=123,
                               shuffle=True, tol=0.001, validation_fraction=0.1,
                               verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002CBEDBBDE50>)
2023-11-20 01:59:37,070:INFO:Checking exceptions
2023-11-20 01:59:37,070:INFO:Preloading libraries
2023-11-20 01:59:40,616:INFO:_display_container: 2
2023-11-20 01:59:40,617:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-11-20 01:59:40,617:INFO:create_model() successfully completed......................................
2023-11-20 01:59:40,681:INFO:SubProcess create_model() end ==================================
2023-11-20 01:59:40,681:INFO:Creating metrics dataframe
2023-11-20 01:59:40,686:INFO:Initializing Logistic Regression
2023-11-20 01:59:40,686:INFO:Total runtime is 2.106934332847595 minutes
2023-11-20 01:59:40,688:INFO:SubProcess create_model() called ==================================
2023-11-20 01:59:40,688:INFO:Initializing create_model()
2023-11-20 01:59:40,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CB89C61E50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CBED550FD0>, model_only=True, return_train_score=False, kwargs={})
2023-11-20 01:59:40,689:INFO:Checking exceptions
2023-11-20 01:59:40,689:INFO:Importing libraries
2023-11-20 01:59:40,689:INFO:Copying training dataset
2023-11-20 01:59:42,593:INFO:Defining folds
2023-11-20 01:59:42,593:INFO:Declaring metric variables
2023-11-20 01:59:42,595:INFO:Importing untrained model
2023-11-20 01:59:42,598:INFO:Logistic Regression Imported successfully
2023-11-20 01:59:42,600:INFO:Cross validation set to False
2023-11-20 01:59:42,600:INFO:Fitting Model
2023-11-20 02:02:14,295:WARNING:c:\Users\DAHS\anaconda3\envs\pycaret\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-11-20 02:02:14,356:INFO:Initializing predict_model()
2023-11-20 02:02:14,357:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CB89C61E50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=123,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002CBED814D30>)
2023-11-20 02:02:14,357:INFO:Checking exceptions
2023-11-20 02:02:14,357:INFO:Preloading libraries
2023-11-20 02:02:18,186:INFO:_display_container: 2
2023-11-20 02:02:18,187:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-11-20 02:02:18,187:INFO:create_model() successfully completed......................................
2023-11-20 02:02:18,247:INFO:SubProcess create_model() end ==================================
2023-11-20 02:02:18,247:INFO:Creating metrics dataframe
2023-11-20 02:02:18,252:INFO:Initializing Decision Tree Classifier
2023-11-20 02:02:18,252:INFO:Total runtime is 4.733022316296895 minutes
2023-11-20 02:02:18,254:INFO:SubProcess create_model() called ==================================
2023-11-20 02:02:18,254:INFO:Initializing create_model()
2023-11-20 02:02:18,254:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002CB89C61E50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002CBED550FD0>, model_only=True, return_train_score=False, kwargs={})
2023-11-20 02:02:18,254:INFO:Checking exceptions
2023-11-20 02:02:18,254:INFO:Importing libraries
2023-11-20 02:02:18,254:INFO:Copying training dataset
2023-11-20 02:02:20,298:INFO:Defining folds
2023-11-20 02:02:20,298:INFO:Declaring metric variables
2023-11-20 02:02:20,300:INFO:Importing untrained model
2023-11-20 02:02:20,302:INFO:Decision Tree Classifier Imported successfully
2023-11-20 02:02:20,304:INFO:Cross validation set to False
2023-11-20 02:02:20,305:INFO:Fitting Model
2023-11-21 00:11:51,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-21 00:11:51,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-21 00:11:51,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-21 00:11:51,208:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-11-21 00:12:02,104:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\3646303665.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2'].loc[idx]=0

2023-11-21 00:12:02,106:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\3646303665.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2_fillna'].loc[idx]=1

2023-11-21 00:12:18,270:INFO:PyCaret ClassificationExperiment
2023-11-21 00:12:18,270:INFO:Logging name: clf-default-name
2023-11-21 00:12:18,270:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-21 00:12:18,270:INFO:version 3.1.0
2023-11-21 00:12:18,270:INFO:Initializing setup()
2023-11-21 00:12:18,270:INFO:self.USI: 93a4
2023-11-21 00:12:18,270:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_param', 'y', 'exp_id', 'seed', 'data', 'memory', 'fix_imbalance', 'X_test', 'exp_name_log', 'target_param', '_ml_usecase', 'html_param', 'fold_generator', 'gpu_n_jobs_param', 'X_train', 'y_test', '_available_plots', 'pipeline', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param', 'is_multiclass', 'USI', 'y_train', 'log_plots_param'}
2023-11-21 00:12:18,270:INFO:Checking environment
2023-11-21 00:12:18,270:INFO:python_version: 3.8.18
2023-11-21 00:12:18,270:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-21 00:12:18,270:INFO:machine: AMD64
2023-11-21 00:12:18,270:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-21 00:12:18,270:INFO:Memory: svmem(total=137167351808, available=40571023360, percent=70.4, used=96596328448, free=40571023360)
2023-11-21 00:12:18,270:INFO:Physical Core: 24
2023-11-21 00:12:18,270:INFO:Logical Core: 32
2023-11-21 00:12:18,270:INFO:Checking libraries
2023-11-21 00:12:18,270:INFO:System:
2023-11-21 00:12:18,270:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-21 00:12:18,270:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-21 00:12:18,270:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-21 00:12:18,270:INFO:PyCaret required dependencies:
2023-11-21 00:12:18,296:INFO:                 pip: 23.3
2023-11-21 00:12:18,296:INFO:          setuptools: 68.0.0
2023-11-21 00:12:18,296:INFO:             pycaret: 3.1.0
2023-11-21 00:12:18,296:INFO:             IPython: 8.12.3
2023-11-21 00:12:18,296:INFO:          ipywidgets: 8.1.1
2023-11-21 00:12:18,296:INFO:                tqdm: 4.66.1
2023-11-21 00:12:18,296:INFO:               numpy: 1.23.5
2023-11-21 00:12:18,296:INFO:              pandas: 1.5.3
2023-11-21 00:12:18,296:INFO:              jinja2: 3.1.2
2023-11-21 00:12:18,296:INFO:               scipy: 1.10.1
2023-11-21 00:12:18,296:INFO:              joblib: 1.3.2
2023-11-21 00:12:18,296:INFO:             sklearn: 1.2.2
2023-11-21 00:12:18,296:INFO:                pyod: 1.1.0
2023-11-21 00:12:18,296:INFO:            imblearn: 0.11.0
2023-11-21 00:12:18,296:INFO:   category_encoders: 2.6.2
2023-11-21 00:12:18,296:INFO:            lightgbm: 4.1.0
2023-11-21 00:12:18,296:INFO:               numba: 0.58.1
2023-11-21 00:12:18,296:INFO:            requests: 2.31.0
2023-11-21 00:12:18,296:INFO:          matplotlib: 3.7.3
2023-11-21 00:12:18,296:INFO:          scikitplot: 0.3.7
2023-11-21 00:12:18,296:INFO:         yellowbrick: 1.5
2023-11-21 00:12:18,296:INFO:              plotly: 5.17.0
2023-11-21 00:12:18,296:INFO:    plotly-resampler: Not installed
2023-11-21 00:12:18,296:INFO:             kaleido: 0.2.1
2023-11-21 00:12:18,296:INFO:           schemdraw: 0.15
2023-11-21 00:12:18,296:INFO:         statsmodels: 0.14.0
2023-11-21 00:12:18,296:INFO:              sktime: 0.21.1
2023-11-21 00:12:18,296:INFO:               tbats: 1.1.3
2023-11-21 00:12:18,296:INFO:            pmdarima: 2.0.3
2023-11-21 00:12:18,296:INFO:              psutil: 5.9.6
2023-11-21 00:12:18,296:INFO:          markupsafe: 2.1.3
2023-11-21 00:12:18,296:INFO:             pickle5: Not installed
2023-11-21 00:12:18,296:INFO:         cloudpickle: 3.0.0
2023-11-21 00:12:18,296:INFO:         deprecation: 2.1.0
2023-11-21 00:12:18,296:INFO:              xxhash: 3.4.1
2023-11-21 00:12:18,296:INFO:           wurlitzer: Not installed
2023-11-21 00:12:18,296:INFO:PyCaret optional dependencies:
2023-11-21 00:12:18,411:INFO:                shap: Not installed
2023-11-21 00:12:18,411:INFO:           interpret: Not installed
2023-11-21 00:12:18,411:INFO:                umap: Not installed
2023-11-21 00:12:18,411:INFO:     ydata_profiling: Not installed
2023-11-21 00:12:18,411:INFO:  explainerdashboard: Not installed
2023-11-21 00:12:18,411:INFO:             autoviz: Not installed
2023-11-21 00:12:18,411:INFO:           fairlearn: Not installed
2023-11-21 00:12:18,411:INFO:          deepchecks: Not installed
2023-11-21 00:12:18,411:INFO:             xgboost: 2.0.0
2023-11-21 00:12:18,411:INFO:            catboost: Not installed
2023-11-21 00:12:18,411:INFO:              kmodes: Not installed
2023-11-21 00:12:18,411:INFO:             mlxtend: Not installed
2023-11-21 00:12:18,411:INFO:       statsforecast: Not installed
2023-11-21 00:12:18,411:INFO:        tune_sklearn: Not installed
2023-11-21 00:12:18,411:INFO:                 ray: Not installed
2023-11-21 00:12:18,411:INFO:            hyperopt: Not installed
2023-11-21 00:12:18,411:INFO:              optuna: Not installed
2023-11-21 00:12:18,411:INFO:               skopt: Not installed
2023-11-21 00:12:18,411:INFO:              mlflow: Not installed
2023-11-21 00:12:18,411:INFO:              gradio: Not installed
2023-11-21 00:12:18,411:INFO:             fastapi: Not installed
2023-11-21 00:12:18,411:INFO:             uvicorn: Not installed
2023-11-21 00:12:18,411:INFO:              m2cgen: Not installed
2023-11-21 00:12:18,411:INFO:           evidently: Not installed
2023-11-21 00:12:18,411:INFO:               fugue: Not installed
2023-11-21 00:12:18,411:INFO:           streamlit: Not installed
2023-11-21 00:12:18,411:INFO:             prophet: Not installed
2023-11-21 00:12:18,411:INFO:None
2023-11-21 00:12:18,411:INFO:Set up data.
2023-11-21 00:12:20,869:INFO:Set up folding strategy.
2023-11-21 00:12:20,869:INFO:Set up train/test split.
2023-11-21 00:12:20,869:INFO:Set up data.
2023-11-21 00:12:21,612:INFO:Set up index.
2023-11-21 00:12:22,396:INFO:Assigning column types.
2023-11-21 00:12:24,015:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-21 00:12:24,036:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 00:12:24,038:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 00:12:24,055:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 00:12:24,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 00:12:24,077:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 00:12:24,077:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 00:12:24,090:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 00:12:24,092:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 00:12:24,092:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-21 00:12:24,112:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 00:12:24,126:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 00:12:24,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 00:12:24,147:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 00:12:24,160:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 00:12:24,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 00:12:24,161:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-21 00:12:24,194:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 00:12:24,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 00:12:24,229:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 00:12:24,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 00:12:24,229:INFO:Preparing preprocessing pipeline...
2023-11-21 00:12:24,454:INFO:Set up simple imputation.
2023-11-21 00:12:24,684:INFO:Set up column name cleaning.
2023-11-21 00:12:29,174:INFO:Finished creating preprocessing pipeline.
2023-11-21 00:12:29,177:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             '...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-21 00:12:29,177:INFO:Creating final display dataframe.
2023-11-21 00:12:37,173:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target           classes
2                   Target type            Binary
3           Original data shape    (1837745, 172)
4        Transformed data shape    (1837745, 172)
5   Transformed train set shape    (1506690, 172)
6    Transformed test set shape     (331055, 172)
7              Numeric features               171
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              93a4
2023-11-21 00:12:37,207:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 00:12:37,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 00:12:37,240:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 00:12:37,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 00:12:37,255:INFO:setup() successfully completed in 18.98s...............
2023-11-21 00:12:37,291:INFO:Initializing create_model()
2023-11-21 00:12:37,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211791E8B80>, estimator=lightgbm, fold=None, round=4, cross_validation=False, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-21 00:12:37,291:INFO:Checking exceptions
2023-11-21 00:12:37,296:INFO:Importing libraries
2023-11-21 00:12:37,296:INFO:Copying training dataset
2023-11-21 00:12:39,317:INFO:Defining folds
2023-11-21 00:12:39,317:INFO:Declaring metric variables
2023-11-21 00:12:39,320:INFO:Importing untrained model
2023-11-21 00:12:39,322:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-21 00:12:39,325:INFO:Cross validation set to False
2023-11-21 00:12:39,325:INFO:Fitting Model
2023-11-21 00:12:46,856:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-21 00:12:46,858:INFO:[LightGBM] [Info] Number of positive: 753345, number of negative: 753345
2023-11-21 00:12:47,177:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.248460 seconds.
2023-11-21 00:12:47,177:INFO:You can set `force_col_wise=true` to remove the overhead.
2023-11-21 00:12:47,185:INFO:[LightGBM] [Info] Total Bins 30940
2023-11-21 00:12:47,187:INFO:[LightGBM] [Info] Number of data points in the train set: 1506690, number of used features: 153
2023-11-21 00:12:47,192:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.500000 -> initscore=0.000000
2023-11-21 00:12:53,126:INFO:Initializing predict_model()
2023-11-21 00:12:53,126:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211791E8B80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Epinephrine', 'Nitroglycerin',
                                             'Dopamine', 'Vasopressin',
                                             'Dextrose_5%', 'HeparinSodium',
                                             'Norepinephrine',
                                             'Potassium_Chloride',
                                             'Phenylephrine', 'Dobutamine',
                                             'Phenylephrine (50/250)',
                                             'Cisatracurium', 'Esmolol',
                                             'Milrinone', 'D...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000211795131F0>)
2023-11-21 00:12:53,126:INFO:Checking exceptions
2023-11-21 00:12:53,126:INFO:Preloading libraries
2023-11-21 00:12:57,255:INFO:_display_container: 2
2023-11-21 00:12:57,256:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-21 00:12:57,256:INFO:create_model() successfully completed......................................
2023-11-21 00:13:05,992:INFO:Initializing predict_model()
2023-11-21 00:13:05,992:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211791E8B80>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000211795131F0>)
2023-11-21 00:13:05,992:INFO:Checking exceptions
2023-11-21 00:13:05,992:INFO:Preloading libraries
2023-11-21 00:13:05,994:INFO:Set up data.
2023-11-21 00:13:06,536:INFO:Set up index.
2023-11-21 00:59:21,004:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\3646303665.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2'].loc[idx]=0

2023-11-21 00:59:21,007:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\3646303665.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  dataset['pao2/fio2_fillna'].loc[idx]=1

2023-11-21 01:13:08,287:INFO:PyCaret ClassificationExperiment
2023-11-21 01:13:08,287:INFO:Logging name: clf-default-name
2023-11-21 01:13:08,287:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-21 01:13:08,287:INFO:version 3.1.0
2023-11-21 01:13:08,287:INFO:Initializing setup()
2023-11-21 01:13:08,287:INFO:self.USI: 7bcf
2023-11-21 01:13:08,287:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_param', 'y', 'exp_id', 'seed', 'data', 'memory', 'fix_imbalance', 'X_test', 'exp_name_log', 'target_param', '_ml_usecase', 'html_param', 'fold_generator', 'gpu_n_jobs_param', 'X_train', 'y_test', '_available_plots', 'pipeline', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param', 'is_multiclass', 'USI', 'y_train', 'log_plots_param'}
2023-11-21 01:13:08,287:INFO:Checking environment
2023-11-21 01:13:08,287:INFO:python_version: 3.8.18
2023-11-21 01:13:08,287:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-21 01:13:08,287:INFO:machine: AMD64
2023-11-21 01:13:08,287:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-21 01:13:08,290:INFO:Memory: svmem(total=137167351808, available=75339046912, percent=45.1, used=61828304896, free=75339046912)
2023-11-21 01:13:08,290:INFO:Physical Core: 24
2023-11-21 01:13:08,291:INFO:Logical Core: 32
2023-11-21 01:13:08,291:INFO:Checking libraries
2023-11-21 01:13:08,291:INFO:System:
2023-11-21 01:13:08,291:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-21 01:13:08,291:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-21 01:13:08,291:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-21 01:13:08,291:INFO:PyCaret required dependencies:
2023-11-21 01:13:08,291:INFO:                 pip: 23.3
2023-11-21 01:13:08,291:INFO:          setuptools: 68.0.0
2023-11-21 01:13:08,291:INFO:             pycaret: 3.1.0
2023-11-21 01:13:08,291:INFO:             IPython: 8.12.3
2023-11-21 01:13:08,291:INFO:          ipywidgets: 8.1.1
2023-11-21 01:13:08,291:INFO:                tqdm: 4.66.1
2023-11-21 01:13:08,291:INFO:               numpy: 1.23.5
2023-11-21 01:13:08,291:INFO:              pandas: 1.5.3
2023-11-21 01:13:08,291:INFO:              jinja2: 3.1.2
2023-11-21 01:13:08,291:INFO:               scipy: 1.10.1
2023-11-21 01:13:08,291:INFO:              joblib: 1.3.2
2023-11-21 01:13:08,291:INFO:             sklearn: 1.2.2
2023-11-21 01:13:08,291:INFO:                pyod: 1.1.0
2023-11-21 01:13:08,291:INFO:            imblearn: 0.11.0
2023-11-21 01:13:08,291:INFO:   category_encoders: 2.6.2
2023-11-21 01:13:08,291:INFO:            lightgbm: 4.1.0
2023-11-21 01:13:08,291:INFO:               numba: 0.58.1
2023-11-21 01:13:08,291:INFO:            requests: 2.31.0
2023-11-21 01:13:08,291:INFO:          matplotlib: 3.7.3
2023-11-21 01:13:08,291:INFO:          scikitplot: 0.3.7
2023-11-21 01:13:08,291:INFO:         yellowbrick: 1.5
2023-11-21 01:13:08,291:INFO:              plotly: 5.17.0
2023-11-21 01:13:08,291:INFO:    plotly-resampler: Not installed
2023-11-21 01:13:08,291:INFO:             kaleido: 0.2.1
2023-11-21 01:13:08,291:INFO:           schemdraw: 0.15
2023-11-21 01:13:08,291:INFO:         statsmodels: 0.14.0
2023-11-21 01:13:08,291:INFO:              sktime: 0.21.1
2023-11-21 01:13:08,291:INFO:               tbats: 1.1.3
2023-11-21 01:13:08,291:INFO:            pmdarima: 2.0.3
2023-11-21 01:13:08,291:INFO:              psutil: 5.9.6
2023-11-21 01:13:08,291:INFO:          markupsafe: 2.1.3
2023-11-21 01:13:08,291:INFO:             pickle5: Not installed
2023-11-21 01:13:08,291:INFO:         cloudpickle: 3.0.0
2023-11-21 01:13:08,291:INFO:         deprecation: 2.1.0
2023-11-21 01:13:08,291:INFO:              xxhash: 3.4.1
2023-11-21 01:13:08,291:INFO:           wurlitzer: Not installed
2023-11-21 01:13:08,291:INFO:PyCaret optional dependencies:
2023-11-21 01:13:08,291:INFO:                shap: Not installed
2023-11-21 01:13:08,291:INFO:           interpret: Not installed
2023-11-21 01:13:08,291:INFO:                umap: Not installed
2023-11-21 01:13:08,291:INFO:     ydata_profiling: Not installed
2023-11-21 01:13:08,291:INFO:  explainerdashboard: Not installed
2023-11-21 01:13:08,291:INFO:             autoviz: Not installed
2023-11-21 01:13:08,291:INFO:           fairlearn: Not installed
2023-11-21 01:13:08,291:INFO:          deepchecks: Not installed
2023-11-21 01:13:08,292:INFO:             xgboost: 2.0.0
2023-11-21 01:13:08,292:INFO:            catboost: Not installed
2023-11-21 01:13:08,292:INFO:              kmodes: Not installed
2023-11-21 01:13:08,292:INFO:             mlxtend: Not installed
2023-11-21 01:13:08,292:INFO:       statsforecast: Not installed
2023-11-21 01:13:08,292:INFO:        tune_sklearn: Not installed
2023-11-21 01:13:08,292:INFO:                 ray: Not installed
2023-11-21 01:13:08,292:INFO:            hyperopt: Not installed
2023-11-21 01:13:08,292:INFO:              optuna: Not installed
2023-11-21 01:13:08,292:INFO:               skopt: Not installed
2023-11-21 01:13:08,292:INFO:              mlflow: Not installed
2023-11-21 01:13:08,292:INFO:              gradio: Not installed
2023-11-21 01:13:08,292:INFO:             fastapi: Not installed
2023-11-21 01:13:08,292:INFO:             uvicorn: Not installed
2023-11-21 01:13:08,292:INFO:              m2cgen: Not installed
2023-11-21 01:13:08,292:INFO:           evidently: Not installed
2023-11-21 01:13:08,292:INFO:               fugue: Not installed
2023-11-21 01:13:08,292:INFO:           streamlit: Not installed
2023-11-21 01:13:08,292:INFO:             prophet: Not installed
2023-11-21 01:13:08,292:INFO:None
2023-11-21 01:13:08,292:INFO:Set up data.
2023-11-21 01:13:10,293:INFO:Set up folding strategy.
2023-11-21 01:13:10,293:INFO:Set up train/test split.
2023-11-21 01:13:10,293:INFO:Set up data.
2023-11-21 01:13:11,402:INFO:Set up index.
2023-11-21 01:13:12,120:INFO:Assigning column types.
2023-11-21 01:13:13,801:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-21 01:13:13,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 01:13:13,820:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 01:13:13,831:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 01:13:13,831:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 01:13:13,851:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 01:13:13,857:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 01:13:13,870:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 01:13:13,871:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 01:13:13,871:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-21 01:13:13,891:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 01:13:13,901:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 01:13:13,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 01:13:13,924:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 01:13:13,930:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 01:13:13,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 01:13:13,939:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-21 01:13:13,971:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 01:13:13,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 01:13:14,007:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 01:13:14,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 01:13:14,009:INFO:Preparing preprocessing pipeline...
2023-11-21 01:13:14,247:INFO:Set up simple imputation.
2023-11-21 01:13:14,495:INFO:Set up column name cleaning.
2023-11-21 01:13:21,637:INFO:Finished creating preprocessing pipeline.
2023-11-21 01:13:21,641:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'R...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-21 01:13:21,641:INFO:Creating final display dataframe.
2023-11-21 01:13:35,864:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     circ_next_12h
2                   Target type            Binary
3           Original data shape    (1773472, 184)
4        Transformed data shape    (1773472, 184)
5   Transformed train set shape    (1227735, 184)
6    Transformed test set shape     (545737, 184)
7              Numeric features               183
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              7bcf
2023-11-21 01:13:35,901:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 01:13:35,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 01:13:35,936:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 01:13:35,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 01:13:35,938:INFO:setup() successfully completed in 27.66s...............
2023-11-21 01:14:04,576:INFO:Initializing create_model()
2023-11-21 01:14:04,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211793F1730>, estimator=lightgbm, fold=None, round=4, cross_validation=False, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-21 01:14:04,576:INFO:Checking exceptions
2023-11-21 01:14:04,583:INFO:Importing libraries
2023-11-21 01:14:04,583:INFO:Copying training dataset
2023-11-21 01:14:06,237:INFO:Defining folds
2023-11-21 01:14:06,237:INFO:Declaring metric variables
2023-11-21 01:14:06,240:INFO:Importing untrained model
2023-11-21 01:14:06,241:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-21 01:14:06,244:INFO:Cross validation set to False
2023-11-21 01:14:06,244:INFO:Fitting Model
2023-11-21 01:14:12,201:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-21 01:14:12,202:INFO:[LightGBM] [Info] Number of positive: 256070, number of negative: 971665
2023-11-21 01:14:12,445:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.063768 seconds.
2023-11-21 01:14:12,445:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-21 01:14:12,445:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-21 01:14:12,447:INFO:[LightGBM] [Info] Total Bins 27192
2023-11-21 01:14:12,449:INFO:[LightGBM] [Info] Number of data points in the train set: 1227735, number of used features: 179
2023-11-21 01:14:12,452:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.208571 -> initscore=-1.333560
2023-11-21 01:14:12,452:INFO:[LightGBM] [Info] Start training from score -1.333560
2023-11-21 01:14:14,453:INFO:Initializing predict_model()
2023-11-21 01:14:14,453:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211793F1730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'Rocuronium', 'Diltiazem',
                                             'HeparinSodium',...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021179E5EB80>)
2023-11-21 01:14:14,453:INFO:Checking exceptions
2023-11-21 01:14:14,454:INFO:Preloading libraries
2023-11-21 01:14:20,168:INFO:_display_container: 2
2023-11-21 01:14:20,168:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-21 01:14:20,168:INFO:create_model() successfully completed......................................
2023-11-21 01:14:35,165:INFO:Initializing predict_model()
2023-11-21 01:14:35,165:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211793F1730>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002117B89E3A0>)
2023-11-21 01:14:35,165:INFO:Checking exceptions
2023-11-21 01:14:35,165:INFO:Preloading libraries
2023-11-21 01:14:35,166:INFO:Set up data.
2023-11-21 01:14:36,029:INFO:Set up index.
2023-11-21 01:17:14,390:INFO:Initializing plot_model()
2023-11-21 01:17:14,390:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211793F1730>, system=True)
2023-11-21 01:17:14,390:INFO:Checking exceptions
2023-11-21 01:17:15,521:INFO:Preloading libraries
2023-11-21 01:17:15,526:INFO:Copying training dataset
2023-11-21 01:17:15,526:INFO:Plot type: confusion_matrix
2023-11-21 01:17:22,825:INFO:Fitting Model
2023-11-21 01:17:22,837:INFO:Scoring test/hold-out set
2023-11-21 01:17:23,776:INFO:Visual Rendered Successfully
2023-11-21 01:17:23,906:INFO:plot_model() successfully completed......................................
2023-11-21 01:34:59,601:INFO:Initializing plot_model()
2023-11-21 01:34:59,601:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211793F1730>, system=True)
2023-11-21 01:34:59,601:INFO:Checking exceptions
2023-11-21 01:35:00,312:INFO:Preloading libraries
2023-11-21 01:35:00,317:INFO:Copying training dataset
2023-11-21 01:35:00,318:INFO:Plot type: feature
2023-11-21 01:35:00,318:WARNING:No coef_ found. Trying feature_importances_
2023-11-21 01:35:02,908:INFO:Visual Rendered Successfully
2023-11-21 01:35:03,015:INFO:plot_model() successfully completed......................................
2023-11-21 01:46:03,545:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\1093694209.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['circ_event'] = (df['Annotation'] == 'circ') & (df['Annotation'].shift(1) != 'circ')

2023-11-21 01:46:39,001:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\2074717620.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['circ_event'] = (df['Annotation'] == 'circ') & (df['Annotation'].shift(1) != 'circ')

2023-11-21 02:00:58,917:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\3089452658.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['circ_event'] = (df['Annotation'] == 'circ') & (df['Annotation'].shift(1) != 'circ')

2023-11-21 02:01:41,372:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\1663874370.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['circ_event'] = (df['Annotation'] == 'circ') & (df['Annotation'].shift(1) != 'circ')

2023-11-21 02:01:44,847:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\1610945967.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['circ_event'] = (df['Annotation'] == 'circ') & (df['Annotation'].shift(1) != 'circ')

2023-11-21 02:01:48,189:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\502828299.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['circ_event'] = (df['Annotation'] == 'circ') & (df['Annotation'].shift(1) != 'circ')

2023-11-21 02:02:25,201:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\2348025855.py:6: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df['circ_event'] = (df['Annotation'] == 'circ') & (df['Annotation'].shift(1) != 'circ')

2023-11-21 02:49:52,581:INFO:PyCaret ClassificationExperiment
2023-11-21 02:49:52,581:INFO:Logging name: clf-default-name
2023-11-21 02:49:52,581:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-21 02:49:52,581:INFO:version 3.1.0
2023-11-21 02:49:52,581:INFO:Initializing setup()
2023-11-21 02:49:52,581:INFO:self.USI: fc87
2023-11-21 02:49:52,581:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_param', 'y', 'exp_id', 'seed', 'data', 'memory', 'fix_imbalance', 'X_test', 'exp_name_log', 'target_param', '_ml_usecase', 'html_param', 'fold_generator', 'gpu_n_jobs_param', 'X_train', 'y_test', '_available_plots', 'pipeline', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param', 'is_multiclass', 'USI', 'y_train', 'log_plots_param'}
2023-11-21 02:49:52,581:INFO:Checking environment
2023-11-21 02:49:52,581:INFO:python_version: 3.8.18
2023-11-21 02:49:52,581:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-21 02:49:52,581:INFO:machine: AMD64
2023-11-21 02:49:52,581:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-21 02:49:52,581:INFO:Memory: svmem(total=137167351808, available=65428074496, percent=52.3, used=71739277312, free=65428074496)
2023-11-21 02:49:52,581:INFO:Physical Core: 24
2023-11-21 02:49:52,581:INFO:Logical Core: 32
2023-11-21 02:49:52,581:INFO:Checking libraries
2023-11-21 02:49:52,581:INFO:System:
2023-11-21 02:49:52,581:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-21 02:49:52,581:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-21 02:49:52,581:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-21 02:49:52,581:INFO:PyCaret required dependencies:
2023-11-21 02:49:52,581:INFO:                 pip: 23.3
2023-11-21 02:49:52,581:INFO:          setuptools: 68.0.0
2023-11-21 02:49:52,581:INFO:             pycaret: 3.1.0
2023-11-21 02:49:52,581:INFO:             IPython: 8.12.3
2023-11-21 02:49:52,581:INFO:          ipywidgets: 8.1.1
2023-11-21 02:49:52,581:INFO:                tqdm: 4.66.1
2023-11-21 02:49:52,581:INFO:               numpy: 1.23.5
2023-11-21 02:49:52,581:INFO:              pandas: 1.5.3
2023-11-21 02:49:52,581:INFO:              jinja2: 3.1.2
2023-11-21 02:49:52,581:INFO:               scipy: 1.10.1
2023-11-21 02:49:52,581:INFO:              joblib: 1.3.2
2023-11-21 02:49:52,581:INFO:             sklearn: 1.2.2
2023-11-21 02:49:52,581:INFO:                pyod: 1.1.0
2023-11-21 02:49:52,581:INFO:            imblearn: 0.11.0
2023-11-21 02:49:52,581:INFO:   category_encoders: 2.6.2
2023-11-21 02:49:52,581:INFO:            lightgbm: 4.1.0
2023-11-21 02:49:52,581:INFO:               numba: 0.58.1
2023-11-21 02:49:52,581:INFO:            requests: 2.31.0
2023-11-21 02:49:52,581:INFO:          matplotlib: 3.7.3
2023-11-21 02:49:52,581:INFO:          scikitplot: 0.3.7
2023-11-21 02:49:52,581:INFO:         yellowbrick: 1.5
2023-11-21 02:49:52,581:INFO:              plotly: 5.17.0
2023-11-21 02:49:52,581:INFO:    plotly-resampler: Not installed
2023-11-21 02:49:52,581:INFO:             kaleido: 0.2.1
2023-11-21 02:49:52,581:INFO:           schemdraw: 0.15
2023-11-21 02:49:52,581:INFO:         statsmodels: 0.14.0
2023-11-21 02:49:52,581:INFO:              sktime: 0.21.1
2023-11-21 02:49:52,581:INFO:               tbats: 1.1.3
2023-11-21 02:49:52,581:INFO:            pmdarima: 2.0.3
2023-11-21 02:49:52,581:INFO:              psutil: 5.9.6
2023-11-21 02:49:52,581:INFO:          markupsafe: 2.1.3
2023-11-21 02:49:52,581:INFO:             pickle5: Not installed
2023-11-21 02:49:52,581:INFO:         cloudpickle: 3.0.0
2023-11-21 02:49:52,581:INFO:         deprecation: 2.1.0
2023-11-21 02:49:52,581:INFO:              xxhash: 3.4.1
2023-11-21 02:49:52,581:INFO:           wurlitzer: Not installed
2023-11-21 02:49:52,581:INFO:PyCaret optional dependencies:
2023-11-21 02:49:52,581:INFO:                shap: Not installed
2023-11-21 02:49:52,581:INFO:           interpret: Not installed
2023-11-21 02:49:52,581:INFO:                umap: Not installed
2023-11-21 02:49:52,581:INFO:     ydata_profiling: Not installed
2023-11-21 02:49:52,581:INFO:  explainerdashboard: Not installed
2023-11-21 02:49:52,581:INFO:             autoviz: Not installed
2023-11-21 02:49:52,581:INFO:           fairlearn: Not installed
2023-11-21 02:49:52,581:INFO:          deepchecks: Not installed
2023-11-21 02:49:52,581:INFO:             xgboost: 2.0.0
2023-11-21 02:49:52,581:INFO:            catboost: Not installed
2023-11-21 02:49:52,581:INFO:              kmodes: Not installed
2023-11-21 02:49:52,581:INFO:             mlxtend: Not installed
2023-11-21 02:49:52,581:INFO:       statsforecast: Not installed
2023-11-21 02:49:52,581:INFO:        tune_sklearn: Not installed
2023-11-21 02:49:52,581:INFO:                 ray: Not installed
2023-11-21 02:49:52,581:INFO:            hyperopt: Not installed
2023-11-21 02:49:52,581:INFO:              optuna: Not installed
2023-11-21 02:49:52,581:INFO:               skopt: Not installed
2023-11-21 02:49:52,581:INFO:              mlflow: Not installed
2023-11-21 02:49:52,581:INFO:              gradio: Not installed
2023-11-21 02:49:52,581:INFO:             fastapi: Not installed
2023-11-21 02:49:52,581:INFO:             uvicorn: Not installed
2023-11-21 02:49:52,581:INFO:              m2cgen: Not installed
2023-11-21 02:49:52,581:INFO:           evidently: Not installed
2023-11-21 02:49:52,593:INFO:               fugue: Not installed
2023-11-21 02:49:52,593:INFO:           streamlit: Not installed
2023-11-21 02:49:52,593:INFO:             prophet: Not installed
2023-11-21 02:49:52,593:INFO:None
2023-11-21 02:49:52,593:INFO:Set up data.
2023-11-21 02:49:55,322:INFO:Set up folding strategy.
2023-11-21 02:49:55,323:INFO:Set up train/test split.
2023-11-21 02:49:55,323:INFO:Set up data.
2023-11-21 02:49:56,415:INFO:Set up index.
2023-11-21 02:49:57,090:INFO:Assigning column types.
2023-11-21 02:49:58,613:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-21 02:49:58,628:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 02:49:58,628:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:49:58,648:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:49:58,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:49:58,654:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 02:49:58,669:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:49:58,669:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:49:58,669:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:49:58,669:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-21 02:49:58,703:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:49:58,718:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:49:58,719:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:49:58,732:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:49:58,753:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:49:58,753:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:49:58,753:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-21 02:49:58,788:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:49:58,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:49:58,815:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:49:58,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:49:58,815:INFO:Preparing preprocessing pipeline...
2023-11-21 02:49:59,049:INFO:Set up simple imputation.
2023-11-21 02:49:59,279:INFO:Set up column name cleaning.
2023-11-21 02:50:06,336:INFO:Finished creating preprocessing pipeline.
2023-11-21 02:50:06,339:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'R...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-21 02:50:06,339:INFO:Creating final display dataframe.
2023-11-21 02:50:20,206:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     circ_next_12h
2                   Target type            Binary
3           Original data shape    (1643989, 184)
4        Transformed data shape    (1643989, 184)
5   Transformed train set shape    (1098252, 184)
6    Transformed test set shape     (545737, 184)
7              Numeric features               183
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              fc87
2023-11-21 02:50:20,241:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:50:20,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:50:20,277:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:50:20,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:50:20,278:INFO:setup() successfully completed in 27.94s...............
2023-11-21 02:50:24,858:INFO:Initializing create_model()
2023-11-21 02:50:24,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002117AF30D90>, estimator=lightgbm, fold=None, round=4, cross_validation=False, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-21 02:50:24,858:INFO:Checking exceptions
2023-11-21 02:50:24,871:INFO:Importing libraries
2023-11-21 02:50:24,871:INFO:Copying training dataset
2023-11-21 02:50:27,424:INFO:Defining folds
2023-11-21 02:50:27,424:INFO:Declaring metric variables
2023-11-21 02:50:27,428:INFO:Importing untrained model
2023-11-21 02:50:27,431:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-21 02:50:27,436:INFO:Cross validation set to False
2023-11-21 02:50:27,436:INFO:Fitting Model
2023-11-21 02:50:33,284:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-21 02:50:33,285:INFO:[LightGBM] [Info] Number of positive: 131240, number of negative: 967012
2023-11-21 02:50:33,506:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.052273 seconds.
2023-11-21 02:50:33,506:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-21 02:50:33,506:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-21 02:50:33,508:INFO:[LightGBM] [Info] Total Bins 25890
2023-11-21 02:50:33,508:INFO:[LightGBM] [Info] Number of data points in the train set: 1098252, number of used features: 179
2023-11-21 02:50:33,512:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.119499 -> initscore=-1.997183
2023-11-21 02:50:33,512:INFO:[LightGBM] [Info] Start training from score -1.997183
2023-11-21 02:50:35,445:INFO:Initializing predict_model()
2023-11-21 02:50:35,445:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002117AF30D90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'Rocuronium', 'Diltiazem',
                                             'HeparinSodium',...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000211DF548B80>)
2023-11-21 02:50:35,445:INFO:Checking exceptions
2023-11-21 02:50:35,445:INFO:Preloading libraries
2023-11-21 02:50:41,297:INFO:_display_container: 2
2023-11-21 02:50:41,297:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-21 02:50:41,297:INFO:create_model() successfully completed......................................
2023-11-21 02:50:45,045:INFO:Initializing plot_model()
2023-11-21 02:50:45,045:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002117AF30D90>, system=True)
2023-11-21 02:50:45,046:INFO:Checking exceptions
2023-11-21 02:50:46,084:INFO:Preloading libraries
2023-11-21 02:50:46,091:INFO:Copying training dataset
2023-11-21 02:50:46,091:INFO:Plot type: confusion_matrix
2023-11-21 02:50:52,658:INFO:Fitting Model
2023-11-21 02:50:52,669:INFO:Scoring test/hold-out set
2023-11-21 02:50:53,611:INFO:Visual Rendered Successfully
2023-11-21 02:50:53,737:INFO:plot_model() successfully completed......................................
2023-11-21 02:51:07,870:INFO:Initializing predict_model()
2023-11-21 02:51:07,870:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002117AF30D90>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000211F9152A60>)
2023-11-21 02:51:07,870:INFO:Checking exceptions
2023-11-21 02:51:07,871:INFO:Preloading libraries
2023-11-21 02:51:07,872:INFO:Set up data.
2023-11-21 02:51:08,847:INFO:Set up index.
2023-11-21 02:52:00,764:INFO:PyCaret ClassificationExperiment
2023-11-21 02:52:00,764:INFO:Logging name: clf-default-name
2023-11-21 02:52:00,764:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-21 02:52:00,764:INFO:version 3.1.0
2023-11-21 02:52:00,764:INFO:Initializing setup()
2023-11-21 02:52:00,765:INFO:self.USI: 4389
2023-11-21 02:52:00,765:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_param', 'y', 'exp_id', 'seed', 'data', 'memory', 'fix_imbalance', 'X_test', 'exp_name_log', 'target_param', '_ml_usecase', 'html_param', 'fold_generator', 'gpu_n_jobs_param', 'X_train', 'y_test', '_available_plots', 'pipeline', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param', 'is_multiclass', 'USI', 'y_train', 'log_plots_param'}
2023-11-21 02:52:00,765:INFO:Checking environment
2023-11-21 02:52:00,765:INFO:python_version: 3.8.18
2023-11-21 02:52:00,765:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-21 02:52:00,765:INFO:machine: AMD64
2023-11-21 02:52:00,765:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-21 02:52:00,768:INFO:Memory: svmem(total=137167351808, available=94490693632, percent=31.1, used=42676658176, free=94490693632)
2023-11-21 02:52:00,768:INFO:Physical Core: 24
2023-11-21 02:52:00,768:INFO:Logical Core: 32
2023-11-21 02:52:00,768:INFO:Checking libraries
2023-11-21 02:52:00,768:INFO:System:
2023-11-21 02:52:00,768:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-21 02:52:00,768:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-21 02:52:00,768:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-21 02:52:00,768:INFO:PyCaret required dependencies:
2023-11-21 02:52:00,768:INFO:                 pip: 23.3
2023-11-21 02:52:00,768:INFO:          setuptools: 68.0.0
2023-11-21 02:52:00,768:INFO:             pycaret: 3.1.0
2023-11-21 02:52:00,768:INFO:             IPython: 8.12.3
2023-11-21 02:52:00,768:INFO:          ipywidgets: 8.1.1
2023-11-21 02:52:00,768:INFO:                tqdm: 4.66.1
2023-11-21 02:52:00,769:INFO:               numpy: 1.23.5
2023-11-21 02:52:00,769:INFO:              pandas: 1.5.3
2023-11-21 02:52:00,769:INFO:              jinja2: 3.1.2
2023-11-21 02:52:00,769:INFO:               scipy: 1.10.1
2023-11-21 02:52:00,769:INFO:              joblib: 1.3.2
2023-11-21 02:52:00,769:INFO:             sklearn: 1.2.2
2023-11-21 02:52:00,769:INFO:                pyod: 1.1.0
2023-11-21 02:52:00,769:INFO:            imblearn: 0.11.0
2023-11-21 02:52:00,769:INFO:   category_encoders: 2.6.2
2023-11-21 02:52:00,769:INFO:            lightgbm: 4.1.0
2023-11-21 02:52:00,769:INFO:               numba: 0.58.1
2023-11-21 02:52:00,769:INFO:            requests: 2.31.0
2023-11-21 02:52:00,769:INFO:          matplotlib: 3.7.3
2023-11-21 02:52:00,769:INFO:          scikitplot: 0.3.7
2023-11-21 02:52:00,769:INFO:         yellowbrick: 1.5
2023-11-21 02:52:00,769:INFO:              plotly: 5.17.0
2023-11-21 02:52:00,769:INFO:    plotly-resampler: Not installed
2023-11-21 02:52:00,769:INFO:             kaleido: 0.2.1
2023-11-21 02:52:00,769:INFO:           schemdraw: 0.15
2023-11-21 02:52:00,769:INFO:         statsmodels: 0.14.0
2023-11-21 02:52:00,769:INFO:              sktime: 0.21.1
2023-11-21 02:52:00,769:INFO:               tbats: 1.1.3
2023-11-21 02:52:00,769:INFO:            pmdarima: 2.0.3
2023-11-21 02:52:00,769:INFO:              psutil: 5.9.6
2023-11-21 02:52:00,769:INFO:          markupsafe: 2.1.3
2023-11-21 02:52:00,769:INFO:             pickle5: Not installed
2023-11-21 02:52:00,769:INFO:         cloudpickle: 3.0.0
2023-11-21 02:52:00,769:INFO:         deprecation: 2.1.0
2023-11-21 02:52:00,769:INFO:              xxhash: 3.4.1
2023-11-21 02:52:00,769:INFO:           wurlitzer: Not installed
2023-11-21 02:52:00,769:INFO:PyCaret optional dependencies:
2023-11-21 02:52:00,769:INFO:                shap: Not installed
2023-11-21 02:52:00,769:INFO:           interpret: Not installed
2023-11-21 02:52:00,769:INFO:                umap: Not installed
2023-11-21 02:52:00,769:INFO:     ydata_profiling: Not installed
2023-11-21 02:52:00,769:INFO:  explainerdashboard: Not installed
2023-11-21 02:52:00,769:INFO:             autoviz: Not installed
2023-11-21 02:52:00,769:INFO:           fairlearn: Not installed
2023-11-21 02:52:00,769:INFO:          deepchecks: Not installed
2023-11-21 02:52:00,769:INFO:             xgboost: 2.0.0
2023-11-21 02:52:00,769:INFO:            catboost: Not installed
2023-11-21 02:52:00,769:INFO:              kmodes: Not installed
2023-11-21 02:52:00,769:INFO:             mlxtend: Not installed
2023-11-21 02:52:00,769:INFO:       statsforecast: Not installed
2023-11-21 02:52:00,770:INFO:        tune_sklearn: Not installed
2023-11-21 02:52:00,770:INFO:                 ray: Not installed
2023-11-21 02:52:00,770:INFO:            hyperopt: Not installed
2023-11-21 02:52:00,770:INFO:              optuna: Not installed
2023-11-21 02:52:00,770:INFO:               skopt: Not installed
2023-11-21 02:52:00,770:INFO:              mlflow: Not installed
2023-11-21 02:52:00,770:INFO:              gradio: Not installed
2023-11-21 02:52:00,770:INFO:             fastapi: Not installed
2023-11-21 02:52:00,770:INFO:             uvicorn: Not installed
2023-11-21 02:52:00,770:INFO:              m2cgen: Not installed
2023-11-21 02:52:00,770:INFO:           evidently: Not installed
2023-11-21 02:52:00,770:INFO:               fugue: Not installed
2023-11-21 02:52:00,770:INFO:           streamlit: Not installed
2023-11-21 02:52:00,770:INFO:             prophet: Not installed
2023-11-21 02:52:00,770:INFO:None
2023-11-21 02:52:00,770:INFO:Set up data.
2023-11-21 02:52:03,173:INFO:Set up folding strategy.
2023-11-21 02:52:03,174:INFO:Set up train/test split.
2023-11-21 02:52:03,174:INFO:Set up data.
2023-11-21 02:52:04,276:INFO:Set up index.
2023-11-21 02:52:04,951:INFO:Assigning column types.
2023-11-21 02:52:06,482:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-21 02:52:06,502:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 02:52:06,503:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:52:06,517:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:52:06,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:52:06,539:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 02:52:06,540:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:52:06,553:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:52:06,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:52:06,555:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-21 02:52:06,576:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:52:06,589:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:52:06,591:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:52:06,620:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:52:06,638:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:52:06,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:52:06,640:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-21 02:52:06,674:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:52:06,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:52:06,722:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:52:06,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:52:06,724:INFO:Preparing preprocessing pipeline...
2023-11-21 02:52:06,954:INFO:Set up simple imputation.
2023-11-21 02:52:07,196:INFO:Set up column name cleaning.
2023-11-21 02:52:13,599:INFO:Finished creating preprocessing pipeline.
2023-11-21 02:52:13,599:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'R...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-21 02:52:13,599:INFO:Creating final display dataframe.
2023-11-21 02:52:27,286:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     circ_next_12h
2                   Target type            Binary
3           Original data shape    (1593910, 184)
4        Transformed data shape    (1593910, 184)
5   Transformed train set shape    (1048173, 184)
6    Transformed test set shape     (545737, 184)
7              Numeric features               183
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              4389
2023-11-21 02:52:27,323:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:52:27,325:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:52:27,358:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:52:27,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:52:27,360:INFO:setup() successfully completed in 26.86s...............
2023-11-21 02:52:28,054:INFO:Initializing create_model()
2023-11-21 02:52:28,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021179C6AD30>, estimator=lightgbm, fold=None, round=4, cross_validation=False, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-21 02:52:28,055:INFO:Checking exceptions
2023-11-21 02:52:28,064:INFO:Importing libraries
2023-11-21 02:52:28,064:INFO:Copying training dataset
2023-11-21 02:52:29,595:INFO:Defining folds
2023-11-21 02:52:29,595:INFO:Declaring metric variables
2023-11-21 02:52:29,597:INFO:Importing untrained model
2023-11-21 02:52:29,599:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-21 02:52:29,602:INFO:Cross validation set to False
2023-11-21 02:52:29,602:INFO:Fitting Model
2023-11-21 02:52:35,004:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-21 02:52:35,004:INFO:[LightGBM] [Info] Number of positive: 82366, number of negative: 965807
2023-11-21 02:52:35,226:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.050282 seconds.
2023-11-21 02:52:35,226:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-21 02:52:35,226:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-21 02:52:35,228:INFO:[LightGBM] [Info] Total Bins 24874
2023-11-21 02:52:35,228:INFO:[LightGBM] [Info] Number of data points in the train set: 1048173, number of used features: 179
2023-11-21 02:52:35,231:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.078581 -> initscore=-2.461791
2023-11-21 02:52:35,232:INFO:[LightGBM] [Info] Start training from score -2.461791
2023-11-21 02:52:37,001:INFO:Initializing predict_model()
2023-11-21 02:52:37,001:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021179C6AD30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'Rocuronium', 'Diltiazem',
                                             'HeparinSodium',...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002117C4DBAF0>)
2023-11-21 02:52:37,001:INFO:Checking exceptions
2023-11-21 02:52:37,001:INFO:Preloading libraries
2023-11-21 02:52:42,666:INFO:_display_container: 2
2023-11-21 02:52:42,666:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-21 02:52:42,666:INFO:create_model() successfully completed......................................
2023-11-21 02:52:42,998:INFO:Initializing predict_model()
2023-11-21 02:52:42,998:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021179C6AD30>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021115923040>)
2023-11-21 02:52:42,998:INFO:Checking exceptions
2023-11-21 02:52:42,998:INFO:Preloading libraries
2023-11-21 02:52:42,999:INFO:Set up data.
2023-11-21 02:52:43,943:INFO:Set up index.
2023-11-21 02:53:36,354:INFO:PyCaret ClassificationExperiment
2023-11-21 02:53:36,354:INFO:Logging name: clf-default-name
2023-11-21 02:53:36,354:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-21 02:53:36,354:INFO:version 3.1.0
2023-11-21 02:53:36,354:INFO:Initializing setup()
2023-11-21 02:53:36,354:INFO:self.USI: 95c1
2023-11-21 02:53:36,354:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_param', 'y', 'exp_id', 'seed', 'data', 'memory', 'fix_imbalance', 'X_test', 'exp_name_log', 'target_param', '_ml_usecase', 'html_param', 'fold_generator', 'gpu_n_jobs_param', 'X_train', 'y_test', '_available_plots', 'pipeline', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param', 'is_multiclass', 'USI', 'y_train', 'log_plots_param'}
2023-11-21 02:53:36,354:INFO:Checking environment
2023-11-21 02:53:36,354:INFO:python_version: 3.8.18
2023-11-21 02:53:36,354:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-21 02:53:36,354:INFO:machine: AMD64
2023-11-21 02:53:36,354:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-21 02:53:36,357:INFO:Memory: svmem(total=137167351808, available=93971378176, percent=31.5, used=43195973632, free=93971378176)
2023-11-21 02:53:36,357:INFO:Physical Core: 24
2023-11-21 02:53:36,357:INFO:Logical Core: 32
2023-11-21 02:53:36,357:INFO:Checking libraries
2023-11-21 02:53:36,357:INFO:System:
2023-11-21 02:53:36,357:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-21 02:53:36,357:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-21 02:53:36,357:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-21 02:53:36,357:INFO:PyCaret required dependencies:
2023-11-21 02:53:36,358:INFO:                 pip: 23.3
2023-11-21 02:53:36,358:INFO:          setuptools: 68.0.0
2023-11-21 02:53:36,358:INFO:             pycaret: 3.1.0
2023-11-21 02:53:36,358:INFO:             IPython: 8.12.3
2023-11-21 02:53:36,358:INFO:          ipywidgets: 8.1.1
2023-11-21 02:53:36,358:INFO:                tqdm: 4.66.1
2023-11-21 02:53:36,358:INFO:               numpy: 1.23.5
2023-11-21 02:53:36,358:INFO:              pandas: 1.5.3
2023-11-21 02:53:36,358:INFO:              jinja2: 3.1.2
2023-11-21 02:53:36,358:INFO:               scipy: 1.10.1
2023-11-21 02:53:36,358:INFO:              joblib: 1.3.2
2023-11-21 02:53:36,358:INFO:             sklearn: 1.2.2
2023-11-21 02:53:36,358:INFO:                pyod: 1.1.0
2023-11-21 02:53:36,358:INFO:            imblearn: 0.11.0
2023-11-21 02:53:36,358:INFO:   category_encoders: 2.6.2
2023-11-21 02:53:36,358:INFO:            lightgbm: 4.1.0
2023-11-21 02:53:36,358:INFO:               numba: 0.58.1
2023-11-21 02:53:36,358:INFO:            requests: 2.31.0
2023-11-21 02:53:36,358:INFO:          matplotlib: 3.7.3
2023-11-21 02:53:36,358:INFO:          scikitplot: 0.3.7
2023-11-21 02:53:36,358:INFO:         yellowbrick: 1.5
2023-11-21 02:53:36,358:INFO:              plotly: 5.17.0
2023-11-21 02:53:36,358:INFO:    plotly-resampler: Not installed
2023-11-21 02:53:36,358:INFO:             kaleido: 0.2.1
2023-11-21 02:53:36,358:INFO:           schemdraw: 0.15
2023-11-21 02:53:36,358:INFO:         statsmodels: 0.14.0
2023-11-21 02:53:36,358:INFO:              sktime: 0.21.1
2023-11-21 02:53:36,358:INFO:               tbats: 1.1.3
2023-11-21 02:53:36,358:INFO:            pmdarima: 2.0.3
2023-11-21 02:53:36,358:INFO:              psutil: 5.9.6
2023-11-21 02:53:36,358:INFO:          markupsafe: 2.1.3
2023-11-21 02:53:36,358:INFO:             pickle5: Not installed
2023-11-21 02:53:36,358:INFO:         cloudpickle: 3.0.0
2023-11-21 02:53:36,358:INFO:         deprecation: 2.1.0
2023-11-21 02:53:36,358:INFO:              xxhash: 3.4.1
2023-11-21 02:53:36,358:INFO:           wurlitzer: Not installed
2023-11-21 02:53:36,358:INFO:PyCaret optional dependencies:
2023-11-21 02:53:36,358:INFO:                shap: Not installed
2023-11-21 02:53:36,358:INFO:           interpret: Not installed
2023-11-21 02:53:36,358:INFO:                umap: Not installed
2023-11-21 02:53:36,358:INFO:     ydata_profiling: Not installed
2023-11-21 02:53:36,358:INFO:  explainerdashboard: Not installed
2023-11-21 02:53:36,358:INFO:             autoviz: Not installed
2023-11-21 02:53:36,358:INFO:           fairlearn: Not installed
2023-11-21 02:53:36,358:INFO:          deepchecks: Not installed
2023-11-21 02:53:36,358:INFO:             xgboost: 2.0.0
2023-11-21 02:53:36,358:INFO:            catboost: Not installed
2023-11-21 02:53:36,358:INFO:              kmodes: Not installed
2023-11-21 02:53:36,358:INFO:             mlxtend: Not installed
2023-11-21 02:53:36,358:INFO:       statsforecast: Not installed
2023-11-21 02:53:36,358:INFO:        tune_sklearn: Not installed
2023-11-21 02:53:36,358:INFO:                 ray: Not installed
2023-11-21 02:53:36,358:INFO:            hyperopt: Not installed
2023-11-21 02:53:36,358:INFO:              optuna: Not installed
2023-11-21 02:53:36,358:INFO:               skopt: Not installed
2023-11-21 02:53:36,359:INFO:              mlflow: Not installed
2023-11-21 02:53:36,359:INFO:              gradio: Not installed
2023-11-21 02:53:36,359:INFO:             fastapi: Not installed
2023-11-21 02:53:36,359:INFO:             uvicorn: Not installed
2023-11-21 02:53:36,359:INFO:              m2cgen: Not installed
2023-11-21 02:53:36,359:INFO:           evidently: Not installed
2023-11-21 02:53:36,359:INFO:               fugue: Not installed
2023-11-21 02:53:36,359:INFO:           streamlit: Not installed
2023-11-21 02:53:36,359:INFO:             prophet: Not installed
2023-11-21 02:53:36,359:INFO:None
2023-11-21 02:53:36,359:INFO:Set up data.
2023-11-21 02:53:39,213:INFO:Set up folding strategy.
2023-11-21 02:53:39,214:INFO:Set up train/test split.
2023-11-21 02:53:39,214:INFO:Set up data.
2023-11-21 02:53:40,355:INFO:Set up index.
2023-11-21 02:53:41,139:INFO:Assigning column types.
2023-11-21 02:53:42,886:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-21 02:53:42,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 02:53:42,910:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:53:42,923:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:53:42,925:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:53:42,950:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 02:53:42,951:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:53:42,964:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:53:42,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:53:42,965:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-21 02:53:42,987:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:53:42,999:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:53:43,001:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:53:43,023:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:53:43,036:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:53:43,038:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:53:43,038:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-21 02:53:43,072:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:53:43,073:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:53:43,106:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:53:43,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:53:43,108:INFO:Preparing preprocessing pipeline...
2023-11-21 02:53:43,343:INFO:Set up simple imputation.
2023-11-21 02:53:43,571:INFO:Set up column name cleaning.
2023-11-21 02:53:51,164:INFO:Finished creating preprocessing pipeline.
2023-11-21 02:53:51,167:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'R...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-21 02:53:51,167:INFO:Creating final display dataframe.
2023-11-21 02:54:05,437:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     circ_next_12h
2                   Target type            Binary
3           Original data shape    (1769184, 184)
4        Transformed data shape    (1769184, 184)
5   Transformed train set shape    (1223447, 184)
6    Transformed test set shape     (545737, 184)
7              Numeric features               183
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              95c1
2023-11-21 02:54:05,474:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:54:05,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:54:05,509:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:54:05,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:54:05,511:INFO:setup() successfully completed in 29.45s...............
2023-11-21 02:54:06,229:INFO:Initializing create_model()
2023-11-21 02:54:06,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211F70CCC10>, estimator=lightgbm, fold=None, round=4, cross_validation=False, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-21 02:54:06,230:INFO:Checking exceptions
2023-11-21 02:54:06,239:INFO:Importing libraries
2023-11-21 02:54:06,239:INFO:Copying training dataset
2023-11-21 02:54:07,978:INFO:Defining folds
2023-11-21 02:54:07,978:INFO:Declaring metric variables
2023-11-21 02:54:07,980:INFO:Importing untrained model
2023-11-21 02:54:07,983:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-21 02:54:07,985:INFO:Cross validation set to False
2023-11-21 02:54:07,985:INFO:Fitting Model
2023-11-21 02:54:14,223:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-21 02:54:14,224:INFO:[LightGBM] [Info] Number of positive: 253431, number of negative: 970016
2023-11-21 02:54:14,476:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.063062 seconds.
2023-11-21 02:54:14,476:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-21 02:54:14,476:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-21 02:54:14,478:INFO:[LightGBM] [Info] Total Bins 27178
2023-11-21 02:54:14,479:INFO:[LightGBM] [Info] Number of data points in the train set: 1223447, number of used features: 179
2023-11-21 02:54:14,483:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.207145 -> initscore=-1.342221
2023-11-21 02:54:14,483:INFO:[LightGBM] [Info] Start training from score -1.342221
2023-11-21 02:54:16,766:INFO:Initializing predict_model()
2023-11-21 02:54:16,766:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211F70CCC10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'Rocuronium', 'Diltiazem',
                                             'HeparinSodium',...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002117B73A1F0>)
2023-11-21 02:54:16,766:INFO:Checking exceptions
2023-11-21 02:54:16,766:INFO:Preloading libraries
2023-11-21 02:54:22,582:INFO:_display_container: 2
2023-11-21 02:54:22,582:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-21 02:54:22,582:INFO:create_model() successfully completed......................................
2023-11-21 02:54:22,700:INFO:Initializing predict_model()
2023-11-21 02:54:22,700:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000211F70CCC10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021179C700D0>)
2023-11-21 02:54:22,700:INFO:Checking exceptions
2023-11-21 02:54:22,700:INFO:Preloading libraries
2023-11-21 02:54:22,700:INFO:Set up data.
2023-11-21 02:54:23,617:INFO:Set up index.
2023-11-21 02:55:10,748:INFO:PyCaret ClassificationExperiment
2023-11-21 02:55:10,748:INFO:Logging name: clf-default-name
2023-11-21 02:55:10,748:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-21 02:55:10,748:INFO:version 3.1.0
2023-11-21 02:55:10,748:INFO:Initializing setup()
2023-11-21 02:55:10,748:INFO:self.USI: a609
2023-11-21 02:55:10,748:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_param', 'y', 'exp_id', 'seed', 'data', 'memory', 'fix_imbalance', 'X_test', 'exp_name_log', 'target_param', '_ml_usecase', 'html_param', 'fold_generator', 'gpu_n_jobs_param', 'X_train', 'y_test', '_available_plots', 'pipeline', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param', 'is_multiclass', 'USI', 'y_train', 'log_plots_param'}
2023-11-21 02:55:10,748:INFO:Checking environment
2023-11-21 02:55:10,748:INFO:python_version: 3.8.18
2023-11-21 02:55:10,748:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-21 02:55:10,748:INFO:machine: AMD64
2023-11-21 02:55:10,748:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-21 02:55:10,751:INFO:Memory: svmem(total=137167351808, available=93536190464, percent=31.8, used=43631161344, free=93536190464)
2023-11-21 02:55:10,751:INFO:Physical Core: 24
2023-11-21 02:55:10,751:INFO:Logical Core: 32
2023-11-21 02:55:10,751:INFO:Checking libraries
2023-11-21 02:55:10,751:INFO:System:
2023-11-21 02:55:10,751:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-21 02:55:10,751:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-21 02:55:10,751:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-21 02:55:10,751:INFO:PyCaret required dependencies:
2023-11-21 02:55:10,751:INFO:                 pip: 23.3
2023-11-21 02:55:10,751:INFO:          setuptools: 68.0.0
2023-11-21 02:55:10,751:INFO:             pycaret: 3.1.0
2023-11-21 02:55:10,751:INFO:             IPython: 8.12.3
2023-11-21 02:55:10,751:INFO:          ipywidgets: 8.1.1
2023-11-21 02:55:10,751:INFO:                tqdm: 4.66.1
2023-11-21 02:55:10,751:INFO:               numpy: 1.23.5
2023-11-21 02:55:10,751:INFO:              pandas: 1.5.3
2023-11-21 02:55:10,751:INFO:              jinja2: 3.1.2
2023-11-21 02:55:10,751:INFO:               scipy: 1.10.1
2023-11-21 02:55:10,751:INFO:              joblib: 1.3.2
2023-11-21 02:55:10,751:INFO:             sklearn: 1.2.2
2023-11-21 02:55:10,751:INFO:                pyod: 1.1.0
2023-11-21 02:55:10,751:INFO:            imblearn: 0.11.0
2023-11-21 02:55:10,751:INFO:   category_encoders: 2.6.2
2023-11-21 02:55:10,751:INFO:            lightgbm: 4.1.0
2023-11-21 02:55:10,751:INFO:               numba: 0.58.1
2023-11-21 02:55:10,751:INFO:            requests: 2.31.0
2023-11-21 02:55:10,751:INFO:          matplotlib: 3.7.3
2023-11-21 02:55:10,751:INFO:          scikitplot: 0.3.7
2023-11-21 02:55:10,751:INFO:         yellowbrick: 1.5
2023-11-21 02:55:10,751:INFO:              plotly: 5.17.0
2023-11-21 02:55:10,751:INFO:    plotly-resampler: Not installed
2023-11-21 02:55:10,751:INFO:             kaleido: 0.2.1
2023-11-21 02:55:10,751:INFO:           schemdraw: 0.15
2023-11-21 02:55:10,751:INFO:         statsmodels: 0.14.0
2023-11-21 02:55:10,751:INFO:              sktime: 0.21.1
2023-11-21 02:55:10,751:INFO:               tbats: 1.1.3
2023-11-21 02:55:10,751:INFO:            pmdarima: 2.0.3
2023-11-21 02:55:10,751:INFO:              psutil: 5.9.6
2023-11-21 02:55:10,751:INFO:          markupsafe: 2.1.3
2023-11-21 02:55:10,751:INFO:             pickle5: Not installed
2023-11-21 02:55:10,751:INFO:         cloudpickle: 3.0.0
2023-11-21 02:55:10,751:INFO:         deprecation: 2.1.0
2023-11-21 02:55:10,751:INFO:              xxhash: 3.4.1
2023-11-21 02:55:10,751:INFO:           wurlitzer: Not installed
2023-11-21 02:55:10,751:INFO:PyCaret optional dependencies:
2023-11-21 02:55:10,752:INFO:                shap: Not installed
2023-11-21 02:55:10,752:INFO:           interpret: Not installed
2023-11-21 02:55:10,752:INFO:                umap: Not installed
2023-11-21 02:55:10,752:INFO:     ydata_profiling: Not installed
2023-11-21 02:55:10,752:INFO:  explainerdashboard: Not installed
2023-11-21 02:55:10,752:INFO:             autoviz: Not installed
2023-11-21 02:55:10,752:INFO:           fairlearn: Not installed
2023-11-21 02:55:10,752:INFO:          deepchecks: Not installed
2023-11-21 02:55:10,752:INFO:             xgboost: 2.0.0
2023-11-21 02:55:10,752:INFO:            catboost: Not installed
2023-11-21 02:55:10,752:INFO:              kmodes: Not installed
2023-11-21 02:55:10,752:INFO:             mlxtend: Not installed
2023-11-21 02:55:10,752:INFO:       statsforecast: Not installed
2023-11-21 02:55:10,752:INFO:        tune_sklearn: Not installed
2023-11-21 02:55:10,752:INFO:                 ray: Not installed
2023-11-21 02:55:10,752:INFO:            hyperopt: Not installed
2023-11-21 02:55:10,752:INFO:              optuna: Not installed
2023-11-21 02:55:10,752:INFO:               skopt: Not installed
2023-11-21 02:55:10,752:INFO:              mlflow: Not installed
2023-11-21 02:55:10,752:INFO:              gradio: Not installed
2023-11-21 02:55:10,752:INFO:             fastapi: Not installed
2023-11-21 02:55:10,752:INFO:             uvicorn: Not installed
2023-11-21 02:55:10,752:INFO:              m2cgen: Not installed
2023-11-21 02:55:10,752:INFO:           evidently: Not installed
2023-11-21 02:55:10,752:INFO:               fugue: Not installed
2023-11-21 02:55:10,752:INFO:           streamlit: Not installed
2023-11-21 02:55:10,752:INFO:             prophet: Not installed
2023-11-21 02:55:10,752:INFO:None
2023-11-21 02:55:10,752:INFO:Set up data.
2023-11-21 02:55:12,838:INFO:Set up folding strategy.
2023-11-21 02:55:12,838:INFO:Set up train/test split.
2023-11-21 02:55:12,838:INFO:Set up data.
2023-11-21 02:55:13,945:INFO:Set up index.
2023-11-21 02:55:14,680:INFO:Assigning column types.
2023-11-21 02:55:16,462:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-21 02:55:16,483:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 02:55:16,483:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:55:16,496:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:55:16,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:55:16,518:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 02:55:16,518:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:55:16,531:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:55:16,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:55:16,533:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-21 02:55:16,554:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:55:16,567:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:55:16,568:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:55:16,589:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 02:55:16,602:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:55:16,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:55:16,603:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-21 02:55:16,638:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:55:16,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:55:16,673:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:55:16,675:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:55:16,675:INFO:Preparing preprocessing pipeline...
2023-11-21 02:55:16,911:INFO:Set up simple imputation.
2023-11-21 02:55:17,141:INFO:Set up column name cleaning.
2023-11-21 02:55:24,614:INFO:Finished creating preprocessing pipeline.
2023-11-21 02:55:24,630:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'R...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-21 02:55:24,630:INFO:Creating final display dataframe.
2023-11-21 02:55:38,270:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     circ_next_12h
2                   Target type            Binary
3           Original data shape    (1773472, 184)
4        Transformed data shape    (1773472, 184)
5   Transformed train set shape    (1227735, 184)
6    Transformed test set shape     (545737, 184)
7              Numeric features               183
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              a609
2023-11-21 02:55:38,307:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:55:38,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:55:38,341:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 02:55:38,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 02:55:38,343:INFO:setup() successfully completed in 27.83s...............
2023-11-21 02:55:39,090:INFO:Initializing create_model()
2023-11-21 02:55:39,090:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021179D7AC40>, estimator=lightgbm, fold=None, round=4, cross_validation=False, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-21 02:55:39,090:INFO:Checking exceptions
2023-11-21 02:55:39,099:INFO:Importing libraries
2023-11-21 02:55:39,099:INFO:Copying training dataset
2023-11-21 02:55:40,809:INFO:Defining folds
2023-11-21 02:55:40,809:INFO:Declaring metric variables
2023-11-21 02:55:40,811:INFO:Importing untrained model
2023-11-21 02:55:40,813:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-21 02:55:40,817:INFO:Cross validation set to False
2023-11-21 02:55:40,817:INFO:Fitting Model
2023-11-21 02:55:46,734:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-21 02:55:46,734:INFO:[LightGBM] [Info] Number of positive: 256070, number of negative: 971665
2023-11-21 02:55:46,987:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.064242 seconds.
2023-11-21 02:55:46,987:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-21 02:55:46,987:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-21 02:55:46,989:INFO:[LightGBM] [Info] Total Bins 27192
2023-11-21 02:55:46,990:INFO:[LightGBM] [Info] Number of data points in the train set: 1227735, number of used features: 179
2023-11-21 02:55:46,993:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.208571 -> initscore=-1.333560
2023-11-21 02:55:46,994:INFO:[LightGBM] [Info] Start training from score -1.333560
2023-11-21 02:55:48,989:INFO:Initializing predict_model()
2023-11-21 02:55:48,989:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021179D7AC40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'Rocuronium', 'Diltiazem',
                                             'HeparinSodium',...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021179CF5EE0>)
2023-11-21 02:55:48,989:INFO:Checking exceptions
2023-11-21 02:55:48,989:INFO:Preloading libraries
2023-11-21 02:55:54,810:INFO:_display_container: 2
2023-11-21 02:55:54,810:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-21 02:55:54,810:INFO:create_model() successfully completed......................................
2023-11-21 02:55:54,935:INFO:Initializing predict_model()
2023-11-21 02:55:54,935:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021179D7AC40>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002117B7EC1F0>)
2023-11-21 02:55:54,935:INFO:Checking exceptions
2023-11-21 02:55:54,935:INFO:Preloading libraries
2023-11-21 02:55:54,936:INFO:Set up data.
2023-11-21 02:55:55,876:INFO:Set up index.
2023-11-21 03:55:47,396:INFO:PyCaret ClassificationExperiment
2023-11-21 03:55:47,396:INFO:Logging name: clf-default-name
2023-11-21 03:55:47,396:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-11-21 03:55:47,396:INFO:version 3.1.0
2023-11-21 03:55:47,396:INFO:Initializing setup()
2023-11-21 03:55:47,396:INFO:self.USI: c8a9
2023-11-21 03:55:47,396:INFO:self._variable_keys: {'X', 'logging_param', 'idx', 'gpu_param', 'y', 'exp_id', 'seed', 'data', 'memory', 'fix_imbalance', 'X_test', 'exp_name_log', 'target_param', '_ml_usecase', 'html_param', 'fold_generator', 'gpu_n_jobs_param', 'X_train', 'y_test', '_available_plots', 'pipeline', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param', 'is_multiclass', 'USI', 'y_train', 'log_plots_param'}
2023-11-21 03:55:47,396:INFO:Checking environment
2023-11-21 03:55:47,396:INFO:python_version: 3.8.18
2023-11-21 03:55:47,396:INFO:python_build: ('default', 'Sep 11 2023 13:39:12')
2023-11-21 03:55:47,396:INFO:machine: AMD64
2023-11-21 03:55:47,396:INFO:platform: Windows-10-10.0.22621-SP0
2023-11-21 03:55:47,399:INFO:Memory: svmem(total=137167351808, available=93611360256, percent=31.8, used=43555991552, free=93611360256)
2023-11-21 03:55:47,399:INFO:Physical Core: 24
2023-11-21 03:55:47,399:INFO:Logical Core: 32
2023-11-21 03:55:47,399:INFO:Checking libraries
2023-11-21 03:55:47,399:INFO:System:
2023-11-21 03:55:47,399:INFO:    python: 3.8.18 (default, Sep 11 2023, 13:39:12) [MSC v.1916 64 bit (AMD64)]
2023-11-21 03:55:47,399:INFO:executable: c:\Users\DAHS\anaconda3\envs\pycaret\python.exe
2023-11-21 03:55:47,399:INFO:   machine: Windows-10-10.0.22621-SP0
2023-11-21 03:55:47,399:INFO:PyCaret required dependencies:
2023-11-21 03:55:47,399:INFO:                 pip: 23.3
2023-11-21 03:55:47,399:INFO:          setuptools: 68.0.0
2023-11-21 03:55:47,399:INFO:             pycaret: 3.1.0
2023-11-21 03:55:47,399:INFO:             IPython: 8.12.3
2023-11-21 03:55:47,399:INFO:          ipywidgets: 8.1.1
2023-11-21 03:55:47,399:INFO:                tqdm: 4.66.1
2023-11-21 03:55:47,399:INFO:               numpy: 1.23.5
2023-11-21 03:55:47,399:INFO:              pandas: 1.5.3
2023-11-21 03:55:47,399:INFO:              jinja2: 3.1.2
2023-11-21 03:55:47,400:INFO:               scipy: 1.10.1
2023-11-21 03:55:47,400:INFO:              joblib: 1.3.2
2023-11-21 03:55:47,400:INFO:             sklearn: 1.2.2
2023-11-21 03:55:47,400:INFO:                pyod: 1.1.0
2023-11-21 03:55:47,400:INFO:            imblearn: 0.11.0
2023-11-21 03:55:47,400:INFO:   category_encoders: 2.6.2
2023-11-21 03:55:47,400:INFO:            lightgbm: 4.1.0
2023-11-21 03:55:47,400:INFO:               numba: 0.58.1
2023-11-21 03:55:47,400:INFO:            requests: 2.31.0
2023-11-21 03:55:47,400:INFO:          matplotlib: 3.7.3
2023-11-21 03:55:47,400:INFO:          scikitplot: 0.3.7
2023-11-21 03:55:47,400:INFO:         yellowbrick: 1.5
2023-11-21 03:55:47,400:INFO:              plotly: 5.17.0
2023-11-21 03:55:47,400:INFO:    plotly-resampler: Not installed
2023-11-21 03:55:47,400:INFO:             kaleido: 0.2.1
2023-11-21 03:55:47,400:INFO:           schemdraw: 0.15
2023-11-21 03:55:47,400:INFO:         statsmodels: 0.14.0
2023-11-21 03:55:47,400:INFO:              sktime: 0.21.1
2023-11-21 03:55:47,400:INFO:               tbats: 1.1.3
2023-11-21 03:55:47,400:INFO:            pmdarima: 2.0.3
2023-11-21 03:55:47,400:INFO:              psutil: 5.9.6
2023-11-21 03:55:47,400:INFO:          markupsafe: 2.1.3
2023-11-21 03:55:47,400:INFO:             pickle5: Not installed
2023-11-21 03:55:47,400:INFO:         cloudpickle: 3.0.0
2023-11-21 03:55:47,400:INFO:         deprecation: 2.1.0
2023-11-21 03:55:47,400:INFO:              xxhash: 3.4.1
2023-11-21 03:55:47,400:INFO:           wurlitzer: Not installed
2023-11-21 03:55:47,400:INFO:PyCaret optional dependencies:
2023-11-21 03:55:47,400:INFO:                shap: Not installed
2023-11-21 03:55:47,400:INFO:           interpret: Not installed
2023-11-21 03:55:47,400:INFO:                umap: Not installed
2023-11-21 03:55:47,400:INFO:     ydata_profiling: Not installed
2023-11-21 03:55:47,400:INFO:  explainerdashboard: Not installed
2023-11-21 03:55:47,400:INFO:             autoviz: Not installed
2023-11-21 03:55:47,400:INFO:           fairlearn: Not installed
2023-11-21 03:55:47,400:INFO:          deepchecks: Not installed
2023-11-21 03:55:47,400:INFO:             xgboost: 2.0.0
2023-11-21 03:55:47,400:INFO:            catboost: Not installed
2023-11-21 03:55:47,400:INFO:              kmodes: Not installed
2023-11-21 03:55:47,400:INFO:             mlxtend: Not installed
2023-11-21 03:55:47,400:INFO:       statsforecast: Not installed
2023-11-21 03:55:47,400:INFO:        tune_sklearn: Not installed
2023-11-21 03:55:47,400:INFO:                 ray: Not installed
2023-11-21 03:55:47,400:INFO:            hyperopt: Not installed
2023-11-21 03:55:47,400:INFO:              optuna: Not installed
2023-11-21 03:55:47,400:INFO:               skopt: Not installed
2023-11-21 03:55:47,400:INFO:              mlflow: Not installed
2023-11-21 03:55:47,400:INFO:              gradio: Not installed
2023-11-21 03:55:47,400:INFO:             fastapi: Not installed
2023-11-21 03:55:47,400:INFO:             uvicorn: Not installed
2023-11-21 03:55:47,400:INFO:              m2cgen: Not installed
2023-11-21 03:55:47,400:INFO:           evidently: Not installed
2023-11-21 03:55:47,400:INFO:               fugue: Not installed
2023-11-21 03:55:47,400:INFO:           streamlit: Not installed
2023-11-21 03:55:47,401:INFO:             prophet: Not installed
2023-11-21 03:55:47,401:INFO:None
2023-11-21 03:55:47,401:INFO:Set up data.
2023-11-21 03:55:50,207:INFO:Set up folding strategy.
2023-11-21 03:55:50,207:INFO:Set up train/test split.
2023-11-21 03:55:50,207:INFO:Set up data.
2023-11-21 03:55:51,352:INFO:Set up index.
2023-11-21 03:55:52,073:INFO:Assigning column types.
2023-11-21 03:55:53,703:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-11-21 03:55:53,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 03:55:53,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 03:55:53,738:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 03:55:53,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 03:55:53,759:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-11-21 03:55:53,760:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 03:55:53,773:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 03:55:53,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 03:55:53,775:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-11-21 03:55:53,795:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 03:55:53,806:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 03:55:53,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 03:55:53,827:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-11-21 03:55:53,839:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 03:55:53,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 03:55:53,840:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-11-21 03:55:53,872:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 03:55:53,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 03:55:53,904:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 03:55:53,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 03:55:53,906:INFO:Preparing preprocessing pipeline...
2023-11-21 03:55:54,136:INFO:Set up simple imputation.
2023-11-21 03:55:54,359:INFO:Set up column name cleaning.
2023-11-21 03:56:01,604:INFO:Finished creating preprocessing pipeline.
2023-11-21 03:56:01,607:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\DAHS\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'R...
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-11-21 03:56:01,607:INFO:Creating final display dataframe.
2023-11-21 03:56:15,457:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target     circ_next_12h
2                   Target type            Binary
3           Original data shape    (1769184, 184)
4        Transformed data shape    (1769184, 184)
5   Transformed train set shape    (1223447, 184)
6    Transformed test set shape     (545737, 184)
7              Numeric features               183
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              c8a9
2023-11-21 03:56:15,492:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 03:56:15,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 03:56:15,525:INFO:Soft dependency imported: xgboost: 2.0.0
2023-11-21 03:56:15,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-11-21 03:56:15,526:INFO:setup() successfully completed in 28.37s...............
2023-11-21 03:56:16,207:INFO:Initializing create_model()
2023-11-21 03:56:16,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021179D9B760>, estimator=lightgbm, fold=None, round=4, cross_validation=False, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={'learning_rate': 0.1})
2023-11-21 03:56:16,207:INFO:Checking exceptions
2023-11-21 03:56:16,216:INFO:Importing libraries
2023-11-21 03:56:16,216:INFO:Copying training dataset
2023-11-21 03:56:17,898:INFO:Defining folds
2023-11-21 03:56:17,898:INFO:Declaring metric variables
2023-11-21 03:56:17,901:INFO:Importing untrained model
2023-11-21 03:56:17,903:INFO:Light Gradient Boosting Machine Imported successfully
2023-11-21 03:56:17,906:INFO:Cross validation set to False
2023-11-21 03:56:17,906:INFO:Fitting Model
2023-11-21 03:56:23,949:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2023-11-21 03:56:23,950:INFO:[LightGBM] [Info] Number of positive: 253431, number of negative: 970016
2023-11-21 03:56:24,203:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.067805 seconds.
2023-11-21 03:56:24,203:INFO:You can set `force_row_wise=true` to remove the overhead.
2023-11-21 03:56:24,203:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2023-11-21 03:56:24,205:INFO:[LightGBM] [Info] Total Bins 27178
2023-11-21 03:56:24,205:INFO:[LightGBM] [Info] Number of data points in the train set: 1223447, number of used features: 179
2023-11-21 03:56:24,209:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.207145 -> initscore=-1.342221
2023-11-21 03:56:24,209:INFO:[LightGBM] [Info] Start training from score -1.342221
2023-11-21 03:56:26,376:INFO:Initializing predict_model()
2023-11-21 03:56:26,377:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021179D9B760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_since_ICU_admission',
                                             'Phenylephrine',
                                             'Potassium_Chloride',
                                             'Dextrose_5%', 'Milrinone',
                                             'Phenylephrine (50/250)',
                                             'Norepinephrine', 'Cisatracurium',
                                             'Dopamine', 'Epinephrine',
                                             'Nitroglycerin', 'Vasopressin',
                                             'Rocuronium', 'Diltiazem',
                                             'HeparinSodium',...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=123,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002111563E040>)
2023-11-21 03:56:26,377:INFO:Checking exceptions
2023-11-21 03:56:26,377:INFO:Preloading libraries
2023-11-21 03:56:32,149:INFO:_display_container: 2
2023-11-21 03:56:32,149:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-11-21 03:56:32,149:INFO:create_model() successfully completed......................................
2023-11-21 03:56:45,581:INFO:Initializing predict_model()
2023-11-21 03:56:45,581:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000021179D9B760>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002111563E040>)
2023-11-21 03:56:45,582:INFO:Checking exceptions
2023-11-21 03:56:45,582:INFO:Preloading libraries
2023-11-21 03:56:45,583:INFO:Set up data.
2023-11-21 03:56:46,471:INFO:Set up index.
2023-11-21 04:07:56,363:WARNING:C:\Users\DAHS\AppData\Local\Temp\ipykernel_15924\690601789.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  sample['circ_event'] = (sample['Annotation'] == 'circ') & (sample['Annotation'].shift(1) != 'circ')

